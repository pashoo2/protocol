import { TTypedArrays } from 'types/main.types';
import {
  CRYPTO_UTIL_KEYPAIR_PUBLIC_KEY_NAME,
  CRYPTO_UTIL_KEYPAIR_PRIVATE_KEY_NAME,
} from './crypto-utils.const';

export type TCRYPTO_UTIL_IMPORT_KEY_TYPES =
  | JsonWebKey
  | Int8Array
  | Int16Array
  | Int32Array
  | Uint8Array
  | Uint16Array
  | Uint32Array
  | Uint8ClampedArray
  | Float32Array
  | Float64Array
  | DataView
  | ArrayBuffer;

export type TCRYPTO_UTIL_KEY_EXPORT_FORMAT_TYPE = object;

export type TCRYPTO_UTIL_KEYPAIR_EXPORT_FORMAT_TYPE = {
  [CRYPTO_UTIL_KEYPAIR_PUBLIC_KEY_NAME]: TCRYPTO_UTIL_IMPORT_KEY_TYPES;
  [CRYPTO_UTIL_KEYPAIR_PRIVATE_KEY_NAME]: TCRYPTO_UTIL_IMPORT_KEY_TYPES;
};

export type TCRYPTO_UTIL_KEYPAIR_IMPORT_FORMAT_TYPE = {
  [CRYPTO_UTIL_KEYPAIR_PUBLIC_KEY_NAME]: CryptoKey;
  [CRYPTO_UTIL_KEYPAIR_PRIVATE_KEY_NAME]: CryptoKey;
};

export type TCRYPTO_UTIL_ENCRYPT_DATA_TYPES_NATIVE = TTypedArrays;

export type TCRYPTO_UTIL_ENCRYPT_DATA_TYPES =
  | object
  | string
  | number
  | TCRYPTO_UTIL_ENCRYPT_DATA_TYPES_NATIVE;

export type TCRYPTO_UTIL_ENCRYPT_KEY_TYPES =
  | CryptoKey
  | CryptoKeyPair
  | string
  | TCRYPTO_UTIL_KEYPAIR_EXPORT_FORMAT_TYPE
  | TCRYPTO_UTIL_KEYPAIR_IMPORT_FORMAT_TYPE;

export type TCRYPTO_UTIL_DECRYPT_KEY_TYPES =
  | CryptoKey
  | CryptoKeyPair
  | string
  | TCRYPTO_UTIL_KEYPAIR_EXPORT_FORMAT_TYPE
  | TCRYPTO_UTIL_KEYPAIR_IMPORT_FORMAT_TYPE;

export type TCRYPTO_UTIL_DECRYPT_DATA_TYPES_NATIVE = TTypedArrays;

export type TCRYPTO_UTIL_DECRYPT_DATA_TYPES = string | TTypedArrays;
