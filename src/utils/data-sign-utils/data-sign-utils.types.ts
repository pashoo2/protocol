import { TTypedArrays } from 'types/main.types';
import {
  DATA_SIGN_CRYPTO_UTIL_KEYPAIR_PUBLIC_KEY_NAME,
  DATA_SIGN_CRYPTO_UTIL_KEYPAIR_PRIVATE_KEY_NAME,
} from './data-sign-utils.const';

export type TDATA_SIGN_UTIL_KEY_EXPORT_FORMAT_TYPE = object;

export type TDATA_SIGN_UTIL_KEYPAIR_EXPORT_FORMAT_TYPE = {
  [DATA_SIGN_CRYPTO_UTIL_KEYPAIR_PUBLIC_KEY_NAME]: object;
  [DATA_SIGN_CRYPTO_UTIL_KEYPAIR_PRIVATE_KEY_NAME]: object;
};

export type TDATA_SIGN_UTIL_KEYPAIR_IMPORT_FORMAT_TYPE = {
  [DATA_SIGN_CRYPTO_UTIL_KEYPAIR_PUBLIC_KEY_NAME]: CryptoKey;
  [DATA_SIGN_CRYPTO_UTIL_KEYPAIR_PRIVATE_KEY_NAME]: CryptoKey;
};

export type TDATA_SIGN_UTIL_SIGN_DATA_TYPES_NATIVE = TTypedArrays;

export type TDATA_SIGN_UTIL_SIGN_DATA_TYPES =
  | object
  | string
  | number
  | TDATA_SIGN_UTIL_SIGN_DATA_TYPES_NATIVE;

export type TDATA_SIGN_UTIL_SIGN_KEY_TYPES =
  | CryptoKey
  | CryptoKeyPair
  | string
  | TDATA_SIGN_UTIL_KEYPAIR_EXPORT_FORMAT_TYPE
  | TDATA_SIGN_UTIL_KEYPAIR_IMPORT_FORMAT_TYPE;

export type TDATA_SIGN_UTIL_VERIFY_KEY_TYPES =
  | CryptoKey
  | CryptoKeyPair
  | string
  | TDATA_SIGN_UTIL_KEYPAIR_EXPORT_FORMAT_TYPE
  | TDATA_SIGN_UTIL_KEYPAIR_IMPORT_FORMAT_TYPE;

export type TDATA_SIGN_UTIL_VERIFY_DATA_TYPES_NATIVE = TTypedArrays;

export type TDATA_SIGN_UTIL_VERIFY_DATA_TYPES = string | TTypedArrays;
