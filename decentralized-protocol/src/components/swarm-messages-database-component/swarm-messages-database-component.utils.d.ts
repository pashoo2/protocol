import { ESwarmStoreConnector } from '../../classes/swarm-store-class/swarm-store-class.const';
import { TSwarmMessageDatabaseMessagesCached, ISwarmMessagesDatabaseCacheOptions, ISwarmMessagesDatabaseCache } from '../../classes/swarm-messages-database/swarm-messages-database.types';
import { ISwarmMessageInstanceDecrypted } from '../../classes/swarm-message/swarm-message-constructor.types';
import { ISwarmMessagesDatabaseMessageDescription, ISwarmMessagesDatabaseDeleteMessageDescription } from './swarm-messages-database-component.types';
import { TSwarmStoreDatabaseOptions } from '../../classes/swarm-store-class/swarm-store-class.types';
import { ISwarmMessagesDatabaseConnector } from '../../classes/swarm-messages-database/swarm-messages-database.types';
import { ISwarmMessagesDatabaseMessagesCollector } from '../../classes/swarm-messages-database/swarm-messages-database.messages-collector.types';
export declare const setMessageListener: <P extends ESwarmStoreConnector, T extends string, DbType extends import("../..").ESwarmStoreConnectorOrbitDbDatabaseType, DBO extends TSwarmStoreDatabaseOptions<P, T, DbType>, MD extends ISwarmMessageInstanceDecrypted, SMSM extends ISwarmMessagesDatabaseMessagesCollector<P, DbType, MD>, DCO extends ISwarmMessagesDatabaseCacheOptions<P, DbType, MD, SMSM>, DCCRT extends ISwarmMessagesDatabaseCache<P, T, DbType, DBO, MD, SMSM>, DB extends ISwarmMessagesDatabaseConnector<P, T, DbType, DBO, never, never, never, never, never, never, never, never, never, never, MD, SMSM, DCO, DCCRT, never>>(db: DB, messagesListener: (message: ISwarmMessagesDatabaseMessageDescription<P>) => void) => (() => void);
export declare const setMessageDeleteListener: <P extends ESwarmStoreConnector, T extends string, DbType extends import("../..").ESwarmStoreConnectorOrbitDbDatabaseType, DBO extends TSwarmStoreDatabaseOptions<P, T, DbType>, MD extends ISwarmMessageInstanceDecrypted, SMSM extends ISwarmMessagesDatabaseMessagesCollector<P, DbType, MD>, DCO extends ISwarmMessagesDatabaseCacheOptions<P, DbType, MD, SMSM>, DCCRT extends ISwarmMessagesDatabaseCache<P, T, DbType, DBO, MD, SMSM>, DB extends ISwarmMessagesDatabaseConnector<P, T, DbType, DBO, never, never, never, never, never, never, never, never, never, never, MD, SMSM, DCO, DCCRT, never>>(db: DB, messagesDeleteListener: (message: ISwarmMessagesDatabaseDeleteMessageDescription<P>) => void) => (() => void);
export declare const setCacheUpdateListener: <P extends ESwarmStoreConnector, T extends string, DbType extends import("../..").ESwarmStoreConnectorOrbitDbDatabaseType, DBO extends TSwarmStoreDatabaseOptions<P, T, DbType>, MD extends ISwarmMessageInstanceDecrypted, SMSM extends ISwarmMessagesDatabaseMessagesCollector<P, DbType, MD>, DCO extends ISwarmMessagesDatabaseCacheOptions<P, DbType, MD, SMSM>, DCCRT extends ISwarmMessagesDatabaseCache<P, T, DbType, DBO, MD, SMSM>, DB extends ISwarmMessagesDatabaseConnector<P, T, DbType, DBO, never, never, never, never, never, never, never, never, never, never, MD, SMSM, DCO, DCCRT, never>>(db: DB, cacheUpdateListener: (messages: TSwarmMessageDatabaseMessagesCached<P, DbType, MD>) => unknown) => (() => void);
//# sourceMappingURL=swarm-messages-database-component.utils.d.ts.map