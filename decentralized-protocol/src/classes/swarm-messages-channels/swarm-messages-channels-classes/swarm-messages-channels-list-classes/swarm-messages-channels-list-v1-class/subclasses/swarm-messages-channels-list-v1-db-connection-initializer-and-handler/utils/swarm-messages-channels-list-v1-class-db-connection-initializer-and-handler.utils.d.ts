import { ESwarmStoreConnector } from '../../../../../../../swarm-store-class/swarm-store-class.const';
import { TSwarmMessageSerialized, ISwarmMessageInstanceDecrypted } from '../../../../../../../swarm-message/swarm-message-constructor.types';
import { ISwarmStoreDBOGrandAccessCallbackBaseContext } from '../../../../../../../swarm-store-class/swarm-store-connectors/swarm-store-connetors.types';
import { TSwrmMessagesChannelsListDBOWithGrantAccess } from '../../../../../../types/swarm-messages-channels-list-instance.types';
import { TSwarmMessageUserIdentifierSerialized } from '../../../../../../../central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-validators/central-authority-common-validator-user-identifier/central-authority-common-validator-user-identifier.types';
import { TSwarmStoreDatabaseEntryOperation, TSwarmStoreDatabaseEntityKey } from '../../../../../../../swarm-store-class/swarm-store-class.types';
import { ISwarmMessagesChannelsListV1GrantAccessVariableArguments, ISwarmMessagesChannelsListV1GrantAccessConstantArguments } from '../../../types/swarm-messages-channels-list-v1-class.types';
import { IValidatorOfSwarmMessageWithChannelDescriptionArgument } from '../../../../../../types/swarm-messages-channels-validation.types';
import { ICreateGrantAccessCallbackByConstantArgumentsAndMessageWithChannelDescriptionValidatorArguments } from '../../../types/swarm-messages-channels-list-v1-class-db-connection-initializer-and-handler.types';
export declare function getVariableArgumentsWithoutExistingChannelDescriptionForGrantAccessValidator<P extends ESwarmStoreConnector, T extends TSwarmMessageSerialized, MD extends ISwarmMessageInstanceDecrypted, CTX extends ISwarmStoreDBOGrandAccessCallbackBaseContext, DBO extends TSwrmMessagesChannelsListDBOWithGrantAccess<P, T, MD, CTX>>({ payload, userId, key, operation, time, }: {
    payload: T | MD;
    userId: TSwarmMessageUserIdentifierSerialized;
    key: TSwarmStoreDatabaseEntityKey<P> | undefined;
    operation: TSwarmStoreDatabaseEntryOperation<P> | undefined;
    time: number;
}): Omit<Required<ISwarmMessagesChannelsListV1GrantAccessVariableArguments<P, T, MD, CTX, DBO>>, 'channelExistingDescription'>;
export declare function getArgumentsForSwarmMessageWithChannelDescriptionValidator<P extends ESwarmStoreConnector, T extends TSwarmMessageSerialized, MD extends ISwarmMessageInstanceDecrypted, CTX extends ISwarmStoreDBOGrandAccessCallbackBaseContext, DBO extends TSwrmMessagesChannelsListDBOWithGrantAccess<P, T, MD, CTX>>(constantArguments: ISwarmMessagesChannelsListV1GrantAccessConstantArguments<P, T, MD, CTX, DBO>, variableArguments: Omit<ISwarmMessagesChannelsListV1GrantAccessVariableArguments<P, T, MD, CTX, DBO>, 'channelExistingDescription'>, channelExistingDescription: IValidatorOfSwarmMessageWithChannelDescriptionArgument<P, T, MD, CTX, DBO>['channelExistingDescription']): IValidatorOfSwarmMessageWithChannelDescriptionArgument<P, T, MD, CTX, DBO>;
export declare function createGrantAccessCallbackByConstantArgumentsAndMessageWithChannelDescriptionValidator<P extends ESwarmStoreConnector, T extends TSwarmMessageSerialized, MD extends ISwarmMessageInstanceDecrypted, CTX extends ISwarmStoreDBOGrandAccessCallbackBaseContext, DBO extends TSwrmMessagesChannelsListDBOWithGrantAccess<P, T, MD, CTX>>({ constantArguments, swarmChannelsListClockSortedChannelsDescriptionsUpdatesCache, channelDescriptionSwarmMessageValidator, getVariableArgumentsWithoutExistingChannelDescriptionForGrantAccessValidator, getArgumentsForSwarmMessageWithChannelDescriptionValidator, }: ICreateGrantAccessCallbackByConstantArgumentsAndMessageWithChannelDescriptionValidatorArguments<P, T, MD, CTX, DBO>): DBO['grantAccess'];
//# sourceMappingURL=swarm-messages-channels-list-v1-class-db-connection-initializer-and-handler.utils.d.ts.map