import { ESwarmStoreConnector } from '../../../swarm-store-class/swarm-store-class.const';
import { ISwarmStoreOptionsConnectorFabric, ISwarmStoreProviderOptions, TSwarmStoreConnectorConnectionOptions, TSwarmStoreDatabaseOptions, TSwarmStoreDatabaseType } from '../../../swarm-store-class/swarm-store-class.types';
import { ISwarmMessageConstructorWithEncryptedCacheFabric } from '../../../swarm-message-encrypted-cache/swarm-message-encrypted-cache.types';
import { ISwarmStoreConnectorBasicWithEntriesCount, ISwarmStoreConnectorWithEntriesCount } from '../../../swarm-store-class/swarm-store-class-extended/swarm-store-class-with-entries-count/swarm-store-class-with-entries-count.types';
import { ISwarmMessageStoreAccessControlOptions, ISwarmMessageStoreEvents, ISwarmMessageStoreOptionsWithConnectorFabric, TSwarmMessagesStoreGrantAccessCallback } from '../../../swarm-message-store/types/swarm-message-store.types';
import { TSwarmMessageSerialized, ISwarmMessageInstanceDecrypted } from '../../../swarm-message/swarm-message-constructor.types';
import { TSwarmStoreDatabaseOptionsSerialized, ISwarmStoreWithConnector } from '../../../swarm-store-class/swarm-store-class.types';
import { ISwarmStoreDBOGrandAccessCallbackBaseContext } from '../../../swarm-store-class/swarm-store-connectors/swarm-store-connetors.types';
import { ISwarmMessageStoreDatabaseOptionsWithMetaConstructor } from '../../../swarm-message-store/swarm-message-store-connectors/swarm-message-store-connector-db-options/swarm-store-connector-db-options.types';
import { ISwarmMessageStoreWithEntriesCount } from '../../../swarm-message-store/types/swarm-message-store.types';
import { ISwarmStoreDatabaseBaseOptions } from '../../../swarm-store-class/swarm-store-class.types';
import { ConstructorType } from '../../../../types/helper.types';
import { ISwarmMessageStoreConnectorDbOptionsClassFabric } from '../../types/connection-bridge-swarm-fabrics.types';
import { ISwarmMessageStoreConectorDbOptionsGrandAccessContextClassFabric } from '../../../swarm-message-store/types/swarm-message-store-db-options.types';
import { PromiseResolveType } from '../../../../types/promise.types';
import { ISwarmMessageStoreDatabaseOptionsExtender } from '../../../swarm-message-store/types/swarm-message-store-utils.types';
export declare function swarmMessageStoreInstanceFabricWithSwarmStoreFabricAndOptionsSerializer<P extends ESwarmStoreConnector, T extends TSwarmMessageSerialized, DbType extends TSwarmStoreDatabaseType<P>, DBO extends TSwarmStoreDatabaseOptions<P, T, DbType> & {
    grantAccess: GAC;
}, ConnectorBasic extends ISwarmStoreConnectorBasicWithEntriesCount<P, T, DbType, DBO>, CO extends TSwarmStoreConnectorConnectionOptions<P, T, DbType, DBO, ConnectorBasic>, PO extends ISwarmStoreProviderOptions<P, T, DbType, DBO, ConnectorBasic, CO>, ConnectorMain extends ISwarmStoreConnectorWithEntriesCount<P, T, DbType, DBO, ConnectorBasic, CO>, CFO extends ISwarmStoreOptionsConnectorFabric<P, T, DbType, DBO, ConnectorBasic, CO, PO, ConnectorMain>, MD extends ISwarmMessageInstanceDecrypted, GAC extends TSwarmMessagesStoreGrantAccessCallback<P, MD | T>, MCF extends ISwarmMessageConstructorWithEncryptedCacheFabric | undefined, ACO extends ISwarmMessageStoreAccessControlOptions<P, T, MD | T, GAC> | undefined, O extends ISwarmMessageStoreOptionsWithConnectorFabric<P, T, DbType, DBO, ConnectorBasic, CO, PO, ConnectorMain, CFO, MD | T, GAC, MCF, ACO>, E extends ISwarmMessageStoreEvents<P, T, DbType, DBO>>(): ISwarmMessageStoreWithEntriesCount<P, T, DbType, DBO, ConnectorBasic, CO, PO, ConnectorMain, CFO, MD | T, GAC, MCF, ACO, O> & ISwarmStoreWithConnector<P, T, DbType, DBO, ConnectorBasic, CO, ConnectorMain>;
export declare function getSwarmMessageStoreInstanceFabricWithSwarmStoreFabricAndOptionsSerializerAndDatabaseOptionsExtendedConstructor<P extends ESwarmStoreConnector, T extends TSwarmMessageSerialized, DbType extends TSwarmStoreDatabaseType<P>, DBO extends TSwarmStoreDatabaseOptions<P, T, DbType> & {
    grantAccess: GAC;
}, DBOE extends DBO & ISwarmStoreDatabaseBaseOptions & {
    provider: P;
}, ConnectorBasic extends ISwarmStoreConnectorBasicWithEntriesCount<P, T, DbType, DBOE>, CO extends TSwarmStoreConnectorConnectionOptions<P, T, DbType, DBO, ConnectorBasic>, PO extends ISwarmStoreProviderOptions<P, T, DbType, DBO, ConnectorBasic, CO>, ConnectorMain extends ISwarmStoreConnectorWithEntriesCount<P, T, DbType, DBOE, ConnectorBasic, CO>, CFO extends ISwarmStoreOptionsConnectorFabric<P, T, DbType, DBO, ConnectorBasic, CO, PO, ConnectorMain>, MD extends ISwarmMessageInstanceDecrypted, GAC extends TSwarmMessagesStoreGrantAccessCallback<P, MD | T>, MCF extends ISwarmMessageConstructorWithEncryptedCacheFabric | undefined, ACO extends ISwarmMessageStoreAccessControlOptions<P, T, MD | T, GAC> | undefined, O extends ISwarmMessageStoreOptionsWithConnectorFabric<P, T, DbType, DBOE, ConnectorBasic, CO, PO, ConnectorMain, CFO, MD | T, GAC, MCF, ACO>, E extends ISwarmMessageStoreEvents<P, T, DbType, DBOE>, DBOS extends TSwarmStoreDatabaseOptionsSerialized, CTX extends ISwarmStoreDBOGrandAccessCallbackBaseContext, SSDOC extends ISwarmMessageStoreDatabaseOptionsWithMetaConstructor<P, T, DbType, MD, CTX, DBO, DBOS, {
    swarmMessageStoreOptions: O;
    swarmMessageConstructor: PromiseResolveType<ReturnType<NonNullable<MCF>>>;
}>, OEXTENDERFABRIC extends (options: O) => ISwarmMessageStoreDatabaseOptionsExtender<P, T, DbType, DBO, DBOE, PromiseResolveType<ReturnType<NonNullable<MCF>>>>>(SwarmStoreDatabaseOptionsClass: SSDOC, databaseOptionsExtenderFabric: OEXTENDERFABRIC): ISwarmMessageStoreWithEntriesCount<P, T, DbType, DBOE, ConnectorBasic, CO, PO, ConnectorMain, CFO, MD, GAC, MCF, ACO, O> & ISwarmStoreWithConnector<P, T, DbType, DBOE, ConnectorBasic, CO, ConnectorMain>;
export declare function getSwarmMessageStoreInstanceFabricWithSwarmStoreFabricAndOptionsSerializerAndDatabaseOptionsExtendedConstructorWithDefaultParams<P extends ESwarmStoreConnector, T extends TSwarmMessageSerialized, DbType extends TSwarmStoreDatabaseType<P>, DBO extends TSwarmStoreDatabaseOptions<P, T, DbType> & {
    grantAccess: GAC;
} & ISwarmStoreDatabaseBaseOptions & {
    provider: P;
}, ConnectorBasic extends ISwarmStoreConnectorBasicWithEntriesCount<P, T, DbType, DBO>, CO extends TSwarmStoreConnectorConnectionOptions<P, T, DbType, DBO, ConnectorBasic>, PO extends ISwarmStoreProviderOptions<P, T, DbType, DBO, ConnectorBasic, CO>, ConnectorMain extends ISwarmStoreConnectorWithEntriesCount<P, T, DbType, DBO, ConnectorBasic, CO>, CFO extends ISwarmStoreOptionsConnectorFabric<P, T, DbType, DBO, ConnectorBasic, CO, PO, ConnectorMain>, MD extends ISwarmMessageInstanceDecrypted, GAC extends TSwarmMessagesStoreGrantAccessCallback<P, MD | T>, MCF extends ISwarmMessageConstructorWithEncryptedCacheFabric | undefined, ACO extends ISwarmMessageStoreAccessControlOptions<P, T, MD | T, GAC> | undefined, O extends ISwarmMessageStoreOptionsWithConnectorFabric<P, T, DbType, DBO & ISwarmStoreDatabaseBaseOptions & {
    provider: P;
}, ConnectorBasic, CO, PO, ConnectorMain, CFO, MD | T, GAC, MCF, ACO>, E extends ISwarmMessageStoreEvents<P, T, DbType, DBO & ISwarmStoreDatabaseBaseOptions & {
    provider: P;
}>, DBOS extends TSwarmStoreDatabaseOptionsSerialized, CTX extends ISwarmStoreDBOGrandAccessCallbackBaseContext, CTXC extends ConstructorType<CTX>, SMSDBOGACF extends ISwarmMessageStoreConectorDbOptionsGrandAccessContextClassFabric<PromiseResolveType<ReturnType<NonNullable<MCF>>>, CTXC>, DBOC extends ISwarmMessageStoreConnectorDbOptionsClassFabric<P, T, DbType, MD, CTX, DBO, DBOS, PromiseResolveType<ReturnType<NonNullable<MCF>>>, CTXC, SMSDBOGACF>>(ContextBaseClass: CTXC, swarmMessageStoreDBOGrandAccessCallbackContextFabric: SMSDBOGACF, databaseOptionsClassFabric: DBOC, swarmMessageValidatorFabric?: (grantAccessCb: GAC) => GAC): ISwarmMessageStoreWithEntriesCount<P, T, DbType, DBO & ISwarmStoreDatabaseBaseOptions & {
    provider: P;
}, ConnectorBasic, CO, PO, ConnectorMain, CFO, MD | T, GAC, MCF, ACO, O> & ISwarmStoreWithConnector<P, T, DbType, DBO & ISwarmStoreDatabaseBaseOptions & {
    provider: P;
}, ConnectorBasic, CO, ConnectorMain>;
//# sourceMappingURL=connection-bridge-utils-swarm-store-fabrics.d.ts.map