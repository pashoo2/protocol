import { ESwarmStoreConnector, ISwarmStoreConnector, ISwarmStoreConnectorBasic, ISwarmStoreConnectorBasicWithEntriesCount, ISwarmStoreConnectorWithEntriesCount, ISwarmStoreOptionsConnectorFabric, ISwarmStoreProviderOptions, TSwarmStoreConnectorConnectionOptions, TSwarmStoreConnectorConstructorOptions, TSwarmStoreDatabaseOptions } from '../../../swarm-store-class';
export declare const getMainConnectorFabricDefault: <P extends ESwarmStoreConnector, T extends string, DbType extends import("../../../swarm-store-class").ESwarmStoreConnectorOrbitDbDatabaseType, DBO extends TSwarmStoreDatabaseOptions<P, T, DbType>, ConnectorBasic extends ISwarmStoreConnectorBasic<P, T, DbType, DBO>, PO extends TSwarmStoreConnectorConnectionOptions<P, T, DbType, DBO, ConnectorBasic>, CO extends ISwarmStoreProviderOptions<P, T, DbType, DBO, ConnectorBasic, PO>, ConnectorMain extends ISwarmStoreConnector<P, T, DbType, DBO, ConnectorBasic, PO>>(swarmStoreConnectorConstructorOptions: TSwarmStoreConnectorConstructorOptions<P, T, DbType>) => ISwarmStoreOptionsConnectorFabric<P, T, DbType, DBO, ConnectorBasic, PO, CO, ConnectorMain>;
export declare const getMainConnectorFabricWithEntriesCountDefault: <P extends ESwarmStoreConnector, T extends string, DbType extends import("../../../swarm-store-class").ESwarmStoreConnectorOrbitDbDatabaseType, DBO extends TSwarmStoreDatabaseOptions<P, T, DbType>, ConnectorBasic extends ISwarmStoreConnectorBasicWithEntriesCount<P, T, DbType, DBO>, PO extends TSwarmStoreConnectorConnectionOptions<P, T, DbType, DBO, ConnectorBasic>, CO extends ISwarmStoreProviderOptions<P, T, DbType, DBO, ConnectorBasic, PO>, ConnectorMain extends ISwarmStoreConnectorWithEntriesCount<P, T, DbType, DBO, ConnectorBasic, PO>>(swarmStoreConnectorConstructorOptions: TSwarmStoreConnectorConstructorOptions<P, T, DbType>) => ISwarmStoreOptionsConnectorFabric<P, T, DbType, DBO, ConnectorBasic, PO, CO, ConnectorMain>;
//# sourceMappingURL=connection-bridge-utils-store-to-swarm-connector-fabrics.d.ts.map