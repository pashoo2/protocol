[{"/home/paul/projects/decentrilized-protocol/src/App.tsx":"1","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/error-extended-class-base/error-extended-class-base.ts":"2","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/event-emitter-class-base/event-emitter-class-base.ts":"3","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/event-emitter-class-base/event-emitter-class-base.types.ts":"4","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/http-request-class-base/http-request-class-base-subclasses/http-request-class-base-body-processor.ts":"5","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/http-request-class-base/http-request-class-base-subclasses/http-request-class-base-response-error.ts":"6","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/http-request-class-base/http-request-class-base-subclasses/http-request-class-response-processor.ts":"7","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/http-request-class-base/http-request-class-base-utils.ts":"8","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/http-request-class-base/http-request-class-base.const.ts":"9","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/http-request-class-base/http-request-class-base.ts":"10","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/http-request-class-base/http-request-class-base.types.ts":"11","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/http-request-class-base/http-request-class-base.utils.ts":"12","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/mime-types-class-base/mime-types-class-base.const.ts":"13","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/mime-types-class-base/mime-types-class-base.ts":"14","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/queue-manager-class-base/queue-manager-class-base.const.ts":"15","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/queue-manager-class-base/queue-manager-class-base.ts":"16","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/queue-manager-class-base/queue-manager-class-base.types.ts":"17","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/status-class-base/status-class-base.const.ts":"18","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/status-class-base/status-class-base.ts":"19","/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/status-class-base/status-class-base.types.ts":"20","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-const/central-authority-class-const-auth-credentials.ts":"21","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-const/central-authority-class-const.ts":"22","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-types/central-authority-class-types-common.ts":"23","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-types/central-authority-class-types-crypto-credentials.ts":"24","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-types/central-authority-class-types-crypto-keys.ts":"25","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-types/central-authority-class-types.ts":"26","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-formatters/central-authority-class-user-identity-formatters-formatter-v1/central-authority-class-user-identity-formatters-formatter-v1.ts":"27","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-formatters/central-authority-class-user-identity-formatters.const.ts":"28","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-formatters/central-authority-class-user-identity-formatters.ts":"29","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-formatters/central-authority-class-user-identity-formatters.types.ts":"30","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-formatters/central-authority-class-user-identity-formatters.utils.ts":"31","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-parsers/central-authority-class-user-identity-parsers-parser-v1/central-authority-class-user-identity-parsers-parser-v1.const.ts":"32","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-parsers/central-authority-class-user-identity-parsers-parser-v1/central-authority-class-user-identity-parsers-parser-v1.ts":"33","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-parsers/central-authority-class-user-identity-parsers.const.ts":"34","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-parsers/central-authority-class-user-identity-parsers.ts":"35","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-parsers/central-authority-class-user-identity-parsers.types.ts":"36","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-parsers/central-authority-class-user-identity-parsers.utils.ts":"37","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-validators/central-authority-class-user-identity-validator-v1/central-authority-class-user-identity-validator-v1.ts":"38","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-validators/central-authority-class-user-identity-validators.const.ts":"39","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-validators/central-authority-class-user-identity-validators.ts":"40","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-validators/central-authority-class-user-identity-validators.types.ts":"41","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-validators/central-authority-class-user-identity-validators.utils.ts":"42","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity.const.ts":"43","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity.ts":"44","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity.types.ts":"45","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class.ts":"46","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.credentials-storage/central-authority-connection-firebase-utils.credentials-storage.const.ts":"47","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.credentials-storage/central-authority-connection-firebase-utils.credentials-storage.ts":"48","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.credentials-storage/central-authority-connection-firebase-utils.credentials-storage.types.ts":"49","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.database/central-authority-connection-firebase-utils.database.const.ts":"50","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.database/central-authority-connection-firebase-utils.database.ts":"51","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase.const/central-authority-connection-firebase.const.error-codes.ts":"52","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase.const/central-authority-connection-firebase.const.restrictions.ts":"53","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase.const/central-authority-connection-firebase.const.ts":"54","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase.ts":"55","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase.types.configuration.ts":"56","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-const/central-authority-connections-const-error-codes.ts":"57","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-const/central-authority-connections-const.ts":"58","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections.types.ts":"59","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys-common.ts":"60","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys-export.ts":"61","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys-generate.ts":"62","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys-import.ts":"63","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys.const.ts":"64","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys.ts":"65","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-utils-common/central-authority-utils-crypto-credentials/central-authority-utils-crypto-credentials.ts":"66","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-validators/central-authority-validators-auth-credentials/central-authority-validators-auth-credentials.ts":"67","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-validators/central-authority-validators-crypto-keys/central-authority-validators-crypto-keys-schemas.ts":"68","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-validators/central-authority-validators-crypto-keys/central-authority-validators-crypto-keys.ts":"69","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-validators/central-authority-validators-user/central-authority-validators-user.schemes.ts":"70","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-validators/central-authority-validators-user/central-authority-validators-user.ts":"71","/home/paul/projects/decentrilized-protocol/src/classes/safe-storage-class/safe-storage-class.const.ts":"72","/home/paul/projects/decentrilized-protocol/src/classes/safe-storage-class/safe-storage-class.ts":"73","/home/paul/projects/decentrilized-protocol/src/classes/safe-storage-class/safe-storage-class.types.ts":"74","/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret_storage_providers/secret-storage-level-js-provider/secret-storage-level-js-provider.const.ts":"75","/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret_storage_providers/secret-storage-level-js-provider/secret-storage-level-js-provider.ts":"76","/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret_storage_providers/secret-storage-local-forage-provider/secret-storage-local-forage-provider.const.ts":"77","/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret_storage_providers/secret-storage-local-forage-provider/secret-storage-local-forage-provider.ts":"78","/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret_storage_providers/secret-storage-local-storage-provider/secret-storage-local-storage-provider.ts":"79","/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret_storage_providers/secret-storage-session-storage-provider/secret-storage-session-storage-provider.ts":"80","/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret-storage-class.const.ts":"81","/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret-storage-class.ts":"82","/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret-storage-class.types.ts":"83","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/swarm-connection-class-subclass-ipfs.browser.conf.ts":"84","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/swarm-connection-class-subclass-ipfs.const.ts":"85","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/swarm-connection-class-subclass-ipfs.delegate.conf.ts":"86","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/swarm-connection-class-subclass-ipfs.libp2p.conf.ts":"87","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/swarm-connection-class-subclass-ipfs.signal-star.conf.ts":"88","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/swarm-connection-class-subclass-ipfs.ts":"89","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/swarm-connection-class-subclass-ipfs.types.ts":"90","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-bootstrap.d.ts":"91","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-delegated-content-routing.d.ts":"92","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-delegated-peer-routing.d.ts":"93","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-gossipsub.d.ts":"94","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-kad-dht.d.ts":"95","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-secio.d.ts":"96","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-spdy.d.ts":"97","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-webrtc-star.d.ts":"98","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-websocket-star.d.ts":"99","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p.d.ts":"100","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/multiaddr.d.ts":"101","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/pull-mplex.d.ts":"102","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class.ts":"103","/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class.types.ts":"104","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-raw-constructor/swarm-message-subclass-raw-constructor.const.ts":"105","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-raw-constructor/swarm-message-subclass-raw-constructor.ts":"106","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-raw-constructor/swarm-message-subclass-raw-constructor.types.ts":"107","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator.const.ts":"108","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator.ts":"109","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator.types.ts":"110","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message.const.ts":"111","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message.ts":"112","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message.types.ts":"113","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-class.ts":"114","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-class.types.ts":"115","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-access-controller/swarm-store-connector-orbit-db-subclass-access-controller.const.ts":"116","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-access-controller/swarm-store-connector-orbit-db-subclass-access-controller.ts":"117","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-access-controller/swarm-store-connector-orbit-db-subclass-access-controller.types.ts":"118","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-database/swarm-store-connector-orbit-db-subclass-database.const.ts":"119","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-database/swarm-store-connector-orbit-db-subclass-database.ts":"120","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-database/swarm-store-connector-orbit-db-subclass-database.types.ts":"121","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-identity-provider/swarm-store-connector-orbit-db-subclass-identity-provider.const.ts":"122","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-identity-provider/swarm-store-connector-orbit-db-subclass-identity-provider.ts":"123","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-keystore/swarm-store-connector-orbit-db-subclass-keystore.const.ts":"124","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-keystore/swarm-store-connector-orbit-db-subclass-keystore.ts":"125","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-keystore/swarm-store-connector-orbit-db-subclass-keystore.utils.ts":"126","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-storage-cache/swarm-store-connector-orbit-db-subclass-storage-cache.ts":"127","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-storage-fabric/swarm-store-connector-orbit-db-subclass-storage-fabric.ts":"128","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-storage-fabric/swarm-store-connector-orbit-db-subclass-storage-fabric.types.ts":"129","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter/swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter.const.ts":"130","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter/swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter.ts":"131","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter/swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter.types.ts":"132","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db.const.ts":"133","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db.ts":"134","/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db.types.ts":"135","/home/paul/projects/decentrilized-protocol/src/const/common-date-time/common-date-time-timezone.const.ts":"136","/home/paul/projects/decentrilized-protocol/src/const/common-values/common-values.ts":"137","/home/paul/projects/decentrilized-protocol/src/const/const-validation-schemes/const-validation-schemes-common.ts":"138","/home/paul/projects/decentrilized-protocol/src/const/const-validation-schemes/const-validation-schemes-credentials.ts":"139","/home/paul/projects/decentrilized-protocol/src/const/const-validation-schemes/const-validation-schemes.ts":"140","/home/paul/projects/decentrilized-protocol/src/const/const-validation-values/const-validation-values-messaging-date.ts":"141","/home/paul/projects/decentrilized-protocol/src/const/const-values-restrictions-common.ts":"142","/home/paul/projects/decentrilized-protocol/src/index.tsx":"143","/home/paul/projects/decentrilized-protocol/src/react-app-env.d.ts":"144","/home/paul/projects/decentrilized-protocol/src/test/data-sign-test.ts":"145","/home/paul/projects/decentrilized-protocol/src/test/encryption-test.ts":"146","/home/paul/projects/decentrilized-protocol/src/test/error-extended-class-test.ts":"147","/home/paul/projects/decentrilized-protocol/src/test/ipfs-swarm-connection.test/ipfs-swarm-connection.const.ts":"148","/home/paul/projects/decentrilized-protocol/src/test/mocha-chai-initialize.ts":"149","/home/paul/projects/decentrilized-protocol/src/test/validation-messaging.test/validate-messaging-timestamps-test.ts":"150","/home/paul/projects/decentrilized-protocol/src/types/channels.types.ts":"151","/home/paul/projects/decentrilized-protocol/src/types/encryption-keys.types.ts":"152","/home/paul/projects/decentrilized-protocol/src/types/helper.types.ts":"153","/home/paul/projects/decentrilized-protocol/src/types/ipfs.d.ts":"154","/home/paul/projects/decentrilized-protocol/src/types/ipfs.types.d.ts":"155","/home/paul/projects/decentrilized-protocol/src/types/main.types.ts":"156","/home/paul/projects/decentrilized-protocol/src/types/orbit-db-cache.d.ts":"157","/home/paul/projects/decentrilized-protocol/src/types/orbit-db-identity-provider-ext.d.ts":"158","/home/paul/projects/decentrilized-protocol/src/types/orbit-db-keystore.d.ts":"159","/home/paul/projects/decentrilized-protocol/src/types/users.types.ts":"160","/home/paul/projects/decentrilized-protocol/src/utils/common-utils/common-utils-array.ts":"161","/home/paul/projects/decentrilized-protocol/src/utils/common-utils/common-utils-objects.ts":"162","/home/paul/projects/decentrilized-protocol/src/utils/common-utils/common-utils-timer.ts":"163","/home/paul/projects/decentrilized-protocol/src/utils/common-utils/common-utils.ts":"164","/home/paul/projects/decentrilized-protocol/src/utils/data-cache-utils/data-cache-utils-caching-decorator/data-cache-utils-caching-decorator.const.ts":"165","/home/paul/projects/decentrilized-protocol/src/utils/data-cache-utils/data-cache-utils-caching-decorator/data-cache-utils-caching-decorator.ts":"166","/home/paul/projects/decentrilized-protocol/src/utils/data-cache-utils/data-cache-utils-caching-decorator/data-cache-utils-caching-decorator.types.ts":"167","/home/paul/projects/decentrilized-protocol/src/utils/data-cache-utils/data-cache-utils.ts":"168","/home/paul/projects/decentrilized-protocol/src/utils/data-compression-utils/data-compression-utils-strings.ts":"169","/home/paul/projects/decentrilized-protocol/src/utils/data-compression-utils/data-compression-utils.const.ts":"170","/home/paul/projects/decentrilized-protocol/src/utils/data-compression-utils/data-compression-utils.ts":"171","/home/paul/projects/decentrilized-protocol/src/utils/data-sign-utils/data-sign-utils.const.ts":"172","/home/paul/projects/decentrilized-protocol/src/utils/data-sign-utils/data-sign-utils.ts":"173","/home/paul/projects/decentrilized-protocol/src/utils/data-sign-utils/data-sign-utils.types.ts":"174","/home/paul/projects/decentrilized-protocol/src/utils/data-sign-utils/keys.data-sign-utils.ts":"175","/home/paul/projects/decentrilized-protocol/src/utils/data-sign-utils/main.data-sign-utils.const.ts":"176","/home/paul/projects/decentrilized-protocol/src/utils/data-sign-utils/sign-data.encryption-utils.ts":"177","/home/paul/projects/decentrilized-protocol/src/utils/data-sign-utils/verify-data.encryption-utils.ts":"178","/home/paul/projects/decentrilized-protocol/src/utils/data-validators-utils/data-validators-utils-common.ts":"179","/home/paul/projects/decentrilized-protocol/src/utils/data-validators-utils/data-validators-utils.ts":"180","/home/paul/projects/decentrilized-protocol/src/utils/encryption-keys-utils/encryption-keys-utils.const.ts":"181","/home/paul/projects/decentrilized-protocol/src/utils/encryption-keys-utils/encryption-keys-utils.ts":"182","/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/crypto-utils.const.ts":"183","/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/crypto-utils.types.ts":"184","/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/decrypt-data.encryption-utils.ts":"185","/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/encrypt-data.encryption-utils.ts":"186","/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/encryption-utils.ts":"187","/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/keys.encryption-utils.ts":"188","/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/main.crypto-utils.const.ts":"189","/home/paul/projects/decentrilized-protocol/src/utils/firebase-utils/firebase-utils.ts":"190","/home/paul/projects/decentrilized-protocol/src/utils/hash-calculation-utils/hash-calculation-utils.const.ts":"191","/home/paul/projects/decentrilized-protocol/src/utils/hash-calculation-utils/hash-calculation-utils.ts":"192","/home/paul/projects/decentrilized-protocol/src/utils/identity-utils/identity-utils.ts":"193","/home/paul/projects/decentrilized-protocol/src/utils/lazy-loading-utils/lazy-loading-utils.ts":"194","/home/paul/projects/decentrilized-protocol/src/utils/main-utils.ts":"195","/home/paul/projects/decentrilized-protocol/src/utils/password-utils/decrypt.password-utils.ts":"196","/home/paul/projects/decentrilized-protocol/src/utils/password-utils/derive-key.password-utils.ts":"197","/home/paul/projects/decentrilized-protocol/src/utils/password-utils/encrypt.password-utils.ts":"198","/home/paul/projects/decentrilized-protocol/src/utils/password-utils/password-utils.const.ts":"199","/home/paul/projects/decentrilized-protocol/src/utils/password-utils/password-utils.types.ts":"200","/home/paul/projects/decentrilized-protocol/src/utils/string-encoding-utils.ts":"201","/home/paul/projects/decentrilized-protocol/src/utils/string-utilities.ts":"202","/home/paul/projects/decentrilized-protocol/src/utils/typed-array-utils.ts":"203","/home/paul/projects/decentrilized-protocol/src/utils/validation-utils/validation-utils-timestamp.ts":"204","/home/paul/projects/decentrilized-protocol/src/utils/validation-utils/validation-utils.ts":"205","/home/paul/projects/decentrilized-protocol/src/App.test.tsx":"206","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-aurhority.keys.common.test.ts":"207","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority-connection.test/central-authority-connection.test.firebase/central-authority-connection.test.firebase.const.ts":"208","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority-connection.test/central-authority-connection.test.firebase/central-authority-connection.test.firebase.credentials-storage.ts":"209","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority-connection.test/central-authority-connection.test.firebase/central-authority-connection.test.firebase.database.ts":"210","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority-connection.test/central-authority-connection.test.firebase/central-authority-connection.test.firebase.ts":"211","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority-connection.test/central-authority-connection.test.ts":"212","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority-storage-identity-credentials.test.ts":"213","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority.credentials-storage.test.ts":"214","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority.keys.test.ts":"215","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority.test.ts":"216","/home/paul/projects/decentrilized-protocol/src/test/common-utils.test/common-utils.caching-decorator.test.ts":"217","/home/paul/projects/decentrilized-protocol/src/test/common-utils.test/common-utils.test.ts":"218","/home/paul/projects/decentrilized-protocol/src/test/http-request-class-base.test/http-request-class-base.test.ts":"219","/home/paul/projects/decentrilized-protocol/src/test/ipfs-swarm-connection.test/ipfs-swarm-connection-ipfs.test.ts":"220","/home/paul/projects/decentrilized-protocol/src/test/ipfs-swarm-connection.test/ipfs-swarm-connection.test.ts":"221","/home/paul/projects/decentrilized-protocol/src/test/nodejs-helpers.test/nodejs-helpers.test.firebase/nodejs-helpers.test.firebase.js":"222","/home/paul/projects/decentrilized-protocol/src/test/password-key.test.ts":"223","/home/paul/projects/decentrilized-protocol/src/test/safe-storage.test.ts":"224","/home/paul/projects/decentrilized-protocol/src/test/secret-storage.test.ts":"225","/home/paul/projects/decentrilized-protocol/src/test/swarm-storage-orbit-db.test/swarm-storage-orbit-db.test.const.ts":"226","/home/paul/projects/decentrilized-protocol/src/test/swarm-storage-orbit-db.test/swarm-storage-orbit-db.test.ts":"227","/home/paul/projects/decentrilized-protocol/src/test/valiation-utils.test.ts":"228","/home/paul/projects/decentrilized-protocol/src/test/validation-messaging.test/validation-messaging.test.const.ts":"229","/home/paul/projects/decentrilized-protocol/src/classes/pseudo-ntp-class/pseudo-ntp-class.const.ts":"230","/home/paul/projects/decentrilized-protocol/src/classes/pseudo-ntp-class/pseudo-ntp-class.ts":"231","/home/paul/projects/decentrilized-protocol/src/classes/pseudo-ntp-class/pseudo-ntp-class.types.ts":"232","/home/paul/projects/decentrilized-protocol/src/classes/pseudo-ntp-class/pseudo-ntp-class.utils.ts":"233","/home/paul/projects/decentrilized-protocol/src/const/const-api-conf.ts":"234","/home/paul/projects/decentrilized-protocol/src/const/common-date-time/common-date-time-main.ts":"235","/home/paul/projects/decentrilized-protocol/src/const/common-date-time/common-date-time-ntp-servers.const.ts":"236","/home/paul/projects/decentrilized-protocol/src/utils/common-utils/common-utils-date-time-synced.ts":"237","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-issuer-deserizlied/swarm-message-subclass-validator-fields-validator-validator-issuer-deserizlied.ts":"238","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-issuer-deserizlied/swarm-message-subclass-validator-fields-validator-validator-issuer-deserizlied.types.ts":"239","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-issuer-serialized/swarm-message-subclass-validator-fields-validator-validator-issuer-serialized.ts":"240","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-issuer-serialized/swarm-message-subclass-validator-fields-validator-validator-issuer-serialized.types.ts":"241","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-payload/swarm-message-subclass-validator-fields-validator-validator-payload.const.ts":"242","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-payload/swarm-message-subclass-validator-fields-validator-validator-payload.ts":"243","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-payload/swarm-message-subclass-validator-fields-validator-validator-payload.types.ts":"244","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-timestamp/swarm-message-subclass-validator-fields-validator-validator-timestamp.const.ts":"245","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-timestamp/swarm-message-subclass-validator-fields-validator-validator-timestamp.ts":"246","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-timestamp/swarm-message-subclass-validator-fields-validator-validator-timestamp.types.ts":"247","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-type/swarm-message-subclass-validator-fields-validator-validator-type.ts":"248","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-type/swarm-message-subclass-validator-fields-validator-validator-type.types.ts":"249","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-user-identifier/swarm-message-subclass-validator-fields-validator-validator-user-identifier.ts":"250","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-user-identifier/swarm-message-subclass-validator-fields-validator-validator-user-identifier.types.ts":"251","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator.ts":"252","/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-user-identifier/swarm-message-subclass-validator-fields-validator-validator-user-identifier.const.ts":"253","/home/paul/projects/decentrilized-protocol/src/utils/common-utils/common-utils-date-time.ts":"254","/home/paul/projects/decentrilized-protocol/src/utils/common-utils/common-utils-number.ts":"255","/home/paul/projects/decentrilized-protocol/src/backog-classes/channel-authority-class/channel-authority-class.ts":"256","/home/paul/projects/decentrilized-protocol/src/backog-classes/channel-authority-class/channel-authority-class.types.ts":"257","/home/paul/projects/decentrilized-protocol/src/backog-classes/channel-authority-class/channel-authority-connections/channel-authority-connection-with-server-api/channel-authority-connection-with-server-api.ts":"258","/home/paul/projects/decentrilized-protocol/src/backog-classes/channel-authority-class/channel-authority-connections/channel-authority-connection-with-server-api/channel-authority-connection-with-server-api.types.ts":"259","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-current-user-auth/central-authority-storage-credentials/central-authority-storage-credentials.const.ts":"260","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-current-user-auth/central-authority-storage-credentials/central-authority-storage-credentials.ts":"261","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-parsers/central-authority-class-user-identity-parsers-parser-v2/central-authority-class-user-identity-parsers-parser-v2.const.ts":"262","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-parsers/central-authority-class-user-identity-parsers-parser-v2/central-authority-class-user-identity-parsers-parser-v2.ts":"263","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-validators/central-authority-class-user-identity-validator-v2/central-authority-class-user-identity-validator-v2.ts":"264","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-current-user-auth/central-authority-storage-current-user-auth/central-authority-storage-auth-providers-credentials.ts":"265","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-current-user-auth/central-authority-storage-current-user-auth/central-authority-storage-auth-providers-credentials.types.ts":"266","/home/paul/projects/decentrilized-protocol/src/const/common-values/common-values-env.ts":"267","/home/paul/projects/decentrilized-protocol/src/const/const-validation-regex/const-validation-regex-common.ts":"268","/home/paul/projects/decentrilized-protocol/src/test/central-authority-identity.test/central-authority-identity.utils.ts":"269","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-formatters/central-authority-class-user-identity-formatters-formatter-v2/central-authority-class-user-identity-formatters-formatter-v2.const.ts":"270","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-formatters/central-authority-class-user-identity-formatters-formatter-v2/central-authority-class-user-identity-formatters-formatter-v2.ts":"271","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-swarm-users-auth/central-authority-storage-swarm-users-identity-credentials/central-authority-storage-swarm-users-identity-credentials.const.ts":"272","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-swarm-users-auth/central-authority-storage-swarm-users-identity-credentials/central-authority-storage-swarm-users-identity-credentials.ts":"273","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-swarm-users-auth/central-authority-storage-swarm-users-identity-credentials/central-authority-storage-swarm-users-identity-credentials.types.ts":"274","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-base/central-authority-connection-firebase-base.ts":"275","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-connection-implementation/central-authority-connection-firebase-connection-implementation.ts":"276","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.validators/central-authority-connection-firebase-utils.validators.const.ts":"277","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.validators/central-authority-connection-firebase-utils.validators.ts":"278","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-pool/central-authority-connections-pool.ts":"279","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-pool/central-authority-connections-pool.types.ts":"280","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-utils/central-authority-connections-utils.normalizers.ts":"281","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-utils/central-authority-connections-utils.ts":"282","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-utils/central-authority-connections-utils.validators/central-authority-connections-utils.validators.const.ts":"283","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-utils/central-authority-connections-utils.validators/central-authority-connections-utils.validators.ts":"284","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections.const.ts":"285","/home/paul/projects/decentrilized-protocol/src/utils/common-utils/common-utils-url.ts":"286","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-utils/central-authority-connections-utils.common/central-authority-connections-utils.common.ts":"287","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-const/central-authority-connections-const-status.ts":"288","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-current-user-auth/central-authority-storage-credentials/central-authority-storage-credentials.types.ts":"289","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-current-user-auth/central-authority-storage-credentials/central-authority-storage-credentials.utils.ts":"290","/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/salt-utils.const.ts":"291","/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/salt-utils.ts":"292","/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/salt-utils.types.ts":"293","/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-current-user-auth/central-authority-storage-credentials/central-authority-storage-credentials copy.ts":"294"},{"size":4887,"mtime":1577797708340,"results":"295","hashOfConfig":"296"},{"size":578,"mtime":1574620670429,"results":"297","hashOfConfig":"296"},{"size":235,"mtime":1574620670429,"results":"298","hashOfConfig":"296"},{"size":1329,"mtime":1574797996119,"results":"299","hashOfConfig":"296"},{"size":2819,"mtime":1574797996123,"results":"300","hashOfConfig":"296"},{"size":1636,"mtime":1574620670433,"results":"301","hashOfConfig":"296"},{"size":3466,"mtime":1574797996123,"results":"302","hashOfConfig":"296"},{"size":4421,"mtime":1574797996123,"results":"303","hashOfConfig":"296"},{"size":1311,"mtime":1574797996123,"results":"304","hashOfConfig":"296"},{"size":7950,"mtime":1574797996123,"results":"305","hashOfConfig":"296"},{"size":1874,"mtime":1574797996123,"results":"306","hashOfConfig":"296"},{"size":2547,"mtime":1574797996123,"results":"307","hashOfConfig":"296"},{"size":728,"mtime":1574620670433,"results":"308","hashOfConfig":"296"},{"size":1648,"mtime":1574620670433,"results":"309","hashOfConfig":"296"},{"size":191,"mtime":1574620670433,"results":"310","hashOfConfig":"296"},{"size":2582,"mtime":1574797996123,"results":"311","hashOfConfig":"296"},{"size":978,"mtime":1574620670433,"results":"312","hashOfConfig":"296"},{"size":58,"mtime":1574620670433,"results":"313","hashOfConfig":"296"},{"size":2147,"mtime":1574797996123,"results":"314","hashOfConfig":"296"},{"size":216,"mtime":1574620670433,"results":"315","hashOfConfig":"296"},{"size":1603,"mtime":1576614230822,"results":"316","hashOfConfig":"296"},{"size":66,"mtime":1574620670433,"results":"317","hashOfConfig":"296"},{"size":2236,"mtime":1577798824458,"results":"318","hashOfConfig":"296"},{"size":1103,"mtime":1575729809239,"results":"319","hashOfConfig":"296"},{"size":751,"mtime":1574620670433,"results":"320","hashOfConfig":"296"},{"size":187,"mtime":1574620670437,"results":"321","hashOfConfig":"296"},{"size":1579,"mtime":1576607687453,"results":"322","hashOfConfig":"296"},{"size":738,"mtime":1575729809239,"results":"323","hashOfConfig":"296"},{"size":224,"mtime":1574620670437,"results":"324","hashOfConfig":"296"},{"size":379,"mtime":1574620670437,"results":"325","hashOfConfig":"296"},{"size":2670,"mtime":1574620670437,"results":"326","hashOfConfig":"296"},{"size":781,"mtime":1575729809243,"results":"327","hashOfConfig":"296"},{"size":1934,"mtime":1576607687453,"results":"328","hashOfConfig":"296"},{"size":671,"mtime":1575729809243,"results":"329","hashOfConfig":"296"},{"size":215,"mtime":1574620670437,"results":"330","hashOfConfig":"296"},{"size":340,"mtime":1574620670437,"results":"331","hashOfConfig":"296"},{"size":3790,"mtime":1574620670437,"results":"332","hashOfConfig":"296"},{"size":1494,"mtime":1575729809243,"results":"333","hashOfConfig":"296"},{"size":676,"mtime":1575729809243,"results":"334","hashOfConfig":"296"},{"size":224,"mtime":1574620670437,"results":"335","hashOfConfig":"296"},{"size":76,"mtime":1574620670437,"results":"336","hashOfConfig":"296"},{"size":3771,"mtime":1576696023657,"results":"337","hashOfConfig":"296"},{"size":1035,"mtime":1576086673740,"results":"338","hashOfConfig":"296"},{"size":6532,"mtime":1576086673740,"results":"339","hashOfConfig":"296"},{"size":2384,"mtime":1576086673740,"results":"340","hashOfConfig":"296"},{"size":514,"mtime":1575729809243,"results":"341","hashOfConfig":"296"},{"size":311,"mtime":1575835109451,"results":"342","hashOfConfig":"296"},{"size":14399,"mtime":1576607687457,"results":"343","hashOfConfig":"296"},{"size":1182,"mtime":1576607687457,"results":"344","hashOfConfig":"296"},{"size":145,"mtime":1574620670441,"results":"345","hashOfConfig":"296"},{"size":4334,"mtime":1576607687457,"results":"346","hashOfConfig":"296"},{"size":110,"mtime":1574620670441,"results":"347","hashOfConfig":"296"},{"size":77,"mtime":1574620670441,"results":"348","hashOfConfig":"296"},{"size":75,"mtime":1574620670441,"results":"349","hashOfConfig":"296"},{"size":736,"mtime":1576086673744,"results":"350","hashOfConfig":"296"},{"size":306,"mtime":1574620670441,"results":"351","hashOfConfig":"296"},{"size":385,"mtime":1575393601489,"results":"352","hashOfConfig":"296"},{"size":130,"mtime":1576607687457,"results":"353","hashOfConfig":"296"},{"size":4321,"mtime":1576607687457,"results":"354","hashOfConfig":"296"},{"size":3891,"mtime":1574620670445,"results":"355","hashOfConfig":"296"},{"size":3547,"mtime":1574797996123,"results":"356","hashOfConfig":"296"},{"size":7755,"mtime":1576086673744,"results":"357","hashOfConfig":"296"},{"size":4913,"mtime":1574620670445,"results":"358","hashOfConfig":"296"},{"size":453,"mtime":1574620670445,"results":"359","hashOfConfig":"296"},{"size":310,"mtime":1574620670445,"results":"360","hashOfConfig":"296"},{"size":11613,"mtime":1576086673744,"results":"361","hashOfConfig":"296"},{"size":3236,"mtime":1576696023657,"results":"362","hashOfConfig":"296"},{"size":665,"mtime":1574620670445,"results":"363","hashOfConfig":"296"},{"size":4181,"mtime":1576086673744,"results":"364","hashOfConfig":"296"},{"size":1589,"mtime":1574620670445,"results":"365","hashOfConfig":"296"},{"size":504,"mtime":1576692426605,"results":"366","hashOfConfig":"296"},{"size":1510,"mtime":1574620670449,"results":"367","hashOfConfig":"296"},{"size":32718,"mtime":1574797996127,"results":"368","hashOfConfig":"296"},{"size":1498,"mtime":1574620670449,"results":"369","hashOfConfig":"296"},{"size":80,"mtime":1574797996127,"results":"370","hashOfConfig":"296"},{"size":5237,"mtime":1574797996127,"results":"371","hashOfConfig":"296"},{"size":216,"mtime":1574797996127,"results":"372","hashOfConfig":"296"},{"size":5726,"mtime":1574797996127,"results":"373","hashOfConfig":"296"},{"size":1378,"mtime":1574620670449,"results":"374","hashOfConfig":"296"},{"size":1423,"mtime":1574620670449,"results":"375","hashOfConfig":"296"},{"size":1435,"mtime":1574797996127,"results":"376","hashOfConfig":"296"},{"size":23221,"mtime":1577799029140,"results":"377","hashOfConfig":"296"},{"size":2106,"mtime":1576699423128,"results":"378","hashOfConfig":"296"},{"size":1467,"mtime":1574620670453,"results":"379","hashOfConfig":"296"},{"size":1403,"mtime":1574797996127,"results":"380","hashOfConfig":"296"},{"size":4370,"mtime":1574797996127,"results":"381","hashOfConfig":"296"},{"size":8907,"mtime":1574797996127,"results":"382","hashOfConfig":"296"},{"size":1851,"mtime":1574797996127,"results":"383","hashOfConfig":"296"},{"size":10977,"mtime":1574797996131,"results":"384","hashOfConfig":"296"},{"size":114,"mtime":1574797996131,"results":"385","hashOfConfig":"296"},{"size":35,"mtime":1574620670453,"results":"386","hashOfConfig":"296"},{"size":51,"mtime":1574620670453,"results":"387","hashOfConfig":"296"},{"size":48,"mtime":1574620670453,"results":"388","hashOfConfig":"296"},{"size":35,"mtime":1574620670453,"results":"389","hashOfConfig":"296"},{"size":33,"mtime":1574620670453,"results":"390","hashOfConfig":"296"},{"size":31,"mtime":1574620670453,"results":"391","hashOfConfig":"296"},{"size":30,"mtime":1574620670453,"results":"392","hashOfConfig":"296"},{"size":37,"mtime":1574620670453,"results":"393","hashOfConfig":"296"},{"size":40,"mtime":1574620670453,"results":"394","hashOfConfig":"296"},{"size":25,"mtime":1574620670453,"results":"395","hashOfConfig":"296"},{"size":28,"mtime":1574620670453,"results":"396","hashOfConfig":"296"},{"size":29,"mtime":1574620670453,"results":"397","hashOfConfig":"296"},{"size":5821,"mtime":1574797996131,"results":"398","hashOfConfig":"296"},{"size":2201,"mtime":1574797996131,"results":"399","hashOfConfig":"296"},{"size":76,"mtime":1574797996131,"results":"400","hashOfConfig":"296"},{"size":780,"mtime":1574797996131,"results":"401","hashOfConfig":"296"},{"size":1208,"mtime":1574797996131,"results":"402","hashOfConfig":"296"},{"size":465,"mtime":1574797996131,"results":"403","hashOfConfig":"296"},{"size":46,"mtime":1575231081809,"results":"404","hashOfConfig":"296"},{"size":4093,"mtime":1575231081809,"results":"405","hashOfConfig":"296"},{"size":34,"mtime":1574797996131,"results":"406","hashOfConfig":"296"},{"size":29,"mtime":1574797996131,"results":"407","hashOfConfig":"296"},{"size":894,"mtime":1574797996131,"results":"408","hashOfConfig":"296"},{"size":20,"mtime":1574797996135,"results":"409","hashOfConfig":"296"},{"size":20,"mtime":1574797996135,"results":"410","hashOfConfig":"296"},{"size":270,"mtime":1574797996135,"results":"411","hashOfConfig":"296"},{"size":7019,"mtime":1574797996135,"results":"412","hashOfConfig":"296"},{"size":2052,"mtime":1574797996135,"results":"413","hashOfConfig":"296"},{"size":1153,"mtime":1574797996135,"results":"414","hashOfConfig":"296"},{"size":15837,"mtime":1574797996135,"results":"415","hashOfConfig":"296"},{"size":2293,"mtime":1574797996135,"results":"416","hashOfConfig":"296"},{"size":126,"mtime":1574797996135,"results":"417","hashOfConfig":"296"},{"size":2744,"mtime":1574797996135,"results":"418","hashOfConfig":"296"},{"size":157,"mtime":1574797996135,"results":"419","hashOfConfig":"296"},{"size":677,"mtime":1574797996135,"results":"420","hashOfConfig":"296"},{"size":1607,"mtime":1574797996135,"results":"421","hashOfConfig":"296"},{"size":763,"mtime":1574797996135,"results":"422","hashOfConfig":"296"},{"size":2655,"mtime":1574797996139,"results":"423","hashOfConfig":"296"},{"size":158,"mtime":1574797996139,"results":"424","hashOfConfig":"296"},{"size":562,"mtime":1574797996139,"results":"425","hashOfConfig":"296"},{"size":8360,"mtime":1574797996139,"results":"426","hashOfConfig":"296"},{"size":286,"mtime":1574797996139,"results":"427","hashOfConfig":"296"},{"size":2536,"mtime":1574797996139,"results":"428","hashOfConfig":"296"},{"size":36272,"mtime":1574797996139,"results":"429","hashOfConfig":"296"},{"size":1582,"mtime":1574797996139,"results":"430","hashOfConfig":"296"},{"size":54,"mtime":1574797996139,"results":"431","hashOfConfig":"296"},{"size":228,"mtime":1574797996139,"results":"432","hashOfConfig":"296"},{"size":1713,"mtime":1575729809251,"results":"433","hashOfConfig":"296"},{"size":480,"mtime":1574620670465,"results":"434","hashOfConfig":"296"},{"size":56,"mtime":1574620670465,"results":"435","hashOfConfig":"296"},{"size":1262,"mtime":1575231081809,"results":"436","hashOfConfig":"296"},{"size":592,"mtime":1575729809251,"results":"437","hashOfConfig":"296"},{"size":168,"mtime":1574797996143,"results":"438","hashOfConfig":"296"},{"size":40,"mtime":1574620670465,"results":"439","hashOfConfig":"296"},{"size":2348,"mtime":1574620670469,"results":"440","hashOfConfig":"296"},{"size":3237,"mtime":1574797996143,"results":"441","hashOfConfig":"296"},{"size":2982,"mtime":1574620670469,"results":"442","hashOfConfig":"296"},{"size":343,"mtime":1574797996143,"results":"443","hashOfConfig":"296"},{"size":1529,"mtime":1574797996143,"results":"444","hashOfConfig":"296"},{"size":1525,"mtime":1575231081809,"results":"445","hashOfConfig":"296"},{"size":534,"mtime":1574620670473,"results":"446","hashOfConfig":"296"},{"size":215,"mtime":1574620670473,"results":"447","hashOfConfig":"296"},{"size":646,"mtime":1575231081809,"results":"448","hashOfConfig":"296"},{"size":23,"mtime":1574797996147,"results":"449","hashOfConfig":"296"},{"size":10916,"mtime":1574797996147,"results":"450","hashOfConfig":"296"},{"size":306,"mtime":1574620670473,"results":"451","hashOfConfig":"296"},{"size":2965,"mtime":1574797996147,"results":"452","hashOfConfig":"296"},{"size":261,"mtime":1574797996147,"results":"453","hashOfConfig":"296"},{"size":937,"mtime":1574797996147,"results":"454","hashOfConfig":"296"},{"size":338,"mtime":1574620670473,"results":"455","hashOfConfig":"296"},{"size":2973,"mtime":1575231081809,"results":"456","hashOfConfig":"296"},{"size":215,"mtime":1574620670473,"results":"457","hashOfConfig":"296"},{"size":314,"mtime":1574797996147,"results":"458","hashOfConfig":"296"},{"size":38,"mtime":1574620670473,"results":"459","hashOfConfig":"296"},{"size":66,"mtime":1574620670477,"results":"460","hashOfConfig":"296"},{"size":3866,"mtime":1574797996151,"results":"461","hashOfConfig":"296"},{"size":178,"mtime":1574620670477,"results":"462","hashOfConfig":"296"},{"size":89,"mtime":1574620670477,"results":"463","hashOfConfig":"296"},{"size":532,"mtime":1574620670477,"results":"464","hashOfConfig":"296"},{"size":63,"mtime":1574620670477,"results":"465","hashOfConfig":"296"},{"size":50,"mtime":1574620670477,"results":"466","hashOfConfig":"296"},{"size":1290,"mtime":1574620670477,"results":"467","hashOfConfig":"296"},{"size":136,"mtime":1574620670477,"results":"468","hashOfConfig":"296"},{"size":1614,"mtime":1574620670477,"results":"469","hashOfConfig":"296"},{"size":9208,"mtime":1574797996151,"results":"470","hashOfConfig":"296"},{"size":50,"mtime":1574620670477,"results":"471","hashOfConfig":"296"},{"size":1935,"mtime":1574797996151,"results":"472","hashOfConfig":"296"},{"size":2157,"mtime":1574797996151,"results":"473","hashOfConfig":"296"},{"size":986,"mtime":1575729809255,"results":"474","hashOfConfig":"296"},{"size":48,"mtime":1574620670477,"results":"475","hashOfConfig":"296"},{"size":281,"mtime":1574620670477,"results":"476","hashOfConfig":"296"},{"size":2120,"mtime":1574620670477,"results":"477","hashOfConfig":"296"},{"size":961,"mtime":1574620670477,"results":"478","hashOfConfig":"296"},{"size":1800,"mtime":1574620670477,"results":"479","hashOfConfig":"296"},{"size":2313,"mtime":1574620670477,"results":"480","hashOfConfig":"296"},{"size":4319,"mtime":1574797996151,"results":"481","hashOfConfig":"296"},{"size":141,"mtime":1574620670477,"results":"482","hashOfConfig":"296"},{"size":6608,"mtime":1574797996151,"results":"483","hashOfConfig":"296"},{"size":50,"mtime":1574620670481,"results":"484","hashOfConfig":"296"},{"size":554,"mtime":1574620670481,"results":"485","hashOfConfig":"296"},{"size":231,"mtime":1574620670481,"results":"486","hashOfConfig":"296"},{"size":1262,"mtime":1574620670481,"results":"487","hashOfConfig":"296"},{"size":75,"mtime":1574620670481,"results":"488","hashOfConfig":"296"},{"size":560,"mtime":1574620670481,"results":"489","hashOfConfig":"296"},{"size":718,"mtime":1575209769469,"results":"490","hashOfConfig":"296"},{"size":3088,"mtime":1577799165602,"results":"491","hashOfConfig":"296"},{"size":5913,"mtime":1577794994768,"results":"492","hashOfConfig":"296"},{"size":2493,"mtime":1577799215990,"results":"493","hashOfConfig":"296"},{"size":2097,"mtime":1577790085445,"results":"494","hashOfConfig":"296"},{"size":473,"mtime":1574620670481,"results":"495","hashOfConfig":"296"},{"size":575,"mtime":1577791330280,"results":"496","hashOfConfig":"296"},{"size":462,"mtime":1574620670481,"results":"497","hashOfConfig":"296"},{"size":3021,"mtime":1577794461918,"results":"498","hashOfConfig":"296"},{"size":1042,"mtime":1575197547567,"results":"499","hashOfConfig":"296"},{"size":603,"mtime":1575729809255,"results":"500","hashOfConfig":"296"},{"size":248,"mtime":1574620670429,"results":"501","hashOfConfig":"502"},{"size":10900,"mtime":1574620863005,"results":"503","hashOfConfig":"502"},{"size":730,"mtime":1574620670465,"results":"504","hashOfConfig":"502"},{"size":3946,"mtime":1574620670465,"results":"505","hashOfConfig":"502"},{"size":2920,"mtime":1574620670465,"results":"506","hashOfConfig":"502"},{"size":6824,"mtime":1574620863005,"results":"507","hashOfConfig":"502"},{"size":2098,"mtime":1574620670465,"results":"508","hashOfConfig":"502"},{"size":8252,"mtime":1574620863009,"results":"509","hashOfConfig":"502"},{"size":5943,"mtime":1574620670469,"results":"510","hashOfConfig":"502"},{"size":428,"mtime":1574620670469,"results":"511","hashOfConfig":"502"},{"size":162,"mtime":1574620670469,"results":"512","hashOfConfig":"502"},{"size":3057,"mtime":1574620670469,"results":"513","hashOfConfig":"502"},{"size":55,"mtime":1574620670469,"results":"514","hashOfConfig":"502"},{"size":474,"mtime":1574621187430,"results":"515","hashOfConfig":"502"},{"size":1618,"mtime":1574620863009,"results":"516","hashOfConfig":"502"},{"size":3186,"mtime":1574620863009,"results":"517","hashOfConfig":"502"},{"size":1228,"mtime":1574620863009,"results":"518","hashOfConfig":"502"},{"size":3100,"mtime":1574620670469,"results":"519","hashOfConfig":"502"},{"size":2100,"mtime":1574620670469,"results":"520","hashOfConfig":"502"},{"size":1477,"mtime":1574620670473,"results":"521","hashOfConfig":"502"},{"size":4769,"mtime":1574620863009,"results":"522","hashOfConfig":"502"},{"size":33866,"mtime":1574620863009,"results":"523","hashOfConfig":"502"},{"size":1642,"mtime":1574620670473,"results":"524","hashOfConfig":"502"},{"size":133,"mtime":1574620863009,"results":"525","hashOfConfig":"502"},{"size":839,"mtime":1575054389462,"results":"526","hashOfConfig":"296"},{"size":15628,"mtime":1575729809251,"results":"527","hashOfConfig":"296"},{"size":3120,"mtime":1575054389462,"results":"528","hashOfConfig":"296"},{"size":514,"mtime":1575054389462,"results":"529","hashOfConfig":"296"},{"size":78,"mtime":1574797996139,"results":"530","hashOfConfig":"296"},{"size":72,"mtime":1575197547567,"results":"531","hashOfConfig":"296"},{"size":434,"mtime":1575197547567,"results":"532","hashOfConfig":"296"},{"size":2419,"mtime":1575231081809,"results":"533","hashOfConfig":"296"},{"size":594,"mtime":1575231081805,"results":"534","hashOfConfig":"296"},{"size":54,"mtime":1575231081805,"results":"535","hashOfConfig":"296"},{"size":529,"mtime":1575231081805,"results":"536","hashOfConfig":"296"},{"size":53,"mtime":1575231081805,"results":"537","hashOfConfig":"296"},{"size":699,"mtime":1575231081805,"results":"538","hashOfConfig":"296"},{"size":2280,"mtime":1575231081805,"results":"539","hashOfConfig":"296"},{"size":249,"mtime":1575231081805,"results":"540","hashOfConfig":"296"},{"size":803,"mtime":1575231081805,"results":"541","hashOfConfig":"296"},{"size":1893,"mtime":1575231081805,"results":"542","hashOfConfig":"296"},{"size":214,"mtime":1575231081809,"results":"543","hashOfConfig":"296"},{"size":738,"mtime":1575231081809,"results":"544","hashOfConfig":"296"},{"size":49,"mtime":1575231081809,"results":"545","hashOfConfig":"296"},{"size":1122,"mtime":1575231081809,"results":"546","hashOfConfig":"296"},{"size":60,"mtime":1575231081809,"results":"547","hashOfConfig":"296"},{"size":9632,"mtime":1575231081809,"results":"548","hashOfConfig":"296"},{"size":260,"mtime":1575231081809,"results":"549","hashOfConfig":"296"},{"size":266,"mtime":1575231081809,"results":"550","hashOfConfig":"296"},{"size":453,"mtime":1575231081809,"results":"551","hashOfConfig":"296"},{"size":33,"mtime":1575729809239,"results":"552","hashOfConfig":"296"},{"size":602,"mtime":1575729809239,"results":"553","hashOfConfig":"296"},{"size":43,"mtime":1575729809239,"results":"554","hashOfConfig":"296"},{"size":163,"mtime":1575729809239,"results":"555","hashOfConfig":"296"},{"size":2157,"mtime":1575729809247,"results":"556","hashOfConfig":"296"},{"size":14880,"mtime":1577798834426,"results":"557","hashOfConfig":"296"},{"size":1081,"mtime":1575729809243,"results":"558","hashOfConfig":"296"},{"size":1962,"mtime":1576607687453,"results":"559","hashOfConfig":"296"},{"size":1516,"mtime":1575729809243,"results":"560","hashOfConfig":"296"},{"size":344,"mtime":1575729809247,"results":"561","hashOfConfig":"296"},{"size":923,"mtime":1575729809247,"results":"562","hashOfConfig":"296"},{"size":27,"mtime":1575729809251,"results":"563","hashOfConfig":"296"},{"size":1749,"mtime":1575729809251,"results":"564","hashOfConfig":"296"},{"size":3785,"mtime":1575729809251,"results":"565","hashOfConfig":"296"},{"size":360,"mtime":1575729809239,"results":"566","hashOfConfig":"296"},{"size":1786,"mtime":1576607687453,"results":"567","hashOfConfig":"296"},{"size":1395,"mtime":1575729809247,"results":"568","hashOfConfig":"296"},{"size":13978,"mtime":1575729809247,"results":"569","hashOfConfig":"296"},{"size":2816,"mtime":1575729809247,"results":"570","hashOfConfig":"296"},{"size":30574,"mtime":1576607687453,"results":"571","hashOfConfig":"296"},{"size":19308,"mtime":1576607687457,"results":"572","hashOfConfig":"296"},{"size":651,"mtime":1576607687457,"results":"573","hashOfConfig":"296"},{"size":746,"mtime":1576607687457,"results":"574","hashOfConfig":"296"},{"size":21504,"mtime":1576607687457,"results":"575","hashOfConfig":"296"},{"size":3007,"mtime":1576607687457,"results":"576","hashOfConfig":"296"},{"size":868,"mtime":1576607687457,"results":"577","hashOfConfig":"296"},{"size":181,"mtime":1576607687457,"results":"578","hashOfConfig":"296"},{"size":192,"mtime":1576607687457,"results":"579","hashOfConfig":"296"},{"size":1290,"mtime":1576607687457,"results":"580","hashOfConfig":"296"},{"size":575,"mtime":1576607687457,"results":"581","hashOfConfig":"296"},{"size":471,"mtime":1576607687457,"results":"582","hashOfConfig":"296"},{"size":758,"mtime":1576607687457,"results":"583","hashOfConfig":"296"},{"size":333,"mtime":1576607687457,"results":"584","hashOfConfig":"296"},{"size":2590,"mtime":1577798238608,"results":"585","hashOfConfig":"296"},{"size":1331,"mtime":1577798878999,"results":"586","hashOfConfig":"296"},{"size":186,"mtime":1577791958063,"results":"587","hashOfConfig":"296"},{"size":1906,"mtime":1577794605004,"results":"588","hashOfConfig":"296"},{"size":106,"mtime":1577793861315,"results":"589","hashOfConfig":"296"},{"size":14891,"mtime":1577798728745,"results":"590","hashOfConfig":"296"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bf29m9",{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"597","messages":"598","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"599","messages":"600","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"605","messages":"606","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"609","messages":"610","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"613","messages":"614","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"621","messages":"622","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"627","messages":"628","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"635","messages":"636","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"637","messages":"638","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"651","messages":"652","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"661","messages":"662","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"665","messages":"666","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"671","messages":"672","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"673","messages":"674","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"685","messages":"686","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"687","messages":"688","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"691","messages":"692","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"699","messages":"700","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"709","messages":"710","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"711","messages":"712","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"721","messages":"722","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"723","messages":"724","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"727","messages":"728","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"731","messages":"732","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"735","messages":"736","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"737","messages":"738","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"741","messages":"742","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"745","messages":"746","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"753","messages":"754","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"755","messages":"756","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"757","messages":"758","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"759","messages":"760","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"763","messages":"764","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"767","messages":"768","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"791","messages":"792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"795","messages":"796","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"801","messages":"802","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"803","messages":"804","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"823","messages":"824","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"829","messages":"830","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"835","messages":"836","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"851","messages":"852","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"855","messages":"856","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"857","messages":"858","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"863","messages":"864","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"871","messages":"872","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"881","messages":"882","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"887","messages":"888","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"895","messages":"896","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"899","messages":"900","errorCount":0,"warningCount":128,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"903","messages":"904","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"907","messages":"908","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"909","messages":"910","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"911","messages":"912","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"913","messages":"914","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"915","messages":"916","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"921","messages":"922","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"923","messages":"924","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"925","messages":"926","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"939","messages":"940","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"941","messages":"942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"943","messages":"944","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"945","messages":"946","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"947","messages":"948","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"949","messages":"950","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"951","messages":"952","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"953","messages":"954","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"955","messages":"956","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"957","messages":"958","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"959","messages":"960","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"961","messages":"962","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"963","messages":"964","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"965","messages":"966","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"967","messages":"968","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"969","messages":"970","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"971","messages":"972","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"973","messages":"974","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"975","messages":"976","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"977","messages":"978","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"979","messages":"980","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"981","messages":"982","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"983","messages":"984","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"985","messages":"986","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"987","messages":"988","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"989","messages":"990","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"991","messages":"992","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"993","messages":"994","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"995","messages":"996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"997","messages":"998","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1001","messages":"1002","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o2e4c6",{"filePath":"1003","messages":"1004","errorCount":2,"warningCount":1,"fixableErrorCount":2,"fixableWarningCount":0,"source":"1005"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1008"},{"filePath":"1009","messages":"1010","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1011"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1014"},{"filePath":"1015","messages":"1016","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1017"},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1020"},{"filePath":"1021","messages":"1022","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1023"},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1026"},{"filePath":"1027","messages":"1028","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1029"},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1034"},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1039"},{"filePath":"1040","messages":"1041","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1042"},{"filePath":"1043","messages":"1044","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1045"},{"filePath":"1046","messages":"1047","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1048"},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1051"},{"filePath":"1052","messages":"1053","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1054"},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1057"},{"filePath":"1058","messages":"1059","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1060"},{"filePath":"1061","messages":"1062","errorCount":24,"warningCount":48,"fixableErrorCount":18,"fixableWarningCount":0,"source":"1063"},{"filePath":"1064","messages":"1065","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1066"},{"filePath":"1067","messages":"1068","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1075","messages":"1076","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1077","messages":"1078","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1091","messages":"1092","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1093","messages":"1094","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1099","messages":"1100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1101","messages":"1102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1103","messages":"1104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1105","messages":"1106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1107","messages":"1108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1117","messages":"1118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1121","messages":"1122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1123","messages":"1124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1125","messages":"1126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1127","messages":"1128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1129","messages":"1130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1133","messages":"1134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1149","messages":"1150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1151","messages":"1152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1153","messages":"1154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1157","messages":"1158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1159","messages":"1160","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1165","messages":"1166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1167","messages":"1168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1169","messages":"1170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1171","messages":"1172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1173","messages":"1174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1175","messages":"1176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1177","messages":"1178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1179","messages":"1180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1181","messages":"1182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1185","messages":"1186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1187","messages":"1188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1189","messages":"1190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1191","messages":"1192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1193","messages":"1194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1195","messages":"1196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1197","messages":"1198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/paul/projects/decentrilized-protocol/src/App.tsx",["1199","1200","1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212","1213","1214","1215","1216","1217","1218","1219"],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/error-extended-class-base/error-extended-class-base.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/event-emitter-class-base/event-emitter-class-base.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/event-emitter-class-base/event-emitter-class-base.types.ts",["1220","1221","1222"],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/http-request-class-base/http-request-class-base-subclasses/http-request-class-base-body-processor.ts",["1223","1224"],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/http-request-class-base/http-request-class-base-subclasses/http-request-class-base-response-error.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/http-request-class-base/http-request-class-base-subclasses/http-request-class-response-processor.ts",["1225"],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/http-request-class-base/http-request-class-base-utils.ts",["1226","1227","1228"],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/http-request-class-base/http-request-class-base.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/http-request-class-base/http-request-class-base.ts",["1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239"],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/http-request-class-base/http-request-class-base.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/http-request-class-base/http-request-class-base.utils.ts",["1240"],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/mime-types-class-base/mime-types-class-base.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/mime-types-class-base/mime-types-class-base.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/queue-manager-class-base/queue-manager-class-base.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/queue-manager-class-base/queue-manager-class-base.ts",["1241","1242","1243","1244","1245","1246"],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/queue-manager-class-base/queue-manager-class-base.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/status-class-base/status-class-base.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/status-class-base/status-class-base.ts",["1247","1248","1249"],"/home/paul/projects/decentrilized-protocol/src/classes/basic-classes/status-class-base/status-class-base.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-const/central-authority-class-const-auth-credentials.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-const/central-authority-class-const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-types/central-authority-class-types-common.ts",["1250","1251"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-types/central-authority-class-types-crypto-credentials.ts",["1252"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-types/central-authority-class-types-crypto-keys.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-types/central-authority-class-types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-formatters/central-authority-class-user-identity-formatters-formatter-v1/central-authority-class-user-identity-formatters-formatter-v1.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-formatters/central-authority-class-user-identity-formatters.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-formatters/central-authority-class-user-identity-formatters.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-formatters/central-authority-class-user-identity-formatters.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-formatters/central-authority-class-user-identity-formatters.utils.ts",["1253"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-parsers/central-authority-class-user-identity-parsers-parser-v1/central-authority-class-user-identity-parsers-parser-v1.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-parsers/central-authority-class-user-identity-parsers-parser-v1/central-authority-class-user-identity-parsers-parser-v1.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-parsers/central-authority-class-user-identity-parsers.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-parsers/central-authority-class-user-identity-parsers.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-parsers/central-authority-class-user-identity-parsers.types.ts",["1254"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-parsers/central-authority-class-user-identity-parsers.utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-validators/central-authority-class-user-identity-validator-v1/central-authority-class-user-identity-validator-v1.ts",["1255"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-validators/central-authority-class-user-identity-validators.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-validators/central-authority-class-user-identity-validators.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-validators/central-authority-class-user-identity-validators.types.ts",["1256"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-validators/central-authority-class-user-identity-validators.utils.ts",["1257","1258","1259"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity.ts",["1260","1261","1262"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.credentials-storage/central-authority-connection-firebase-utils.credentials-storage.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.credentials-storage/central-authority-connection-firebase-utils.credentials-storage.ts",["1263","1264","1265","1266","1267","1268","1269"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.credentials-storage/central-authority-connection-firebase-utils.credentials-storage.types.ts",["1270"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.database/central-authority-connection-firebase-utils.database.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.database/central-authority-connection-firebase-utils.database.ts",["1271","1272","1273","1274","1275","1276","1277"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase.const/central-authority-connection-firebase.const.error-codes.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase.const/central-authority-connection-firebase.const.restrictions.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase.const/central-authority-connection-firebase.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase.ts",["1278"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase.types.configuration.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-const/central-authority-connections-const-error-codes.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-const/central-authority-connections-const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys-common.ts",["1279","1280","1281","1282"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys-export.ts",["1283"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys-generate.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys-import.ts",["1284"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-utils-common/central-authority-utils-crypto-credentials/central-authority-utils-crypto-credentials.ts",["1285","1286"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-validators/central-authority-validators-auth-credentials/central-authority-validators-auth-credentials.ts",["1287","1288","1289","1290","1291","1292","1293"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-validators/central-authority-validators-crypto-keys/central-authority-validators-crypto-keys-schemas.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-validators/central-authority-validators-crypto-keys/central-authority-validators-crypto-keys.ts",["1294","1295","1296","1297"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-validators/central-authority-validators-user/central-authority-validators-user.schemes.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-validators/central-authority-validators-user/central-authority-validators-user.ts",["1298"],"/home/paul/projects/decentrilized-protocol/src/classes/safe-storage-class/safe-storage-class.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/safe-storage-class/safe-storage-class.ts",["1299","1300","1301","1302","1303","1304","1305","1306","1307","1308","1309","1310","1311","1312"],"/home/paul/projects/decentrilized-protocol/src/classes/safe-storage-class/safe-storage-class.types.ts",["1313"],"/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret_storage_providers/secret-storage-level-js-provider/secret-storage-level-js-provider.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret_storage_providers/secret-storage-level-js-provider/secret-storage-level-js-provider.ts",["1314","1315","1316"],"/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret_storage_providers/secret-storage-local-forage-provider/secret-storage-local-forage-provider.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret_storage_providers/secret-storage-local-forage-provider/secret-storage-local-forage-provider.ts",["1317","1318","1319"],"/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret_storage_providers/secret-storage-local-storage-provider/secret-storage-local-storage-provider.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret_storage_providers/secret-storage-session-storage-provider/secret-storage-session-storage-provider.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret-storage-class.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret-storage-class.ts",["1320","1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331"],"/home/paul/projects/decentrilized-protocol/src/classes/secret-storage-class/secret-storage-class.types.ts",["1332"],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/swarm-connection-class-subclass-ipfs.browser.conf.ts",["1333"],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/swarm-connection-class-subclass-ipfs.const.ts",["1334"],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/swarm-connection-class-subclass-ipfs.delegate.conf.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/swarm-connection-class-subclass-ipfs.libp2p.conf.ts",["1335"],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/swarm-connection-class-subclass-ipfs.signal-star.conf.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/swarm-connection-class-subclass-ipfs.ts",["1336","1337","1338"],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/swarm-connection-class-subclass-ipfs.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-bootstrap.d.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-delegated-content-routing.d.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-delegated-peer-routing.d.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-gossipsub.d.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-kad-dht.d.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-secio.d.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-spdy.d.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-webrtc-star.d.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p-websocket-star.d.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/libp2p.d.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/multiaddr.d.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/types/pull-mplex.d.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class.ts",["1339","1340"],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-connection-class/swarm-connection-class.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-raw-constructor/swarm-message-subclass-raw-constructor.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-raw-constructor/swarm-message-subclass-raw-constructor.ts",["1341","1342"],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-raw-constructor/swarm-message-subclass-raw-constructor.types.ts",["1343"],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-class.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-class.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-access-controller/swarm-store-connector-orbit-db-subclass-access-controller.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-access-controller/swarm-store-connector-orbit-db-subclass-access-controller.ts",["1344","1345","1346","1347","1348","1349"],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-access-controller/swarm-store-connector-orbit-db-subclass-access-controller.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-database/swarm-store-connector-orbit-db-subclass-database.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-database/swarm-store-connector-orbit-db-subclass-database.ts",["1350","1351","1352","1353","1354","1355","1356","1357"],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-database/swarm-store-connector-orbit-db-subclass-database.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-identity-provider/swarm-store-connector-orbit-db-subclass-identity-provider.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-identity-provider/swarm-store-connector-orbit-db-subclass-identity-provider.ts",["1358","1359","1360","1361","1362","1363"],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-keystore/swarm-store-connector-orbit-db-subclass-keystore.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-keystore/swarm-store-connector-orbit-db-subclass-keystore.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-keystore/swarm-store-connector-orbit-db-subclass-keystore.utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-storage-cache/swarm-store-connector-orbit-db-subclass-storage-cache.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-storage-fabric/swarm-store-connector-orbit-db-subclass-storage-fabric.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-storage-fabric/swarm-store-connector-orbit-db-subclass-storage-fabric.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter/swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter/swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter.ts",["1364"],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter/swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db.const.ts",["1365"],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db.ts",["1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384"],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/const/common-date-time/common-date-time-timezone.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/const/common-values/common-values.ts",[],"/home/paul/projects/decentrilized-protocol/src/const/const-validation-schemes/const-validation-schemes-common.ts",[],"/home/paul/projects/decentrilized-protocol/src/const/const-validation-schemes/const-validation-schemes-credentials.ts",[],"/home/paul/projects/decentrilized-protocol/src/const/const-validation-schemes/const-validation-schemes.ts",[],"/home/paul/projects/decentrilized-protocol/src/const/const-validation-values/const-validation-values-messaging-date.ts",[],"/home/paul/projects/decentrilized-protocol/src/const/const-values-restrictions-common.ts",[],"/home/paul/projects/decentrilized-protocol/src/index.tsx",[],"/home/paul/projects/decentrilized-protocol/src/react-app-env.d.ts",[],"/home/paul/projects/decentrilized-protocol/src/test/data-sign-test.ts",[],"/home/paul/projects/decentrilized-protocol/src/test/encryption-test.ts",["1385","1386","1387","1388","1389","1390","1391","1392","1393","1394"],"/home/paul/projects/decentrilized-protocol/src/test/error-extended-class-test.ts",[],"/home/paul/projects/decentrilized-protocol/src/test/ipfs-swarm-connection.test/ipfs-swarm-connection.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/test/mocha-chai-initialize.ts",["1395"],"/home/paul/projects/decentrilized-protocol/src/test/validation-messaging.test/validate-messaging-timestamps-test.ts",[],"/home/paul/projects/decentrilized-protocol/src/types/channels.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/types/encryption-keys.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/types/helper.types.ts",["1396","1397"],"/home/paul/projects/decentrilized-protocol/src/types/ipfs.d.ts",[],"/home/paul/projects/decentrilized-protocol/src/types/ipfs.types.d.ts",["1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438","1439","1440","1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458","1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1470","1471","1472","1473","1474","1475","1476","1477","1478","1479","1480","1481","1482","1483","1484","1485","1486","1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505","1506","1507","1508","1509","1510","1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522","1523","1524","1525"],"/home/paul/projects/decentrilized-protocol/src/types/main.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/types/orbit-db-cache.d.ts",["1526"],"/home/paul/projects/decentrilized-protocol/src/types/orbit-db-identity-provider-ext.d.ts",[],"/home/paul/projects/decentrilized-protocol/src/types/orbit-db-keystore.d.ts",["1527","1528","1529"],"/home/paul/projects/decentrilized-protocol/src/types/users.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/common-utils/common-utils-array.ts",["1530","1531"],"/home/paul/projects/decentrilized-protocol/src/utils/common-utils/common-utils-objects.ts",["1532","1533"],"/home/paul/projects/decentrilized-protocol/src/utils/common-utils/common-utils-timer.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/common-utils/common-utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/data-cache-utils/data-cache-utils-caching-decorator/data-cache-utils-caching-decorator.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/data-cache-utils/data-cache-utils-caching-decorator/data-cache-utils-caching-decorator.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/data-cache-utils/data-cache-utils-caching-decorator/data-cache-utils-caching-decorator.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/data-cache-utils/data-cache-utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/data-compression-utils/data-compression-utils-strings.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/data-compression-utils/data-compression-utils.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/data-compression-utils/data-compression-utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/data-sign-utils/data-sign-utils.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/data-sign-utils/data-sign-utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/data-sign-utils/data-sign-utils.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/data-sign-utils/keys.data-sign-utils.ts",["1534","1535","1536"],"/home/paul/projects/decentrilized-protocol/src/utils/data-sign-utils/main.data-sign-utils.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/data-sign-utils/sign-data.encryption-utils.ts",["1537"],"/home/paul/projects/decentrilized-protocol/src/utils/data-sign-utils/verify-data.encryption-utils.ts",["1538"],"/home/paul/projects/decentrilized-protocol/src/utils/data-validators-utils/data-validators-utils-common.ts",["1539","1540","1541","1542","1543"],"/home/paul/projects/decentrilized-protocol/src/utils/data-validators-utils/data-validators-utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/encryption-keys-utils/encryption-keys-utils.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/encryption-keys-utils/encryption-keys-utils.ts",["1544","1545","1546","1547","1548","1549"],"/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/crypto-utils.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/crypto-utils.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/decrypt-data.encryption-utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/encrypt-data.encryption-utils.ts",["1550"],"/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/encryption-utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/keys.encryption-utils.ts",["1551"],"/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/main.crypto-utils.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/firebase-utils/firebase-utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/hash-calculation-utils/hash-calculation-utils.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/hash-calculation-utils/hash-calculation-utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/identity-utils/identity-utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/lazy-loading-utils/lazy-loading-utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/main-utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/password-utils/decrypt.password-utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/password-utils/derive-key.password-utils.ts",["1552","1553"],"/home/paul/projects/decentrilized-protocol/src/utils/password-utils/encrypt.password-utils.ts",["1554","1555"],"/home/paul/projects/decentrilized-protocol/src/utils/password-utils/password-utils.const.ts",["1556","1557"],"/home/paul/projects/decentrilized-protocol/src/utils/password-utils/password-utils.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/string-encoding-utils.ts",["1558"],"/home/paul/projects/decentrilized-protocol/src/utils/string-utilities.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/typed-array-utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/validation-utils/validation-utils-timestamp.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/validation-utils/validation-utils.ts",["1559"],"/home/paul/projects/decentrilized-protocol/src/App.test.tsx",[],"/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-aurhority.keys.common.test.ts",["1560","1561","1562"],"import { signToString, verifyFromString } from 'utils/data-sign-utils';\nimport {\n  getPublicKeysFromCryptoKeyPairs,\n  checkIsCryptoKeyPairs,\n  exportKeyPairsAsString,\n  importKeyPairsFromString,\n  CA_CRYPTO_KEY_PAIRS_ENCRYPTION_KEY_PAIR_NAME,\n  CA_CRYPTO_KEY_PAIRS_SIGN_KEY_PAIR_NAME,\n  CA_CRYPTO_KEY_PAIRS_ENCRYPTION_PUBLIC_KEY_NAME,\n  CA_CRYPTO_KEY_PAIRS_SIGN_PUBLIC_KEY_NAME,\n} from 'classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys';\nimport {\n  encryptNative,\n  decryptNative,\n} from 'utils/encryption-utils/encryption-utils';\nimport {\n  TCACryptoKeyPairs,\n  TCACryptoPubilicKeys,\n} from 'classes/central-authority-class/central-authority-class-types/central-authority-class-types';\nimport {\n  stringToTypedArray,\n  typedArrayToString,\n} from 'utils/typed-array-utils';\n\nexport const runTestEncryptData = async (\n  keyPairs: TCACryptoKeyPairs\n): Promise<undefined | true> => {\n  const dataToEncode = 'data to encode';\n  const {\n    [CA_CRYPTO_KEY_PAIRS_ENCRYPTION_KEY_PAIR_NAME]: encryptionKeyPair,\n  } = keyPairs;\n  const dataToEncodeTypeedArray = stringToTypedArray(dataToEncode);\n\n  if (dataToEncodeTypeedArray instanceof Error) {\n    console.error(dataToEncodeTypeedArray);\n    console.error('Failed to convert data to typed array');\n    return;\n  }\n\n  const encryptedData = await encryptNative(\n    encryptionKeyPair.publicKey,\n    dataToEncodeTypeedArray\n  );\n\n  if (encryptedData instanceof Error) {\n    console.error('Cant encrypt data with the key pair generated');\n    console.error(encryptedData);\n    return;\n  }\n\n  const decryptedData = await decryptNative(\n    encryptionKeyPair.privateKey,\n    encryptedData\n  );\n\n  if (decryptedData instanceof Error) {\n    console.error('Cant decrypt data encrypted with a generated key pairs');\n    console.error(decryptedData);\n    return;\n  }\n\n  const decryptedString = typedArrayToString(decryptedData);\n\n  if (decryptedString instanceof Error) {\n    console.error(decryptedString);\n    console.error(\n      'Failed to convert a string decrypted as array buffer to a DOMString'\n    );\n  }\n\n  if (decryptedString !== dataToEncode) {\n    console.error(\n      `Decrypted data is invalid. Expected: ${dataToEncode}, but ${decryptedString} was received`\n    );\n    return;\n  }\n  return true;\n};\n\nexport const runTestDataSign = async (\n  keyPairs: TCACryptoKeyPairs\n): Promise<undefined | boolean> => {\n  const dataToSign = {\n    hello: 'test hello',\n  };\n  const { [CA_CRYPTO_KEY_PAIRS_SIGN_KEY_PAIR_NAME]: signKeyPair } = keyPairs;\n  const signString = await signToString(signKeyPair, dataToSign);\n\n  if (signString instanceof Error) {\n    console.error('Failed to sign the string');\n    console.error(signString);\n    return;\n  }\n  if (typeof signString !== 'string') {\n    console.error('Failed to sign the data as a string');\n    return;\n  }\n\n  const verifyDataResult = await verifyFromString(\n    signKeyPair,\n    dataToSign,\n    signString\n  );\n\n  if (verifyDataResult instanceof Error) {\n    console.error('Failed to verify the data signed');\n    console.error(verifyDataResult);\n    return;\n  }\n  if (verifyDataResult !== true) {\n    console.error('The wrong result was given by the verifyFromString');\n    console.error(verifyDataResult);\n    return;\n  }\n\n  const wrongDataVerifyResult = await verifyFromString(\n    signKeyPair,\n    'Wrong data',\n    signString\n  );\n\n  if (wrongDataVerifyResult instanceof Error) {\n    console.error('Failed to verify a non original string data');\n    console.error(wrongDataVerifyResult);\n    return;\n  }\n  if (wrongDataVerifyResult !== false) {\n    console.error('The wrong result of non origin string verification');\n    return;\n  }\n  return true;\n};\n\nexport const runTestForKeyPairs = async (\n  keyPairs: any\n): Promise<undefined | boolean> => {\n  if (keyPairs instanceof Error) {\n    console.error('Cant generate a crypto key pair');\n    console.error(keyPairs);\n    return;\n  }\n\n  if ((await runTestEncryptData(keyPairs)) !== true) {\n    return;\n  }\n  if ((await runTestDataSign(keyPairs)) !== true) {\n    return;\n  }\n\n  const exportedKeyPairs = await exportKeyPairsAsString(keyPairs);\n\n  if (exportedKeyPairs instanceof Error) {\n    console.error('failed to export the key pair');\n    console.error(exportedKeyPairs);\n    return;\n  }\n  if (typeof exportedKeyPairs !== 'string') {\n    console.error('exportedKeyPairs does not exported in a string format');\n    return;\n  }\n\n  const importedKeyPairs = await importKeyPairsFromString(exportedKeyPairs);\n\n  if (!checkIsCryptoKeyPairs(importedKeyPairs)) {\n    console.error('A wrong format of the imported key pairs');\n    return;\n  }\n  if (importedKeyPairs instanceof Error) {\n    console.error('Failed to import key pairs from string');\n    return;\n  }\n  console.log('run tests for the imported from the exported string key pairs');\n  if ((await runTestEncryptData(importedKeyPairs)) !== true) {\n    console.error(\n      'failed tests for the imported from the exported string key pairs'\n    );\n    return;\n  }\n  console.log(\n    'run tests for the imported from the exported string key pairs fot data sign'\n  );\n  if ((await runTestDataSign(keyPairs)) !== true) {\n    console.error(\n      'failed tests for the imported from the exported string key pairs fot data sign'\n    );\n    return;\n  }\n  console.log(\n    'run tests for the imported from the exported string key pairs: use public key from the imported key pairs and the private key from the originally generated key pairs'\n  );\n  if (\n    (await runTestEncryptData({\n      ...importedKeyPairs,\n      [CA_CRYPTO_KEY_PAIRS_ENCRYPTION_KEY_PAIR_NAME]: {\n        ...importedKeyPairs[CA_CRYPTO_KEY_PAIRS_ENCRYPTION_KEY_PAIR_NAME],\n        privateKey:\n          keyPairs[CA_CRYPTO_KEY_PAIRS_ENCRYPTION_KEY_PAIR_NAME].privateKey,\n      },\n    })) !== true\n  ) {\n    console.error(\n      'failed tests for the imported from the exported string key pairs: use public key from the imported key pairs and the private key from the originally generated key pairs'\n    );\n    return;\n  }\n  console.log(\n    'run tests for the imported from the exported string key pairs: use private key from the imported key pairs and the public key from the originally generated key pairs'\n  );\n  /** data sign test-- */\n  console.log(\n    'run tests data sign for the imported from the exported string key pairs: use private key from the imported key pairs and the private key from the originally generated key pairs'\n  );\n  if (\n    (await runTestDataSign({\n      ...importedKeyPairs,\n      [CA_CRYPTO_KEY_PAIRS_SIGN_KEY_PAIR_NAME]: {\n        ...importedKeyPairs[CA_CRYPTO_KEY_PAIRS_SIGN_KEY_PAIR_NAME],\n        privateKey: keyPairs[CA_CRYPTO_KEY_PAIRS_SIGN_KEY_PAIR_NAME].privateKey,\n      },\n    })) !== true\n  ) {\n    console.error(\n      'failed tests data sign for the imported from the exported string key pairs: use private key from the imported key pairs and the private key from the originally generated key pairs'\n    );\n    return;\n  }\n  /** --data sign test */\n  console.log(\n    'run tests encrypt for the imported from the exported string key pairs: use private key from the imported key pairs and the public key from the originally generated key pairs'\n  );\n  if (\n    (await runTestEncryptData({\n      ...importedKeyPairs,\n      [CA_CRYPTO_KEY_PAIRS_ENCRYPTION_KEY_PAIR_NAME]: {\n        ...importedKeyPairs[CA_CRYPTO_KEY_PAIRS_ENCRYPTION_KEY_PAIR_NAME],\n        publicKey:\n          keyPairs[CA_CRYPTO_KEY_PAIRS_ENCRYPTION_KEY_PAIR_NAME].publicKey,\n      },\n    })) !== true\n  ) {\n    console.log(\n      'failed tests for the imported from the exported string key pairs: use private key from the imported key pairs and the public key from the originally generated key pairs'\n    );\n    return;\n  }\n  /** data sign test-- */\n  console.log(\n    'run tests data sign for the imported from the exported string key pairs: use public key from the imported key pairs and the private key from the originally generated key pairs'\n  );\n  if (\n    (await runTestDataSign({\n      ...importedKeyPairs,\n      [CA_CRYPTO_KEY_PAIRS_SIGN_KEY_PAIR_NAME]: {\n        ...importedKeyPairs[CA_CRYPTO_KEY_PAIRS_SIGN_KEY_PAIR_NAME],\n        publicKey: keyPairs[CA_CRYPTO_KEY_PAIRS_SIGN_KEY_PAIR_NAME].publicKey,\n      },\n    })) !== true\n  ) {\n    console.error(\n      'failed tests data sign for the imported from the exported string key pairs: use public key from the imported key pairs and the private key from the originally generated key pairs'\n    );\n    return;\n  }\n  console.log(\n    'run tests data sign for the imported from the exported string key pairs: use private key from the imported key pairs and the public key from the originally generated key pairs'\n  );\n  /** --data sign test */\n\n  const publicKeys = getPublicKeysFromCryptoKeyPairs(keyPairs);\n\n  if (publicKeys instanceof Error) {\n    console.error('Cant get public keys from crypto key pairs');\n    console.error(publicKeys);\n    return;\n  }\n\n  console.log(\n    'run tests public keys encrypt for the imported from the exported string key pairs: use private key from the imported key pairs and the public key from the originally generated key pairs'\n  );\n  if (\n    (await runTestEncryptData({\n      ...importedKeyPairs,\n      [CA_CRYPTO_KEY_PAIRS_ENCRYPTION_KEY_PAIR_NAME]: {\n        ...importedKeyPairs[CA_CRYPTO_KEY_PAIRS_ENCRYPTION_KEY_PAIR_NAME],\n        publicKey: (publicKeys as TCACryptoPubilicKeys)[\n          CA_CRYPTO_KEY_PAIRS_ENCRYPTION_PUBLIC_KEY_NAME\n        ],\n      },\n    })) !== true\n  ) {\n    console.log(\n      'failed tests public keys for the imported from the exported string key pairs: use private key from the imported key pairs and the public key from the originally generated key pairs'\n    );\n    return;\n  }\n  /** data sign test-- */\n  console.log(\n    'run tests public keys data sign for the imported from the exported string key pairs: use public key from the imported key pairs and the private key from the originally generated key pairs'\n  );\n  if (\n    (await runTestDataSign({\n      ...importedKeyPairs,\n      [CA_CRYPTO_KEY_PAIRS_SIGN_KEY_PAIR_NAME]: {\n        ...importedKeyPairs[CA_CRYPTO_KEY_PAIRS_SIGN_KEY_PAIR_NAME],\n        publicKey: (publicKeys as TCACryptoPubilicKeys)[\n          CA_CRYPTO_KEY_PAIRS_SIGN_PUBLIC_KEY_NAME\n        ],\n      },\n    })) !== true\n  ) {\n    console.error(\n      'failed tests public keys data sign for the imported from the exported string key pairs: use public key from the imported key pairs and the private key from the originally generated key pairs'\n    );\n    return;\n  }\n  console.log(\n    'run tests public keys data sign for the imported from the exported string key pairs: use private key from the imported key pairs and the public key from the originally generated key pairs'\n  );\n  /** --data sign test */\n\n  console.warn('Central authority keys tests are succeed');\n  return true;\n};\n","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority-connection.test/central-authority-connection.test.firebase/central-authority-connection.test.firebase.const.ts",["1563"],"import { generateCryptoCredentials } from 'classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys';\n\nexport const CA_CONNECTION_FIREBASE_CONFIG = {\n  apiKey: 'AIzaSyCwmUlVklNmGZ0SD11NKT8gpvmZXbgbBRk',\n  authDomain: 'protocol-f251b.firebaseapp.com',\n  databaseURL: 'https://protocol-f251b.firebaseio.com',\n  projectId: 'protocol-f251b',\n  storageBucket: '',\n  messagingSenderId: '275196342406',\n  appId: '1:275196342406:web:40b79d671c50af57',\n};\n\nexport const CA_CONNECTION_FIREBASE_USER_CREDENTIALS = {\n  login: 'akulich.p@gmail.com',\n  password: '123456',\n};\n\nexport const CA_CONNECTION_FIREBASE_CREDENTIALS = CA_CONNECTION_FIREBASE_USER_CREDENTIALS;\n","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority-connection.test/central-authority-connection.test.firebase/central-authority-connection.test.firebase.credentials-storage.ts",["1564"],"import { CAConnectionFirestoreUtilsCredentialsStrorage } from 'classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.credentials-storage/central-authority-connection-firebase-utils.credentials-storage';\nimport { connectWithFirebase } from './central-authority-connection.test.firebase.utils';\nimport { generateCryptoCredentials } from 'classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys';\nimport {\n  getUserIdentityByCryptoCredentials,\n  compareCryptoCredentials,\n} from 'classes/central-authority-class/central-authority-utils-common/central-authority-utils-crypto-credentials/central-authority-utils-crypto-credentials';\n\nexport const runTestFirebaseCredentialsStorage = async () => {\n  console.warn('runTestFirebaseCredentialsStorage::start');\n  const firebaseConnection = await connectWithFirebase();\n\n  if (firebaseConnection instanceof Error) {\n    console.error(firebaseConnection);\n    return new Error('Failed to connect with firebase');\n  }\n\n  const credetntialsStoreConnectionToFirebase = new CAConnectionFirestoreUtilsCredentialsStrorage(\n    firebaseConnection\n  );\n\n  if (credetntialsStoreConnectionToFirebase.isConnected) {\n    console.error('Database connection flag must be false');\n    return;\n  }\n\n  const connectionResult = await credetntialsStoreConnectionToFirebase.connect();\n\n  if (connectionResult instanceof Error) {\n    console.error(connectionResult);\n    console.error('Failed to connect to the database server');\n    return;\n  }\n  if (!credetntialsStoreConnectionToFirebase.isConnected) {\n    console.error(\n      'Database connection flag must be true after connection method returns a success result'\n    );\n    return;\n  }\n\n  const credentialsForUser = await credetntialsStoreConnectionToFirebase.getCredentialsForTheCurrentUser();\n\n  if (credentialsForUser instanceof Error) {\n    console.error(credentialsForUser);\n    console.error('Failed to get credentials for the current user');\n    return;\n  }\n  if (!credentialsForUser) {\n    console.error('Credentials for the user must be auto generated on sign up');\n    return;\n  }\n\n  const credentials = await generateCryptoCredentials();\n\n  if (credentials instanceof Error) {\n    console.error('Failed to generate crypto credentials');\n    return;\n  }\n\n  const setCredentialsResult = await credetntialsStoreConnectionToFirebase.setUserCredentials(\n    credentials\n  );\n\n  if (setCredentialsResult instanceof Error) {\n    console.error(setCredentialsResult);\n    console.error('Failed to set credentials');\n    return;\n  }\n  if (\n    (await compareCryptoCredentials(\n      setCredentialsResult,\n      credentialsForUser\n    )) !== true\n  ) {\n    console.error(\n      'Credentials for the user created and stored once must be immputable anyway'\n    );\n    return;\n  }\n\n  const userId = getUserIdentityByCryptoCredentials(setCredentialsResult);\n\n  if (userId instanceof Error) {\n    console.error(userId);\n    console.error('Failed to get user id by crypto credentials');\n    return;\n  }\n\n  const getCredentialsResult = await credetntialsStoreConnectionToFirebase.getUserCredentials(\n    userId\n  );\n\n  if (!getCredentialsResult) {\n    console.error(\n      'There is no credentials stored before was found in the Firebsae database'\n    );\n    return;\n  }\n  if (getCredentialsResult instanceof Error) {\n    console.error('Failed to read credentials from the Firebase database');\n    return;\n  }\n  if (\n    (await compareCryptoCredentials(\n      setCredentialsResult,\n      credentialsForUser\n    )) !== true\n  ) {\n    console.error(\n      'Credentials for the user got by the user id must be immputable the same as the credentials set by the user on sign up flow'\n    );\n    return;\n  }\n  console.warn('runTestFirebaseCredentialsStorage::success');\n};\n","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority-connection.test/central-authority-connection.test.firebase/central-authority-connection.test.firebase.database.ts",["1565","1566"],"import CAConnectionWithFirebaseUtilDatabase from 'classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.database/central-authority-connection-firebase-utils.database';\nimport { connectWithFirebase } from './central-authority-connection.test.firebase.utils';\nimport { CA_CONNECTION_FIREBASE_UTILS_STORAGE_CREDENTIALS_KEY_PREFIX } from 'classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.credentials-storage/central-authority-connection-firebase-utils.credentials-storage.const';\nimport { generateUUID } from 'utils/identity-utils/identity-utils';\n\nexport const runTestFirebaseConnectionDatabase = async () => {\n  console.warn('runTestFirebaseConnectionDatabase::start');\n\n  const login = 'i2ga8r+7mc075w0nc9ns@sharklasers.com';\n  const password = '123456';\n  const firebaseConnection = await connectWithFirebase({\n    login,\n    password,\n  });\n\n  if (firebaseConnection instanceof Error) {\n    console.error(firebaseConnection);\n    return new Error('Failed to connect with firebase');\n  }\n\n  const databaseConnectionToFirebase = new CAConnectionWithFirebaseUtilDatabase();\n\n  if (databaseConnectionToFirebase.isConnected) {\n    console.error('Database connection flag must be false');\n    return;\n  }\n\n  const connectionResult = await databaseConnectionToFirebase.connect();\n\n  if (connectionResult instanceof Error) {\n    console.error(connectionResult);\n    console.error('Failed to connect to the database server');\n    return;\n  }\n  if (!databaseConnectionToFirebase.isConnected) {\n    console.error(\n      'Database connection flag must be true after connection method returns a success result'\n    );\n    return;\n  }\n\n  const randomUUID = generateUUID();\n  const testKey = `${CA_CONNECTION_FIREBASE_UTILS_STORAGE_CREDENTIALS_KEY_PREFIX}${randomUUID}`;\n  const testData = {\n    testData: 'testData',\n  };\n  const setValueResult = await databaseConnectionToFirebase.setValue(\n    testKey,\n    testData\n  );\n\n  if (setValueResult instanceof Error) {\n    console.error(setValueResult);\n    return setValueResult;\n  }\n\n  const readValueResult = await databaseConnectionToFirebase.getValue(testKey);\n\n  if (readValueResult instanceof Error) {\n    console.error(readValueResult);\n    console.error('Failed to read a data from the database');\n    return;\n  }\n  if (!readValueResult || typeof readValueResult !== 'object') {\n    console.error('Value is empty or have a wrong format');\n    return;\n  }\n  if ((readValueResult as any).testData !== testData.testData) {\n    console.error(\n      'The data read from the Firebase Realtime Database have a wrong format'\n    );\n    return;\n  }\n  console.warn('runTestFirebaseConnectionDatabase::success');\n};\n","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority-connection.test/central-authority-connection.test.firebase/central-authority-connection.test.firebase.ts",["1567","1568","1569","1570","1571","1572"],"import { ICentralAuthorityUserProfile } from 'classes/central-authority-class/central-authority-class-types/central-authority-class-types';\nimport {\n  connectToFirebase,\n  connectWithFirebase,\n  deleteTheUserFromCA,\n} from './central-authority-connection.test.firebase.utils';\nimport {\n  CA_CONNECTION_FIREBASE_USER_CREDENTIALS,\n  CA_CONNECTION_FIREBASE_CONFIG,\n} from './central-authority-connection.test.firebase.const';\nimport { checkIsValidCryptoCredentials } from 'classes/central-authority-class/central-authority-validators/central-authority-validators-crypto-keys/central-authority-validators-crypto-keys';\nimport CentralAuthorityIdentity from 'classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity';\nimport { ICAConnectionUserAuthorizedResult } from 'classes/central-authority-class/central-authority-connections/central-authority-connections.types';\nimport { compareCryptoCredentials } from 'classes/central-authority-class/central-authority-utils-common/central-authority-utils-crypto-credentials/central-authority-utils-crypto-credentials';\n\nexport const runTestCAConnectionFirebaseChangeEmail = async () => {\n  const connectionFirebase = await connectToFirebase();\n\n  if (connectionFirebase instanceof Error) {\n    console.error(connectionFirebase);\n    return;\n  }\n\n  const userProfileWithEmailTest = {\n    name: 'Test account',\n    email: 'gavidan@6mail.top',\n  };\n  const updateProfileWithEmailResult = await connectionFirebase.setProfileData(\n    userProfileWithEmailTest\n  );\n\n  if (updateProfileWithEmailResult instanceof Error) {\n    console.error('Failed to set the profile (with a email) data');\n    return;\n  }\n  if (updateProfileWithEmailResult.name !== updateProfileWithEmailResult.name) {\n    console.error('Name was not updated in the profile');\n    return;\n  }\n  if (\n    updateProfileWithEmailResult.email !== updateProfileWithEmailResult.email\n  ) {\n    console.error('The email was not updated in the profile');\n    return;\n  }\n  if (connectionFirebase.isAuthorized) {\n    console.error(\n      'isAuthorized connection flag must be false on email value changed'\n    );\n    return;\n  }\n};\n\nexport const runTestCAConnectionFirebase = async () => {\n  console.warn('CA connection firebase test started');\n  const credentials = {\n    login: 'lxnmgnyc@sharklasers.com',\n    password: '123456',\n  };\n  const connectionFirebase = await connectWithFirebase(credentials);\n  if (connectionFirebase instanceof Error) {\n    console.error(connectionFirebase);\n    return;\n  }\n\n  console.warn('CA connection firebase test succeed');\n\n  //check profile update result\n  const userProfileTestWOEmailAndPhoneNumber: Partial<\n    ICentralAuthorityUserProfile\n  > = {\n    name: 'Paul',\n    photoURL:\n      'https://cdn.dribbble.com/users/199982/screenshots/4044699/furkan-avatar-dribbble.png',\n  };\n  const updateProfileResult = await connectionFirebase.setProfileData(\n    userProfileTestWOEmailAndPhoneNumber\n  );\n\n  if (updateProfileResult instanceof Error) {\n    console.error('Failed tp set the profile (without a email) data');\n    return deleteTheUserFromCA(connectionFirebase, credentials);\n  }\n\n  if (\n    userProfileTestWOEmailAndPhoneNumber.photoURL !==\n    updateProfileResult.photoURL\n  ) {\n    console.error('The photo URL was not updated in the profile');\n    return deleteTheUserFromCA(connectionFirebase, credentials);\n  }\n  if (userProfileTestWOEmailAndPhoneNumber.name !== updateProfileResult.name) {\n    console.error('Name was not updated in the profile');\n    return deleteTheUserFromCA(connectionFirebase, credentials);\n  }\n  const deleteTheUserResult = await deleteTheUserFromCA(\n    connectionFirebase,\n    credentials\n  );\n  if (deleteTheUserResult instanceof Error) {\n    console.error(deleteTheUserResult);\n    return new Error('Failed to delete the user from the Firebase authority');\n  }\n  console.warn('CA connection firebase test success');\n};\n\nexport const runTestCAConnectionFirebaseCryptoCredentialsGenerateByFirebaseAuthProvider = async () => {\n  const credentials = {\n    login: 'lxnmgnyc@sharklasers.com',\n    password: '123456',\n  };\n  console.error('runTestCAConnectionFirebaseWithoutCryptoCredentials::start');\n  const connectionFirebase = await connectWithFirebase();\n\n  if (connectionFirebase instanceof Error) {\n    return new Error('Failed to sign up to the firebase app');\n  }\n  if (!connectionFirebase.isAuthorized) {\n    return new Error(\n      'isAuthorized connection flag must be truthly on authorization succeed'\n    );\n  }\n  const {\n    cryptoCredentials: cryptoCredentialsGenerated,\n  } = connectionFirebase.getAuthResult() as ICAConnectionUserAuthorizedResult;\n  if (!checkIsValidCryptoCredentials(cryptoCredentialsGenerated)) {\n    console.error(\n      'Invalida crypto credentials generated by Firebase CA connection'\n    );\n    return;\n  }\n\n  const userIdentityByCryptoCredentials = new CentralAuthorityIdentity(\n    cryptoCredentialsGenerated\n  );\n\n  if (!userIdentityByCryptoCredentials.isValid) {\n    console.error('The crypto credentials generated is not valid');\n    return;\n  }\n  const {\n    identityDescription: userIdentityDescription,\n  } = userIdentityByCryptoCredentials;\n\n  if (userIdentityDescription instanceof Error) {\n    console.error(userIdentityDescription);\n    console.error('Failed to parse the identity generated');\n    return;\n  }\n\n  const { authorityProviderURI } = userIdentityDescription;\n\n  if (authorityProviderURI !== CA_CONNECTION_FIREBASE_CONFIG.databaseURL) {\n    console.error(\n      'The url of the Firebase authority provider from generated identity is not valid'\n    );\n    return;\n  }\n  const signOutResult = await connectionFirebase.signOut();\n  if (signOutResult instanceof Error) {\n    console.error(signOutResult);\n    console.error('Failed to sign out');\n    return;\n  }\n\n  const authorizeResultWithCredentialsGenerated = await connectionFirebase.authorize(\n    {\n      ...CA_CONNECTION_FIREBASE_USER_CREDENTIALS,\n      cryptoCredentials: cryptoCredentialsGenerated,\n    }\n  );\n  if (authorizeResultWithCredentialsGenerated instanceof Error) {\n    return new Error('Failed to sign up to the firebase app');\n  }\n  if (!connectionFirebase.isAuthorized) {\n    return new Error(\n      'isAuthorized connection flag must be truthly on authorization succeed'\n    );\n  }\n\n  const {\n    cryptoCredentials: cryptoCredentialsFromAuthorization,\n  } = authorizeResultWithCredentialsGenerated;\n  if (\n    (await compareCryptoCredentials(\n      cryptoCredentialsFromAuthorization,\n      cryptoCredentialsGenerated\n    )) !== true\n  ) {\n    console.error(\n      'Crypto credentials returned after success authorization must be same as provided (if not stored before)'\n    );\n    return;\n  }\n  console.warn('runTestCAConnectionFirebaseWithoutCryptoCredentials::success');\n};\n","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority-connection.test/central-authority-connection.test.ts",["1573"],"import { validateUserProfileData } from 'classes/central-authority-class/central-authority-validators/central-authority-validators-user/central-authority-validators-user';\n\nexport * from './central-authority-connection.test.firebase';\n\nexport const runTestProfileValidation = () => {\n  console.warn('test for CA user profiel data validation started');\n  const test1ProfileValid = {\n    name: '1',\n  };\n\n  if (!validateUserProfileData(test1ProfileValid)) {\n    console.error('The profile data 1 must be valid');\n    return;\n  }\n\n  const test2ProfileValid = {\n    phone: '+79292239192',\n  };\n\n  if (!validateUserProfileData(test2ProfileValid)) {\n    console.error('The profile data 2 must be valid');\n    return;\n  }\n  console.warn('test for CA user profiel data validation succeed');\n\n  const test3ProfileValid = {\n    name: 'User Name',\n    phone: '+79292239192',\n    email: 'ggg@mail.com',\n    photoURL:\n      'https://camo.githubusercontent.com/e7a14b9a151d9b1d23a0d05dac1af86b0e972714/68747470733a2f2f692e696d6775722e636f6d2f4a497942744b572e706e67',\n  };\n\n  if (!validateUserProfileData(test3ProfileValid)) {\n    console.error('The profile data 3 must be valid');\n    return;\n  }\n\n  const testProfileEmailNotValid = {\n    name: 'User Name',\n    phone: '+79292239192',\n    email: 'gggmail.com',\n    photoURL:\n      'https://camo.githubusercontent.com/e7a14b9a151d9b1d23a0d05dac1af86b0e972714/68747470733a2f2f692e696d6775722e636f6d2f4a497942744b572e706e67',\n  };\n\n  if (validateUserProfileData(testProfileEmailNotValid)) {\n    console.error('The email in the profile data is not valid');\n    return;\n  }\n\n  const testProfilePhotoUrlNotValid = {\n    name: 'User Name',\n    phone: '+79292239192',\n    email: 'ggg@mail.com',\n    photoURL:\n      'camo.githubusercontent/e7a14b9a151d9b1d23a0d05dac1af86b0e972714/68747470733a2f2f692e696d6775722e636f6d2f4a497942744b572e706e67',\n  };\n\n  if (validateUserProfileData(testProfilePhotoUrlNotValid)) {\n    console.error('The photo url in the profile data is not valid');\n    return;\n  }\n\n  console.warn('test for CA user profiel data validation succeed');\n};\n","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority-storage-identity-credentials.test.ts",["1574"],"import { CentralAuthorityIdentityCredentialsStorage } from 'classes/central-authority-class/central-authority-storage/central-authority-storage-identity-credentials/central-authority-storage-identity-credentials';\nimport { ISecretStoreCredentials } from 'classes/secret-storage-class/secret-storage-class.types';\nimport {\n  CA_USER_IDENTITY_AUTH_PROVIDER_IDENTIFIER_PROP_NAME,\n  CA_USER_IDENTITY_USER_UNIQUE_IDENTFIER_PROP_NAME,\n} from 'classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity.const';\nimport { generateUUID } from 'utils/identity-utils/identity-utils';\nimport CentralAuthorityIdentity from 'classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity';\nimport { generateKeyPairs } from 'classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys';\nimport { getUserIdentityByCryptoCredentials, getUserCredentialsByUserIdentityAndCryptoKeys, exportCryptoCredentialsToString } from 'classes/central-authority-class/central-authority-utils-common/central-authority-utils-crypto-credentials/central-authority-utils-crypto-credentials';\nimport { ICAUserUniqueIdentifierDescriptionWithOptionalVersion } from 'classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity.types';\nimport { TCentralAuthorityUserIdentity } from 'classes/central-authority-class/central-authority-class-types/central-authority-class-types';\n\n\nconst runCACredentialsIdentityStorageTestForCredentials = async (\n  storageInstance: CentralAuthorityIdentityCredentialsStorage,\n  testIdentityDescription: ICAUserUniqueIdentifierDescriptionWithOptionalVersion | TCentralAuthorityUserIdentity,\n  ): Promise<boolean | undefined> => {\n  const caIdentityValueTest = new CentralAuthorityIdentity(\n    testIdentityDescription\n  );\n  const identityTest = caIdentityValueTest.toString();\n  const testKeyPairs = await generateKeyPairs();\n\n  if (testKeyPairs instanceof Error) {\n    console.error(testKeyPairs);\n    console.error('Failed to generate key Pairs');\n    return;\n  }\n\n  const setInStorageResult = await storageInstance.setCredentials(\n    identityTest,\n    testKeyPairs\n  );\n\n  if (setInStorageResult instanceof Error) {\n    console.error(setInStorageResult);\n    return;\n  }\n\n  const caCryptoCredentialsTestRead = await storageInstance.getCredentials(identityTest);\n\n  if (caCryptoCredentialsTestRead instanceof Error) {\n    console.error(caCryptoCredentialsTestRead);\n    console.error('Failed to read the crypto credentials saved previosely');\n    return;\n  }\n  if (!caCryptoCredentialsTestRead) {\n    console.error('The crypto credentials saved previousely have an empty value stored');\n    return;\n  }\n\n  const identityValue = getUserIdentityByCryptoCredentials(caCryptoCredentialsTestRead);\n\n  if (identityValue instanceof Error) {\n    console.error(identityValue);\n    console.error('There is a broken identity value was stored');\n    return;\n  }\n  if (identityValue !== identityTest) {\n    console.error('The identity stored have a wrong value not same as stred');\n    return;\n  }\n\n  const caCredentialsTest = getUserCredentialsByUserIdentityAndCryptoKeys(\n    identityTest,\n    testKeyPairs,\n  );\n\n    if (caCredentialsTest instanceof Error) {\n      console.error(caCredentialsTest);\n      console.error('Failed to create CACryproCredentials by the identity and test key pairs');\n      return;\n    }\n\n  const storeResultCaCryptoCredentials = await storageInstance.setCredentials(caCredentialsTest);\n\n  if (storeResultCaCryptoCredentials instanceof Error) {\n    console.error(storeResultCaCryptoCredentials);\n    console.error('Failed to store the CACryptoCredentials format');\n    return;\n  }\n  if (storeResultCaCryptoCredentials !== false) {\n    console.error('Crypto credentials for the same identity must not be rewritten');\n    return;    \n  }\n  \n  const caCryptoCredentialsExportedToStringTest = await exportCryptoCredentialsToString(caCredentialsTest);\n\n  if (caCryptoCredentialsExportedToStringTest instanceof Error) {\n    console.error(caCryptoCredentialsExportedToStringTest);\n    console.error('Failed to export CACryptoCredentials to a string');\n    return;\n  }\n\n  const storeResultCaCryptoCredentialsExportedToString = await storageInstance.setCredentials(caCryptoCredentialsExportedToStringTest);\n\n  if (storeResultCaCryptoCredentialsExportedToString instanceof Error) {\n    console.error(storeResultCaCryptoCredentialsExportedToString);\n    console.error('Failed to store the CACryptoCredentials exported to a string format');\n    return;\n  }\n  if (storeResultCaCryptoCredentialsExportedToString !== false) {\n    console.error('Crypto credentials (exported as string) for the same identity must not be rewritten');\n    return;    \n  }\n  \n  return true;\n};\n\nexport const runCACredentialsIdentityStorageTest = async () => {\n  console.warn('Storage identity test was started');\n  \n  const conectionCredentials: ISecretStoreCredentials = {\n    password: '11234',\n  };\n  const storageInstance = new CentralAuthorityIdentityCredentialsStorage();\n  const connectionResult = await storageInstance.connect(conectionCredentials);\n\n  if (connectionResult instanceof Error) {\n    console.error(connectionResult);\n    console.error(new Error('Failed to connect to the storage'));\n    return;\n  }\n\n  const testIdentityDescription = {\n    [CA_USER_IDENTITY_AUTH_PROVIDER_IDENTIFIER_PROP_NAME]: 'https://google.com',\n    [CA_USER_IDENTITY_USER_UNIQUE_IDENTFIER_PROP_NAME]: generateUUID(),\n  };\n  const resultFirst = await runCACredentialsIdentityStorageTestForCredentials(\n    storageInstance,\n    testIdentityDescription\n  );\n\n  if (resultFirst !== true) {\n    console.error('Test for the first credentials was failed');\n    return;\n  }\n\n  const testIdentityDescriptionTwo = {\n    [CA_USER_IDENTITY_AUTH_PROVIDER_IDENTIFIER_PROP_NAME]: 'https://google1.com',\n    [CA_USER_IDENTITY_USER_UNIQUE_IDENTFIER_PROP_NAME]: generateUUID(),\n  };\n  const resultTwo = await runCACredentialsIdentityStorageTestForCredentials(\n    storageInstance,\n    testIdentityDescriptionTwo\n  );\n\n  if (resultTwo !== true) {\n    console.error('Test for the second credentials was failed');\n    return;\n  }\n\n  console.warn('Test for a wrong identity valie started');\n  const testIdentityDescriptionWrongFormat = {\n    [CA_USER_IDENTITY_AUTH_PROVIDER_IDENTIFIER_PROP_NAME]: '',\n    [CA_USER_IDENTITY_USER_UNIQUE_IDENTFIER_PROP_NAME]: generateUUID(),\n  };\n  const resultMustBeFailed = await runCACredentialsIdentityStorageTestForCredentials(\n    storageInstance,\n    testIdentityDescriptionWrongFormat\n  );\n\n  if (resultMustBeFailed) {\n    console.error('Test for a wrong identity valie must failed');\n    return;\n  }\n  console.warn('Test for a wrong identity value succeed');\n\n  const storageDisconnectResult = await storageInstance.disconnect();\n\n  if (storageDisconnectResult instanceof Error) {\n    console.error(storageDisconnectResult);\n    console.error('Failed to disconnect');\n    return;\n  }\n\n  const caIdentityValueTest = new CentralAuthorityIdentity(\n    testIdentityDescription\n  );\n  const identityTest = caIdentityValueTest.toString();\n    \n  if (!identityTest) {\n    console.error(identityTest);\n    console.error('Failed to generate test identity string on disconnected storage test');\n    return;\n  }\n\n  const testKeyPairs = await generateKeyPairs();\n\n  if (testKeyPairs instanceof Error) {\n    console.error(testKeyPairs);\n    console.error('Failed to generate key pairs on disconnected storage test');\n    return;\n  }\n\n  const setCredentialsResultDisconnected = await storageInstance.setCredentials(\n    identityTest,\n    testKeyPairs\n  );\n\n  if (!(setCredentialsResultDisconnected instanceof Error)) {\n    console.error('Execution of the setCredentials method must failed on disconnected storage')\n    return;\n  }\n\n  const getCredentialsResultDisconnected = await storageInstance.getCredentials(\n    identityTest,\n  );\n\n  if (!(getCredentialsResultDisconnected instanceof Error)) {\n    console.error('Execution of the getCredentials method must failed on disconnected storage')\n    return;\n  }\n  console.warn('Storage identity test was succes');\n};\n","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority.credentials-storage.test.ts",["1575"],"import { generateKeyPairs } from 'classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys';\nimport { runTestForKeyPairs } from './central-aurhority.keys.common.test';\nimport {\n  CA_AUTH_CREDENTIALS_USER_IDENTITY_PROP_NAME,\n  CA_AUTH_CREDENTIALS_USER_PASSWORD_PROP_NAME,\n} from 'classes/central-authority-class/central-authority-class-const/central-authority-class-const';\nimport { generateUUID } from 'utils/identity-utils/identity-utils';\nimport { CENTRAL_AUTHORITY_STORAGE_CREDENTIALS_CRYPTO_KEYS_KEY_NAME } from 'classes/central-authority-class/central-authority-storage/central-authority-storage-credentials/central-authority-storage-credentials.const';\nimport { CentralAuthorityCredentialsStorage } from 'classes/central-authority-class/central-authority-storage/central-authority-storage-credentials/central-authority-storage-credentials';\n\nexport const runTestsCredentialsStorage = async () => {\n  const cryptoKeyPairsGenerated = await generateKeyPairs();\n\n  if (cryptoKeyPairsGenerated instanceof Error) {\n    console.error(cryptoKeyPairsGenerated);\n    console.error('Failed to generate a new key pairs');\n    return;\n  }\n\n  console.warn('Run tests for credentials storage keys generated');\n  const result = await runTestForKeyPairs(cryptoKeyPairsGenerated);\n\n  if (result !== true) {\n    console.warn('Failed tests for credentials storage keys generated');\n    return;\n  }\n\n  const cryptoCredentialsStorage = new CentralAuthorityCredentialsStorage();\n  const storageAuthCredentials = {\n    [CA_AUTH_CREDENTIALS_USER_IDENTITY_PROP_NAME]: generateUUID(),\n    [CA_AUTH_CREDENTIALS_USER_PASSWORD_PROP_NAME]: 'password',\n  };\n\n  console.warn(\n    'Success result in the tests for credentials storage keys generated'\n  );\n  const connectionResult = await cryptoCredentialsStorage.connect(\n    storageAuthCredentials\n  );\n\n  if (connectionResult instanceof Error) {\n    console.error('Failed to connect to the secret storage');\n    return;\n  }\n\n  const credentials = await cryptoCredentialsStorage.getCredentials();\n\n  if (credentials instanceof Error) {\n    console.error(credentials);\n    console.error('Failed to reade a credentials read from the new instance');\n    return;\n  }\n  if (credentials !== null) {\n    console.error('The credentials read from the new instance must be null');\n    return;\n  }\n\n  const credentialsSetResult = await cryptoCredentialsStorage.setCredentials(\n    cryptoKeyPairsGenerated\n  );\n\n  if (credentialsSetResult instanceof Error) {\n    console.error(credentialsSetResult);\n    console.error('Failed to set the credentials');\n    return;\n  }\n\n  const credentialsCached = await cryptoCredentialsStorage.getCredentials();\n\n  if (credentialsCached instanceof Error) {\n    console.error(credentialsCached);\n    console.error('Failed to read a credentials stored');\n    return;\n  }\n  if (credentialsCached === null) {\n    console.error('The credentials stored are absent in the storage and cache');\n    return;\n  }\n\n  const {\n    [CENTRAL_AUTHORITY_STORAGE_CREDENTIALS_CRYPTO_KEYS_KEY_NAME]: cryptoKeyPairsStored,\n  } = credentialsCached;\n  const resultTestCredentialsStored = await runTestForKeyPairs(\n    cryptoKeyPairsStored\n  );\n\n  if (resultTestCredentialsStored !== true) {\n    console.warn(\n      'Failed tests for credentials storage keys read from stored values'\n    );\n    return;\n  }\n\n  const resultCryptoCredentialsStorageDisconnect = await cryptoCredentialsStorage.disconnect();\n\n  if (resultCryptoCredentialsStorageDisconnect instanceof Error) {\n    console.error(resultCryptoCredentialsStorageDisconnect);\n    console.error(\n      'Failed to disconnect the first instance of the resultCryptoCredentialsStorageDisconnect'\n    );\n    return;\n  }\n\n  const credentialsReadFromStorageDisconnected = await cryptoCredentialsStorage.getCredentials();\n\n  if (!(credentialsReadFromStorageDisconnected instanceof Error)) {\n    console.error('Any read from the disconnected storage must cause an error');\n    return;\n  }\n\n  const resultSetCredentialsReadFromStorageDisconnected = await cryptoCredentialsStorage.setCredentials(\n    cryptoKeyPairsGenerated\n  );\n\n  if (!(resultSetCredentialsReadFromStorageDisconnected instanceof Error)) {\n    console.error(\n      'Any write from the disconnected storage must cause an error'\n    );\n    return;\n  }\n  /**\n   * create a new instance\n   * to check if it works\n   * and can to read a stored\n   * piveousely crypto credentials.\n   * Connect with the credentials\n   * exactly same as used\n   * for the first connection\n   */\n\n  const cryptoCredentialsStorageSecondInstance = new CentralAuthorityCredentialsStorage();\n  const connectionResultSecondInstance = await cryptoCredentialsStorageSecondInstance.connect(\n    storageAuthCredentials\n  );\n\n  if (connectionResultSecondInstance instanceof Error) {\n    console.error(\n      'Failed to connect to the secret storage with the second instance'\n    );\n    return;\n  }\n\n  const credentialsReadFromStorage = await cryptoCredentialsStorageSecondInstance.getCredentials();\n\n  if (credentialsReadFromStorage instanceof Error) {\n    console.error(credentials);\n    console.error('Failed to read a credentials read from the second instance');\n    return;\n  }\n  if (credentialsReadFromStorage === null) {\n    console.error('The credentials read by second instance must not be empty');\n    return;\n  }\n\n  const {\n    [CENTRAL_AUTHORITY_STORAGE_CREDENTIALS_CRYPTO_KEYS_KEY_NAME]: cryptoKeyPairsStoredByTheFirstInstance,\n  } = credentialsReadFromStorage;\n  const resultTestCredentialsStoredByTheFirstInstance = await runTestForKeyPairs(\n    cryptoKeyPairsStoredByTheFirstInstance\n  );\n\n  if (resultTestCredentialsStoredByTheFirstInstance !== true) {\n    console.warn(\n      'Failed tests for credentials storage keys read from stored values'\n    );\n    return;\n  }\n  console.warn('Succeed in the crypto credentials storage tests');\n  return true;\n};\n","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority.keys.test.ts",["1576"],"import { generateKeyPairs } from 'classes/central-authority-class/central-authority-utils-common/central-authority-util-crypto-keys/central-authority-util-crypto-keys';\nimport { runTestForKeyPairs } from './central-aurhority.keys.common.test';\n\nexport const runTestKeys = async () => {\n  console.warn('Central authority keys tests start');\n\n  const keyPairs = await generateKeyPairs();\n  return runTestForKeyPairs(keyPairs);\n};\n","/home/paul/projects/decentrilized-protocol/src/test/central-authority.test/central-authority.test.ts",[],"/home/paul/projects/decentrilized-protocol/src/test/common-utils.test/common-utils.caching-decorator.test.ts",["1577","1578"],"import { dataCachingUtilsCachingDecorator as caching } from 'utils/data-cache-utils/data-cache-utils';\nimport { generateUUID } from 'utils/identity-utils/identity-utils';\n\nconst ITERATIONS_COUNT = 60000;\nconst CACHE_CAPACITY = 200;\n\nexport const runTestCachingDecorator = async () => {\n  const values: { [k: string]: string } = {};\n\n  let idx = 0;\n  while (idx < ITERATIONS_COUNT) {\n    values[generateUUID()] = generateUUID();\n    idx += 1;\n  }\n\n  class CachingDecoratorTestClass {\n    @caching(CACHE_CAPACITY)\n    async getValue(key: string): Promise<string | undefined> {\n      return (values as any)[key];\n    }\n  }\n\n  const instance = new CachingDecoratorTestClass();\n  let iteration = 0;\n\n  idx = 0;\n  const keysValues = Object.keys(values);\n  let k;\n\n  iteration += 1;\n  console.log(`The iteration ${iteration}`);\n  while (idx < keysValues.length) {\n    k = keysValues[idx];\n    if ((await instance.getValue(k)) !== values[k]) {\n      console.error(`Value for the key '${k}' is not equals`);\n      return;\n    }\n    idx += 1;\n  }\n  iteration += 1;\n  console.log(`The iteration ${iteration}`);\n  idx = Math.ceil(keysValues.length / 2);\n  while (idx < keysValues.length) {\n    k = keysValues[idx];\n    if ((await instance.getValue(k)) !== values[k]) {\n      console.error(`Value for the key '${k}' is not equals`);\n      return;\n    }\n    idx += 1;\n  }\n  iteration += 1;\n  console.log(`The iteration ${iteration}`);\n  idx = Math.ceil(keysValues.length / 2 + keysValues.length / 4);\n  while (idx < keysValues.length) {\n    k = keysValues[idx];\n    if ((await instance.getValue(k)) !== values[k]) {\n      console.error(`Value for the key '${k}' is not equals`);\n      return;\n    }\n    idx += 1;\n  }\n  iteration += 1;\n  console.log(`The iteration ${iteration}`);\n  idx = Math.ceil(keysValues.length / 3 + keysValues.length / 5);\n  while (idx < keysValues.length) {\n    k = keysValues[idx];\n    if ((await instance.getValue(k)) !== values[k]) {\n      console.error(`Value for the key '${k}' is not equals`);\n      return;\n    }\n    idx += 1;\n  }\n  iteration += 1;\n  console.log(`The iteration ${iteration}`);\n  idx = keysValues.length;\n  while (idx >= 0) {\n    k = keysValues[idx];\n    if ((await instance.getValue(k)) !== values[k]) {\n      console.error(`Value for the key '${k}' is not equals`);\n      return;\n    }\n    idx -= 1;\n  }\n  iteration += 1;\n  console.log(`The iteration ${iteration}`);\n  idx = Math.ceil(keysValues.length / 4 + keysValues.length / 3);\n  while (idx >= 0) {\n    k = keysValues[idx];\n    if ((await instance.getValue(k)) !== values[k]) {\n      console.error(`Value for the key '${k}' is not equals`);\n      return;\n    }\n    idx -= 1;\n  }\n  iteration += 1;\n  console.log(`The iteration ${iteration}`);\n  idx = Math.ceil(keysValues.length / 4 + keysValues.length / 3);\n  while (idx >= 0) {\n    k = keysValues[idx];\n    if ((await instance.getValue(k)) !== values[k]) {\n      console.error(`Value for the key '${k}' is not equals`);\n      return;\n    }\n    idx -= 1;\n  }\n  console.error('Test for caching decorator succeed');\n};\n","/home/paul/projects/decentrilized-protocol/src/test/common-utils.test/common-utils.test.ts",[],"/home/paul/projects/decentrilized-protocol/src/test/http-request-class-base.test/http-request-class-base.test.ts",["1579"],"import { expect } from 'chai';\nimport HttpRequest from 'classes/basic-classes/http-request-class-base/http-request-class-base';\n\nexport function runTestHttpRequest() {\n  describe('test HttpRequest class', async () => {\n    it('check a response from google.com', async () => {\n      const req = new HttpRequest({\n        url: 'google.com',\n      });\n\n      expect(req).to.be.an.instanceof(HttpRequest);\n      await expect(req.send()).to.eventually.fulfilled;\n    });\n  });\n}\n","/home/paul/projects/decentrilized-protocol/src/test/ipfs-swarm-connection.test/ipfs-swarm-connection-ipfs.test.ts",["1580","1581"],"import { SwarmConnectionSubclassIPFS } from 'classes/swarm-connection-class/swarm-connection-class-subclasses/swarm-connection-class-subclass-ipfs/swarm-connection-class-subclass-ipfs';\nimport { initializeMocha, runMocha } from 'test/mocha-chai-initialize';\nimport { expect, assert } from 'chai';\nimport { SWARM_CONNECTION_PASSWORD } from './ipfs-swarm-connection.const';\n\nexport const runTestSwarmConnectionIPFS = async () => {\n  await initializeMocha();\n\n  describe('ipfs swarm connection', () => {\n    it('create ipfs swarm connection', async () => {\n      const connection = new SwarmConnectionSubclassIPFS();\n      const password = SWARM_CONNECTION_PASSWORD;\n\n      try {\n        expect(connection.connect).to.be.a('function');\n        await assert.becomes(connection.connect({\n          password,\n        }), true, 'Connection to the swarm was not established');\n        expect(connection.isConnected).to.equal(true);\n        await assert.becomes(connection.close(), true, 'Connection to the swarm was not closed succesfully');\n        expect(connection.isConnected).to.equal(false);\n        await expect(connection.connect({\n          password,\n        })).to.eventually.be.an.instanceOf(Error);\n        assert(connection.isClosed === true, 'Connection isClosed flag must be true, after the connection was closed previousely');\n        assert(connection.isConnected === false, 'Connection isConnected flag must be false, after the connection was closed previousely');\n        return Promise.resolve();\n      } catch(err) {\n        return Promise.reject(err);\n      }\n    }).timeout(10000)\n  })\n  runMocha();\n};\n","/home/paul/projects/decentrilized-protocol/src/test/ipfs-swarm-connection.test/ipfs-swarm-connection.test.ts",["1582","1583","1584"],"import { SwarmConnection } from 'classes/swarm-connection-class/swarm-connection-class';\nimport { ESwarmConnectionClassSubclassType, ESwarmConnectionSubclassStatus } from 'classes/swarm-connection-class/swarm-connection-class.types';\nimport { expect, assert } from 'chai';\nimport { SWARM_CONNECTION_PASSWORD, SWARM_CONNECTION_OPTIONS } from './ipfs-swarm-connection.const';\nimport { EventEmitter } from 'classes/basic-classes/event-emitter-class-base/event-emitter-class-base';\nimport { STATUS_CLASS_STATUS_CHANGE_EVENT } from 'classes/basic-classes/status-class-base/status-class-base.const';\n\nexport const runTestSwarmConnection = async () => {\n  describe('swarm connection:: ipfs', () => {\n    it('create ipfs swarm connection', async () => {\n      console.warn('runTestIPFSSwarmConnection');\n      const connectionToSwarm = new SwarmConnection();\n\n      expect(connectionToSwarm).to.be.an.instanceof(SwarmConnection);\n      expect(connectionToSwarm.connect).to.be.a('function');\n      try {\n        await assert.becomes(connectionToSwarm.connect(SWARM_CONNECTION_OPTIONS), true, 'Failed to connect to the Swarm with ipfs');\n        expect(connectionToSwarm.isConnected).to.equal(true);\n        await assert.becomes(connectionToSwarm.close(), true, 'Connection to the swarm was not closed succesfully');\n        expect(connectionToSwarm.isConnected).to.equal(false);\n        await expect(connectionToSwarm.connect(SWARM_CONNECTION_OPTIONS)).to.eventually.be.an.instanceOf(Error);\n        assert(connectionToSwarm.isClosed === true, 'Connection isClosed flag must be true, after the connection was closed previousely');\n        assert(connectionToSwarm.isConnected === false, 'Connection isConnected flag must be false, after the connection was closed previousely');\n        return Promise.resolve();\n      } catch(err) {\n        console.error(err);\n        return Promise.reject(err);\n      }\n    }).timeout(10000);\n\n    it('swarm connection: check status', async () => {\n      console.warn('runTestIPFSSwarmConnection');\n      const connectionToSwarm = new SwarmConnection();\n\n      expect(connectionToSwarm).to.be.an.instanceof(SwarmConnection);\n      expect(connectionToSwarm.connect).to.be.a('function');\n\n      const connectionOptions = {\n        type: ESwarmConnectionClassSubclassType.IPFS,\n        subclassOptions: {\n          password: SWARM_CONNECTION_PASSWORD\n        }\n      };\n\n      try {\n        const { statusEmitter } = connectionToSwarm;\n        const statusesEmitted: ESwarmConnectionSubclassStatus[] = [];\n\n        expect(statusEmitter).to.be.an.instanceof(EventEmitter);\n        statusEmitter.addListener(STATUS_CLASS_STATUS_CHANGE_EVENT, status => statusesEmitted.push(status));\n        await assert.becomes(connectionToSwarm.connect(connectionOptions), true, '');\n        expect(statusesEmitted).to.be.an('array').to.include.members([\n          ESwarmConnectionSubclassStatus.CONNECTED,\n          ESwarmConnectionSubclassStatus.CONNECTING,\n          ESwarmConnectionSubclassStatus.STARTED,\n        ]);\n        return Promise.resolve();\n      } catch(err) {\n        console.error(err);\n        return Promise.reject(err);\n      }\n    }).timeout(10000)\n\n  })\n};\n","/home/paul/projects/decentrilized-protocol/src/test/nodejs-helpers.test/nodejs-helpers.test.firebase/nodejs-helpers.test.firebase.js",["1585"],"const admin = require('firebase-admin');\nconst serviceKey = require('./firebase.serviceKey.json');\n\nconst removeAllUsers = async () => {\n  const initResult = await admin.initializeApp({\n    credential: admin.credential.cert(serviceKey),\n    databaseURL: 'https://protocol-f251b.firebaseio.com',\n  });\n\n  if (initResult instanceof Error) {\n    console.error(initResult);\n    return new Error(\"Can't initialize the application\");\n  }\n\n  function deleteUser(uid) {\n    admin\n      .auth()\n      .deleteUser(uid)\n      .then(function() {\n        console.log('Successfully deleted user', uid);\n      })\n      .catch(function(error) {\n        console.log('Error deleting user:', error);\n      });\n  }\n\n  function getAllUsers(nextPageToken) {\n    admin\n      .auth()\n      .listUsers(100, nextPageToken)\n      .then(function(listUsersResult) {\n        listUsersResult.users.forEach(function(userRecord) {\n          let uid = userRecord.toJSON().uid;\n          deleteUser(uid);\n        });\n        if (listUsersResult.pageToken) {\n          getAllUsers(listUsersResult.pageToken);\n        }\n      })\n      .catch(function(error) {\n        console.log('Error listing users:', error);\n      });\n  }\n  getAllUsers();\n};\n\nremoveAllUsers();\n","/home/paul/projects/decentrilized-protocol/src/test/password-key.test.ts",["1586","1587","1588","1589","1590"],"import {\n  generatePasswordKeyAsString,\n  importPasswordKeyFromString,\n  exportPasswordKey,\n} from 'utils/password-utils/derive-key.password-utils';\nimport {\n  encryptDataToArrayBuffer,\n  encryptDataToString,\n  encryptDataWithPassword,\n} from 'utils/password-utils/encrypt.password-utils';\nimport {\n  decryptDataWithKeyNative,\n  decryptDataWithKey,\n  decryptDataByPassword,\n} from 'utils/password-utils/decrypt.password-utils';\n\nconst testKeyGeneration = async () => {\n  /**\n   * test key generation from a password\n   */\n  // const passwordString = '123';\n  // const passwordKey = await generatePasswordKeyAsString(passwordString);\n  // console.log('passwordKey', passwordKey);\n  // const passwordStringAgain = '123';\n  // const passwordKeyAgain = await generatePasswordKeyAsString(\n  //   passwordStringAgain\n  // );\n  // console.log('passwordKeyAgain', passwordKeyAgain);\n  // console.log('isEquals', passwordKeyAgain === passwordKey);\n  // if (typeof passwordKeyAgain === 'string' && typeof passwordKey === 'string') {\n  //   const resultedKeyImported = await importPasswordKeyFromString(passwordKey);\n  //   const resultedKeyImportedAgain = await importPasswordKeyFromString(\n  //     passwordKeyAgain\n  //   );\n  //   if (\n  //     !(resultedKeyImported instanceof Error) &&\n  //     !(resultedKeyImported instanceof Error)\n  //   ) {\n  //     const exportedImported = await exportPasswordKey(resultedKeyImported);\n  //     const exportedAgainImported = await exportPasswordKey(\n  //       resultedKeyImported\n  //     );\n  //     console.log('exportedImported', exportedImported);\n  //     console.log('exportedAgainImported', exportedAgainImported);\n  //     if (\n  //       !(exportedImported instanceof Error) &&\n  //       !(exportedAgainImported instanceof Error)\n  //     ) {\n  //       console.log('isEquals', exportedImported.k === exportedAgainImported.k);\n  //     }\n  //   }\n  // }\n  const passwordString = '12345678';\n  const passwordKey = await generatePasswordKeyAsString(passwordString);\n\n  if (passwordKey instanceof Error) {\n    console.error(passwordKey);\n    return passwordKey;\n  }\n\n  const data = 'test_string';\n  const chipher = await encryptDataToString(passwordKey, data);\n\n  if (chipher instanceof Error) {\n    console.error(chipher);\n    return chipher;\n  }\n  console.log('chipher', chipher);\n  const decrypted = await decryptDataWithKey(passwordKey, chipher);\n\n  if (decrypted instanceof Error) {\n    console.error(decrypted);\n    return decrypted;\n  }\n  console.log('decrypted', decrypted);\n  console.log('is valid', decrypted === data);\n\n  const dataTest = 'test string fo password';\n  const pwd = 'pwd_test';\n  const encrypted = await encryptDataWithPassword(pwd, dataTest);\n\n  if (encrypted instanceof Error) {\n    console.error(encrypted);\n    return encrypted;\n  }\n\n  const decryptedPwd = await decryptDataByPassword(pwd, encrypted);\n\n  if (decryptedPwd instanceof Error) {\n    console.error(decryptedPwd);\n    return decryptedPwd;\n  }\n  console.log('decryptedPwd', decryptedPwd);\n  console.log('is valid', decryptedPwd === dataTest);\n};\n\ntestKeyGeneration();\n","/home/paul/projects/decentrilized-protocol/src/test/safe-storage.test.ts",["1591","1592","1593"],"import { SafeStorage } from 'classes/safe-storage-class';\nimport { ESAFE_STORAGE_STORAGE_TYPE } from 'classes/safe-storage-class/safe-storage-class.const';\n\nexport const runTestAppendLogStorage = async () => {\n  const safeStorageAppendLog = new SafeStorage({\n    name: 'testStorage',\n    credentials: {\n      password: 'test_password',\n    },\n    storageType: ESAFE_STORAGE_STORAGE_TYPE.APPEND_LOG,\n  });\n\n  console.dir(safeStorageAppendLog);\n\n  const connectionResult = await safeStorageAppendLog.connect();\n\n  if (connectionResult instanceof Error) {\n    console.error(connectionResult);\n    return connectionResult;\n  }\n  console.dir(safeStorageAppendLog);\n\n  const pushDataResult = await safeStorageAppendLog.set({ hello: new Date() });\n\n  if (pushDataResult instanceof Error) {\n    return pushDataResult;\n  }\n\n  const pushNewDataResult = await safeStorageAppendLog.set({\n    newHello: new Date(),\n  });\n\n  if (pushNewDataResult instanceof Error) {\n    return pushNewDataResult;\n  }\n\n  console.log('data was pushed in append log storage');\n};\n\nexport const runTestKeyValueStorage = async () => {\n  const safeStorage = new SafeStorage({\n    name: 'testStorageKeyValue',\n    credentials: {\n      password: 'test_password_KV',\n    },\n    storageType: ESAFE_STORAGE_STORAGE_TYPE.KEY_VALUE,\n  });\n\n  console.dir(safeStorage);\n\n  const connectionResult = await safeStorage.connect();\n\n  if (connectionResult instanceof Error) {\n    console.error(connectionResult);\n    return connectionResult;\n  }\n  console.dir(safeStorage);\n\n  const pushDataResult = await safeStorage.set(\n    { hello: new Date() },\n    `${new Date()}`\n  );\n\n  if (pushDataResult instanceof Error) {\n    return pushDataResult;\n  }\n\n  const pushNewDataResult = await safeStorage.set(\n    { hello: new Date() },\n    `${new Date()}|||new`\n  );\n\n  if (pushNewDataResult instanceof Error) {\n    return pushNewDataResult;\n  }\n  console.log('data was pushed in key value storage');\n};\n\nexport const runTest = async () => {\n  await runTestAppendLogStorage();\n  // await Promise.all([runTestAppendLogStorage(), runTestKeyValueStorage()]);\n};\n","/home/paul/projects/decentrilized-protocol/src/test/secret-storage.test.ts",["1594"],"import { SecretStorage } from 'classes/secret-storage-class';\n\nexport const runTest = async () => {\n  const secretStorage = new SecretStorage();\n  const password = '494949494';\n  const isAuthorized = await secretStorage.authorize({\n    password,\n  });\n\n  if (isAuthorized instanceof Error) {\n    console.error(isAuthorized);\n    return isAuthorized;\n  }\n  console.log('isAuthorized', isAuthorized);\n\n  const secretStorageNewInstance = new SecretStorage();\n  //should connect because authoirized before and credentials are stored (e.g. in the session storage)\n  const connectionResult = await secretStorageNewInstance.connect();\n\n  if (connectionResult instanceof Error) {\n    console.error(connectionResult);\n    return connectionResult;\n  }\n  console.log('is new instance connected', connectionResult);\n\n  const testValue = 'testy value for the secret storage';\n  const testValueKey = 'test_value';\n  const setTestValueResult = await secretStorage.set(testValueKey, testValue);\n\n  if (setTestValueResult instanceof Error) {\n    console.error(setTestValueResult);\n    return setTestValueResult;\n  }\n  console.log('setTestValueResult', setTestValueResult);\n\n  const getTestValueResult = await secretStorageNewInstance.get(testValueKey);\n\n  if (getTestValueResult instanceof Error) {\n    console.error(getTestValueResult);\n    return getTestValueResult;\n  }\n  console.log('getTestValueResult', getTestValueResult);\n  console.log('is valid', testValue === getTestValueResult);\n};\n","/home/paul/projects/decentrilized-protocol/src/test/swarm-storage-orbit-db.test/swarm-storage-orbit-db.test.const.ts",["1595","1596"],"import { ISwarmStoreConnectorOrbitDBOptions } from 'classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db.types';\nimport { ISecretStorageOptions, ISecretStoreCredentials } from 'classes/secret-storage-class/secret-storage-class.types';\n\nexport const SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME = 'database_test';\n\nexport const SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_TWO_DATABASE_DB_NAME = 'database_test_2';\n\nexport const SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_THREE_DATABASE_DB_NAME = 'database_test_3';\n\nexport const SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE: ISwarmStoreConnectorOrbitDBOptions<string> = {\n    databases: [{\n        dbName: SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME,\n        isPublic: false,\n    }],\n};\n\nexport const SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_ACCESS_CONTROLLER: ISwarmStoreConnectorOrbitDBOptions<string> = {\n    databases: [{\n        dbName: SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME,\n        isPublic: true,\n        grantAcess: async (entity, id) => {\n            return true;\n        }\n    }],\n};\n\nconst USER_ID_KEY = '____userId';\nconst TEST_VALUE_KEY = '____test_value';\nfunction promptUserIdAndTestValue() {\n    const userIdStored = localStorage.getItem(USER_ID_KEY);\n\n    if (!userIdStored) {\n        const userId = String(window.prompt('user id', 'test1'));\n\n        localStorage.setItem(USER_ID_KEY, userId);\n    }\n    \n    const testValueStored = localStorage.getItem(TEST_VALUE_KEY);\n\n    if (!testValueStored) {\n        const tstv = String(window.prompt('test value', 'tv'));\n\n        localStorage.setItem(TEST_VALUE_KEY, tstv);\n    }\n}\npromptUserIdAndTestValue();\n\nexport const SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_TEST_VALUE = `${localStorage.getItem(TEST_VALUE_KEY)}${new Date()}`;\n\nexport const SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_WITH_IDENTITY = {\n    ...SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE,\n    id: localStorage.getItem(USER_ID_KEY),\n}\n\nexport const SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_WITH_IDENTITY_AND_ACCESS_CONTROLLER = {\n    ...SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_ACCESS_CONTROLLER,\n    id: localStorage.getItem(USER_ID_KEY),\n}\n\nexport const SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_DATABASE_TWO = {\n    dbName: SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_TWO_DATABASE_DB_NAME,\n    isPublic: false,\n};\n\nexport const SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_DATABASE_THREE = {\n    dbName: SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_THREE_DATABASE_DB_NAME,\n    isPublic: false,\n};\n\nexport const SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_THREE_DATABASES: ISwarmStoreConnectorOrbitDBOptions<string> = {\n    databases: [\n        {\n            dbName: SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME,\n            isPublic: true,\n        },\n        {\n            ...SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_DATABASE_TWO,\n            isPublic: true,\n        },\n        {\n            ...SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_DATABASE_THREE,\n            isPublic: true,\n        },\n    ],\n};\n\nexport const SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_THREE_DATABASES_CUSTOM_ACCESS_CONTROLLER: ISwarmStoreConnectorOrbitDBOptions<string> = {\n    databases: [\n        {\n            dbName: SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME,\n            isPublic: true,\n        },\n        {\n            ...SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_DATABASE_TWO,\n            isPublic: true,\n        },\n        {\n            ...SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_DATABASE_THREE,\n            isPublic: true,\n            grantAcess: async (entity, id): Promise<boolean> => {\n                return !!entity && !!id;\n            }\n        },\n    ],\n};\n\nexport const SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_THREE_DATABASES_WITH_IDENTITY_AND_ACCESS_CONTROLLER_SECRET_KEYSTORE = {\n    ...SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_THREE_DATABASES_CUSTOM_ACCESS_CONTROLLER,\n    id: localStorage.getItem(USER_ID_KEY),\n    credentials: {\n        password: '123456',\n    }\n}\n\nexport const SWARM_STORE_CONNECTOR_TEST_SUBCLASS_SECRET_STORAGE_CONNECTOR_OPTIONS: Required<ISecretStorageOptions> = {\n    dbName: '__SwarmStorageConnectorTest___DB__TEST',\n};\n\nexport const SWARM_STORE_CONNECTOR_TEST_SUBCLASS_SECRET_STORAGE_CONNECTOR_CREDENTIALS: ISecretStoreCredentials = {\n    password: '123456',\n};\n\nexport const SWARM_STORE_CONNECTOR_TEST_SUBCLASS_CACHE_OPTIONS: Required<ISecretStorageOptions> = {\n    dbName: '__SwarmStorageConnectorTest___DB__TEST',\n};\n","/home/paul/projects/decentrilized-protocol/src/test/swarm-storage-orbit-db.test/swarm-storage-orbit-db.test.ts",["1597","1598","1599","1600","1601","1602","1603","1604","1605","1606","1607","1608","1609","1610","1611","1612","1613","1614","1615","1616","1617","1618","1619","1620","1621","1622","1623","1624","1625","1626","1627","1628","1629","1630","1631","1632","1633","1634","1635","1636","1637","1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651","1652","1653","1654","1655","1656","1657","1658","1659","1660","1661","1662","1663","1664","1665","1666","1667","1668"],"import { IPFS } from 'types/ipfs.types';\nimport ipfs from 'ipfs';\nimport { expect, assert } from 'chai';\nimport { SwarmStoreConnectorOrbitDB } from 'classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db';\nimport { \n    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE,\n    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME,\n    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_TEST_VALUE, \n    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_THREE_DATABASES,\n    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_TWO_DATABASE_DB_NAME,\n    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_THREE_DATABASE_DB_NAME,\n    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_DATABASE_TWO,\n    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_DATABASE_THREE,\n    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_WITH_IDENTITY,\n    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_WITH_IDENTITY_AND_ACCESS_CONTROLLER,\n    SWARM_STORE_CONNECTOR_TEST_SUBCLASS_SECRET_STORAGE_CONNECTOR_CREDENTIALS,\n    SWARM_STORE_CONNECTOR_TEST_SUBCLASS_SECRET_STORAGE_CONNECTOR_OPTIONS,\n    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_THREE_DATABASES_WITH_IDENTITY_AND_ACCESS_CONTROLLER_SECRET_KEYSTORE,\n    SWARM_STORE_CONNECTOR_TEST_SUBCLASS_CACHE_OPTIONS,\n } from './swarm-storage-orbit-db.test.const';\nimport { SWARM_CONNECTION_OPTIONS } from 'test/ipfs-swarm-connection.test/ipfs-swarm-connection.const';\nimport { SwarmConnection } from 'classes/swarm-connection-class/swarm-connection-class';\nimport { ESwarmStoreConnectorOrbitDBEventNames } from 'classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db.const';\nimport { ISwarmStoreConnectorOrbitDbDatabaseValue } from 'classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-database/swarm-store-connector-orbit-db-subclass-database.types';\nimport { COMMON_VALUE_EVENT_EMITTER_METHOD_NAME_ON } from 'const/common-values/common-values';\nimport { SwarmStoreConnectorOrbitDBSubclassStoreToSecretStorageAdapter } from 'classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter/swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter';\nimport { SWARM_STORE_CONNECTOR_ORBITDB_SUBCASS_STORE_TO_SECRET_STORAGE_ADAPTER_STATUS } from 'classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter/swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter.const';\nimport { SecretStorage } from 'classes/secret-storage-class/secret-storage-class';\nimport { SwarmStoreConnectorOrbitDBSubclassStorageFabric } from 'classes/swarm-store-class/swarm-store-connectors/swarm-store-connector-orbit-db/swarm-store-connector-orbit-db-subclasses/swarm-store-connector-orbit-db-subclass-storage-fabric/swarm-store-connector-orbit-db-subclass-storage-fabric';\n\nexport const testDatabase = async (\n    connection: SwarmStoreConnectorOrbitDB<string>,\n    dbName: string,\n) => {\n    const testValue = `${new Date()}--te`;\n    const addValueHash = await connection.request(\n        dbName,\n        'add',\n        SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_TEST_VALUE,\n    )\n\n    expect(addValueHash).to.be.a('string');\n   \n    const getValueByHashResult: ISwarmStoreConnectorOrbitDbDatabaseValue<string> = await connection.request(\n        dbName,\n        'get',\n        addValueHash,\n    );\n   \n    expect(getValueByHashResult.id).to.be.equal((connection as any).orbitDb.identity.id);\n    expect(getValueByHashResult.hash).to.be.equal(addValueHash);\n    expect(getValueByHashResult.value).to.be.equal(SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_TEST_VALUE);\n   \n    await expect(connection.request(\n        dbName,\n        'remove',\n        addValueHash,\n    )).eventually.not.rejected.not.be.an('error');\n\n    const getValueByHashAfterRemoveResult = await connection.request(\n        dbName,\n        'get',\n        addValueHash,\n    );\n    \n    assert(getValueByHashAfterRemoveResult == null, 'The value removed before must be empty');\n}\n\nexport const testDatabaseWithRandomValue = async (\n    connection: SwarmStoreConnectorOrbitDB<string>,\n    dbName: string,\n) => {\n    let i = 0;\n\n    while((i += 1) <= 5) {\n        const testValue = `${new Date()}--test-value`;\n        const addValueHash = await connection.request(\n            dbName,\n            'add',\n            testValue,\n        )\n\n        expect(addValueHash).to.be.a('string');\n    \n        const getValueByHashResult: ISwarmStoreConnectorOrbitDbDatabaseValue<string> = (\n            await connection.request(\n                dbName,\n                'get',\n                addValueHash,\n            )\n        );\n    \n        expect(getValueByHashResult.id).to.be.equal((connection as any).orbitDb.identity.id);\n        expect(getValueByHashResult.hash).to.be.equal(addValueHash);\n        expect(getValueByHashResult.value).to.be.equal(testValue);\n    \n        await expect(connection.request(\n            dbName,\n            'remove',\n            addValueHash,\n        )).eventually.not.rejected.not.be.an('error');\n\n        const getValueByHashAfterRemoveResult = await connection.request(\n            dbName,\n            'get',\n            addValueHash,\n        );\n        \n        assert(getValueByHashAfterRemoveResult == null, 'The value removed before must be empty');\n    }\n}\n\nexport const runTestSwarmStoreOrbitDBConnection = async (name?: string) => {\n    describe('swarm store: orbit db', () => {        \n        let ipfsConnection: IPFS | undefined;\n\n        beforeEach(async function () {\n            this.timeout(60000);\n            const swarmConnection = new SwarmConnection();\n\n            expect(swarmConnection).to.be.an.instanceof(SwarmConnection);\n            await assert.becomes(swarmConnection.connect(SWARM_CONNECTION_OPTIONS), true, '');\n            expect(swarmConnection.isConnected).to.equal(true);\n\n            ipfsConnection = swarmConnection.getNativeConnection();\n\n            expect(ipfsConnection).to.be.an.instanceof(ipfs);\n        });\n\n        if (!name || name === 'create swarm store OrbitDB connector - 3 databases') {\n            it('create swarm store OrbitDB connector - 3 databases', async () => {\n                expect(ipfsConnection).to.be.an.instanceof(ipfs);\n    \n                const connection = new SwarmStoreConnectorOrbitDB<string>(\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_THREE_DATABASES);\n    \n                expect(connection).to.be.an.instanceof(SwarmStoreConnectorOrbitDB);\n                expect(connection.connect).to.be.a('function');\n                \n                let fullProgressEmitted: boolean = false;\n                let readyEmitted: string[] = [];\n    \n                connection.on(ESwarmStoreConnectorOrbitDBEventNames.LOADING, (loadingProgress: number) => {\n                    if (loadingProgress === 100) {\n                        fullProgressEmitted = true;\n                    }\n                });\n                connection.on(ESwarmStoreConnectorOrbitDBEventNames.READY, (dbName: string) => {\n                    if (dbName) {\n                        readyEmitted.push(dbName);\n                    }\n                });\n    \n                await expect(connection.connect({\n                    ipfs: ipfsConnection!,\n                })).to.be.not.eventually.an.instanceof(Error);\n    \n                expect(connection.isClosed).to.be.equal(false);\n                expect(connection.isReady).to.be.equal(true);\n                assert((fullProgressEmitted as boolean) === true, 'The event 100% loading progress does not emitted')\n                expect(readyEmitted)\n                    .to.be.an('array')\n                    .that.include.all.members(\n                        SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_THREE_DATABASES.databases.map(db => db.dbName)\n                    );\n                \n                await testDatabase(\n                    connection,\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME,\n                );\n                await testDatabase(\n                    connection,\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_TWO_DATABASE_DB_NAME,\n                );\n                await testDatabase(\n                    connection,\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_THREE_DATABASE_DB_NAME,\n                );\n    \n                let isCloseEmitted: boolean = false;\n    \n                connection[COMMON_VALUE_EVENT_EMITTER_METHOD_NAME_ON](ESwarmStoreConnectorOrbitDBEventNames.CLOSE, () => {\n                    isCloseEmitted = true;\n                });\n    \n                await expect(connection.close()).to.eventually.be.undefined;\n    \n                assert((isCloseEmitted as boolean) === true, 'The close event must be emitted on SwarmStoreConnector close');\n    \n                const addValueHashAfterClose = await connection.request(\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME,\n                    'add',\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_TEST_VALUE,\n                )\n            \n                expect(addValueHashAfterClose).to.be.an('error');\n            }).timeout(70000);\n        }\n\n        if (!name || name === 'create swarm store OrbitDB connector - 1 database, check database close') {\n            it('create swarm store OrbitDB connector - 1 database, check database close', async () => {\n                expect(ipfsConnection).to.be.an.instanceof(ipfs);\n\n                const connection = new SwarmStoreConnectorOrbitDB<string>(\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE);\n\n                expect(connection).to.be.an.instanceof(SwarmStoreConnectorOrbitDB);\n                expect(connection.connect).to.be.a('function');\n                \n                let fullProgressEmitted: boolean = false;\n                let readyEmitted: string[] = [];\n\n                connection.on(ESwarmStoreConnectorOrbitDBEventNames.LOADING, (loadingProgress: number) => {\n                    if (loadingProgress === 100) {\n                        fullProgressEmitted = true;\n                    }\n                });\n                connection.on(ESwarmStoreConnectorOrbitDBEventNames.READY, (dbName: string) => {\n                    if (dbName) {\n                        readyEmitted.push(dbName);\n                    }\n                });\n\n                await expect(connection.connect({\n                    ipfs: ipfsConnection!,\n                })).to.be.not.eventually.an.instanceof(Error);\n\n                expect(connection.isClosed).to.be.equal(false);\n                expect(connection.isReady).to.be.equal(true);\n                assert((fullProgressEmitted as boolean) === true, 'The event 100% loading progress does not emitted')\n                expect(readyEmitted)\n                    .to.be.an('array')\n                    .that.include.all.members(\n                        SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE.databases.map(db => db.dbName)\n                    );\n                \n                await testDatabase(\n                    connection,\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME,\n                );\n\n                //\n                await expect(connection.openDatabase(SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_DATABASE_TWO))\n                    .to.eventually.be.undefined;\n                await expect(connection.openDatabase(SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_DATABASE_TWO))\n                    .to.eventually.be.an('error');\n\n                //\n                const result = await Promise.all([\n                    connection.openDatabase(SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_DATABASE_THREE),\n                    connection.openDatabase(SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_DATABASE_THREE),\n                ]);\n\n                expect(result)\n                    .to.be.an('array').that.has.property('length', 2);\n                assert(result[0] == null, 'The first instance must be started');\n                expect(result[1]).to.be.an.instanceof(Error);\n\n                let isEmitDbClose: boolean = false;\n\n                connection.on(ESwarmStoreConnectorOrbitDBEventNames.CLOSE_DATABASE, (dbName: string) => {\n                    if (dbName === SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME) {\n                        isEmitDbClose = true;\n                    }\n                })\n                await expect(connection.closeDb(SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME)).to.eventually.eq(undefined);\n                expect(isEmitDbClose).to.be.equal(true);\n                await expect(connection.request(\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME,\n                    'get',\n                    '111'\n                )).to.eventually.be.an('Error');\n                \n                let isCloseEmitted: boolean = false;\n\n                connection[COMMON_VALUE_EVENT_EMITTER_METHOD_NAME_ON](ESwarmStoreConnectorOrbitDBEventNames.CLOSE, () => {\n                    isCloseEmitted = true;\n                });\n\n                await expect(connection.close()).to.eventually.be.undefined;\n\n                assert((isCloseEmitted as boolean) === true, 'The close event must be emitted on SwarmStoreConnector close');\n\n                const addValueHashAfterClose = await connection.request(\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME,\n                    'add',\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_TEST_VALUE,\n                )\n            \n                expect(addValueHashAfterClose).to.be.an('error');\n            }).timeout(70000);\n        }\n\n        if (!name || name === 'create swarm store OrbitDB connector - 1 database with custom identity') {\n            it('create swarm store OrbitDB connector - 1 database with custom identity', async () => {\n                expect(ipfsConnection).to.be.an.instanceof(ipfs);\n\n                const connection = new SwarmStoreConnectorOrbitDB<string>(\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_WITH_IDENTITY as any,\n                );\n\n                expect(connection).to.be.an.instanceof(SwarmStoreConnectorOrbitDB);\n                expect(connection.connect).to.be.a('function');\n                \n                let fullProgressEmitted: boolean = false;\n                let readyEmitted: string[] = [];\n\n                connection.on(ESwarmStoreConnectorOrbitDBEventNames.LOADING, (loadingProgress: number) => {\n                    if (loadingProgress === 100) {\n                        fullProgressEmitted = true;\n                    }\n                });\n                connection.on(ESwarmStoreConnectorOrbitDBEventNames.READY, (dbName: string) => {\n                    if (dbName) {\n                        readyEmitted.push(dbName);\n                    }\n                });\n\n                await expect(connection.connect({\n                    ipfs: ipfsConnection!,\n                })).to.be.not.eventually.an.instanceof(Error);\n\n                expect(connection.isClosed).to.be.equal(false);\n                expect(connection.isReady).to.be.equal(true);\n                assert(\n                    (fullProgressEmitted as boolean) === true,\n                    'The event 100% loading progress does not emitted',\n                )\n                expect(readyEmitted)\n                    .to.be.an('array')\n                    .that.include.all.members(\n                        SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE.databases.map(db => db.dbName)\n                    );\n\n                await testDatabase(\n                    connection,\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME,\n                );\n            }).timeout(70000);\n        }\n\n        if (!name || name === 'create swarm store OrbitDB connector - 1 database with custom acccess provider') {\n            it('create swarm store OrbitDB connector - 1 database with custom acccess provider', async () => {\n                expect(ipfsConnection).to.be.an.instanceof(ipfs);\n\n                const connection = new SwarmStoreConnectorOrbitDB<string>(\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_WITH_IDENTITY_AND_ACCESS_CONTROLLER as any,\n                );\n\n                expect(connection).to.be.an.instanceof(SwarmStoreConnectorOrbitDB);\n                expect(connection.connect).to.be.a('function');\n                \n                let fullProgressEmitted: boolean = false;\n                let readyEmitted: string[] = [];\n\n                connection.on(ESwarmStoreConnectorOrbitDBEventNames.LOADING, (loadingProgress: number) => {\n                    if (loadingProgress === 100) {\n                        fullProgressEmitted = true;\n                    }\n                });\n                connection.on(ESwarmStoreConnectorOrbitDBEventNames.READY, (dbName: string) => {\n                    if (dbName) {\n                        readyEmitted.push(dbName);\n                    }\n                });\n\n                await expect(connection.connect({\n                    ipfs: ipfsConnection!,\n                })).to.be.not.eventually.an.instanceof(Error);\n\n                expect(connection.isClosed).to.be.equal(false);\n                expect(connection.isReady).to.be.equal(true);\n                assert(\n                    (fullProgressEmitted as boolean) === true,\n                    'The event 100% loading progress does not emitted',\n                )\n                expect(readyEmitted)\n                    .to.be.an('array')\n                    .that.include.all.members(\n                        SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE.databases.map(db => db.dbName)\n                    );\n\n                await testDatabase(\n                    connection,\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME,\n                );\n            }).timeout(70000);\n        }\n\n        if (!name || name === 'create swarm store OrbitDB connector - 3 databases with custom acccess provider and secret keystore') {\n            it('create swarm store OrbitDB connector - 3 databases with custom acccess provider and secret keystore', async () => {\n                expect(ipfsConnection).to.be.an.instanceof(ipfs);\n\n                const connection = new SwarmStoreConnectorOrbitDB<string>(\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_THREE_DATABASES_WITH_IDENTITY_AND_ACCESS_CONTROLLER_SECRET_KEYSTORE as any,\n                );\n                \n                expect(connection).to.be.an.instanceof(SwarmStoreConnectorOrbitDB);\n                expect(connection.connect).to.be.a('function');\n                \n                let fullProgressEmitted: boolean = false;\n                let readyEmitted: string[] = [];\n\n                connection.on(ESwarmStoreConnectorOrbitDBEventNames.LOADING, (loadingProgress: number) => {\n                    if (loadingProgress === 100) {\n                        fullProgressEmitted = true;\n                    }\n                });\n                connection.on(ESwarmStoreConnectorOrbitDBEventNames.READY, (dbName: string) => {\n                    if (dbName) {\n                        readyEmitted.push(dbName);\n                    }\n                });\n\n                await expect(connection.connect({\n                    ipfs: ipfsConnection!,\n                })).to.be.not.eventually.an.instanceof(Error);\n\n                expect(connection.isClosed).to.be.equal(false);\n                expect(connection.isReady).to.be.equal(true);\n                assert(\n                    (fullProgressEmitted as boolean) === true,\n                    'The event 100% loading progress does not emitted',\n                )\n                expect(readyEmitted)\n                    .to.be.an('array')\n                    .that.include.all.members(\n                        SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE.databases.map(db => db.dbName)\n                    );\n                        \n                await testDatabase(\n                    connection,\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME,\n                );\n                await testDatabase(\n                    connection,\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_TWO_DATABASE_DB_NAME,\n                );\n                await testDatabase(\n                    connection,\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_THREE_DATABASE_DB_NAME,\n                );\n    \n                let isCloseEmitted: boolean = false;\n    \n                connection[COMMON_VALUE_EVENT_EMITTER_METHOD_NAME_ON](ESwarmStoreConnectorOrbitDBEventNames.CLOSE, () => {\n                    isCloseEmitted = true;\n                });\n    \n                await expect(connection.close()).to.eventually.be.undefined;\n    \n                assert((isCloseEmitted as boolean) === true, 'The close event must be emitted on SwarmStoreConnector close');\n    \n                const addValueHashAfterClose = await connection.request(\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME,\n                    'add',\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_TEST_VALUE,\n                )\n            \n                expect(addValueHashAfterClose).to.be.an('error');\n            }).timeout(70000);\n        }\n\n        if (!name || name === 'create swarm store OrbitDB connector - 3 databases with custom acccess provider and secret keystore -- with random loop') {\n            it('create swarm store OrbitDB connector - 3 databases with custom acccess provider and secret keystore', async () => {\n                expect(ipfsConnection).to.be.an.instanceof(ipfs);\n\n                const connection = new SwarmStoreConnectorOrbitDB<string>(\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_THREE_DATABASES_WITH_IDENTITY_AND_ACCESS_CONTROLLER_SECRET_KEYSTORE as any,\n                );\n                \n                expect(connection).to.be.an.instanceof(SwarmStoreConnectorOrbitDB);\n                expect(connection.connect).to.be.a('function');\n                \n                let fullProgressEmitted: boolean = false;\n                let readyEmitted: string[] = [];\n\n                connection.on(ESwarmStoreConnectorOrbitDBEventNames.LOADING, (loadingProgress: number) => {\n                    if (loadingProgress === 100) {\n                        fullProgressEmitted = true;\n                    }\n                });\n                connection.on(ESwarmStoreConnectorOrbitDBEventNames.READY, (dbName: string) => {\n                    if (dbName) {\n                        readyEmitted.push(dbName);\n                    }\n                });\n\n                await expect(connection.connect({\n                    ipfs: ipfsConnection!,\n                })).to.be.not.eventually.an.instanceof(Error);\n\n                expect(connection.isClosed).to.be.equal(false);\n                expect(connection.isReady).to.be.equal(true);\n                assert(\n                    (fullProgressEmitted as boolean) === true,\n                    'The event 100% loading progress does not emitted',\n                )\n                expect(readyEmitted)\n                    .to.be.an('array')\n                    .that.include.all.members(\n                        SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE.databases.map(db => db.dbName)\n                    );\n                        \n                await testDatabaseWithRandomValue(\n                    connection,\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME,\n                );\n                await testDatabaseWithRandomValue(\n                    connection,\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_TWO_DATABASE_DB_NAME,\n                );\n                await testDatabaseWithRandomValue(\n                    connection,\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_THREE_DATABASE_DB_NAME,\n                );\n    \n                let isCloseEmitted: boolean = false;\n    \n                connection[COMMON_VALUE_EVENT_EMITTER_METHOD_NAME_ON](ESwarmStoreConnectorOrbitDBEventNames.CLOSE, () => {\n                    isCloseEmitted = true;\n                });\n    \n                await expect(connection.close()).to.eventually.be.undefined;\n    \n                assert((isCloseEmitted as boolean) === true, 'The close event must be emitted on SwarmStoreConnector close');\n    \n                const addValueHashAfterClose = await connection.request(\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_DB_NAME,\n                    'add',\n                    SWARM_STORE_CONNECTOR_TEST_CONNECTION_OPTIONS_ONE_DATABASE_TEST_VALUE,\n                )\n            \n                expect(addValueHashAfterClose).to.be.an('error');\n            }).timeout(70000);\n        }\n    })\n\n    async function testCache(cache: SwarmStoreConnectorOrbitDBSubclassStoreToSecretStorageAdapter) {\n        const testKey = '___test_key__cache';\n        const testValue = '___test_value_cache';\n\n        expect(cache)\n            .to.be.an\n            .instanceof(SwarmStoreConnectorOrbitDBSubclassStoreToSecretStorageAdapter);\n        expect(cache.db).to.deep.equal({\n            status: SWARM_STORE_CONNECTOR_ORBITDB_SUBCASS_STORE_TO_SECRET_STORAGE_ADAPTER_STATUS.OPEN\n        })\n        expect(cache!.status).to.be.equal(SWARM_STORE_CONNECTOR_ORBITDB_SUBCASS_STORE_TO_SECRET_STORAGE_ADAPTER_STATUS.OPEN);\n        await expect(cache!.get(\n            testKey,\n        )).to.be.eventually.oneOf([testValue, undefined]);\n        expect(cache!.status).to.be.equal(SWARM_STORE_CONNECTOR_ORBITDB_SUBCASS_STORE_TO_SECRET_STORAGE_ADAPTER_STATUS.OPEN);\n        await expect(cache!.put(\n            testKey,\n            testValue,\n        )).to.eventually.be.fulfilled;\n        await expect(cache!.open()).to.eventually.be.fulfilled;\n        expect(cache!.status).to.be.equal(SWARM_STORE_CONNECTOR_ORBITDB_SUBCASS_STORE_TO_SECRET_STORAGE_ADAPTER_STATUS.OPEN);\n        // TODO - must provide storing values as buffer fo the SecretStorage\n        await expect(cache!.get(\n            testKey,\n        )).to.be.eventually.equal(testValue);\n\n        const testKeyRandom = `${Date.now()}!@#$%^&**()_)_)*(&*&TY&*%*$^#$*:\":/*/-*)//..,<><.~~~~';`;\n        const testValueRandom = `${new Date()}!@#$%^&**()_)_)*(&*&TY&*%*$^#$*:\":/*/-*)//..,<><.~~~~';`;\n\n        await expect(cache!.put(\n            testKeyRandom,\n            testValueRandom,\n        )).to.eventually.be.fulfilled;\n        // TODO - must provide storing values as buffer fo the SecretStorage\n\n        let cbCalledTimes = 0;\n        const cb = (err: Error | undefined, value: string | undefined) => {\n            if (!err) {\n                cbCalledTimes += Number(!!value);\n            }\n        }\n\n        await expect(cache!.get(\n            testKeyRandom,\n            cb,\n        )).to.be.eventually.equal(testValueRandom);\n        expect(cbCalledTimes).to.equal(1);\n\n        const cbErr = (err: Error | undefined) => {\n            if (!err) {\n                cbCalledTimes += 1;\n            }\n        }\n\n        await expect(cache!.del(\n            testKeyRandom,\n            cbErr,\n        )).to.be.eventually.equal(undefined);\n        expect(cbCalledTimes).to.equal(2);\n        await expect(cache!.close(cbErr,)).to.eventually.be.fulfilled;\n        expect(cbCalledTimes).to.equal(3);\n        expect(cache!.status).to.be.equal(SWARM_STORE_CONNECTOR_ORBITDB_SUBCASS_STORE_TO_SECRET_STORAGE_ADAPTER_STATUS.CLOSE);\n    }\n\n    describe('swarm store:: orbit db:: subclasses', () => {\n        if (!name || name === 'subclass swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter') { \n            it('subclass swarm-store-connector-orbit-db-subclass-store-to-secret-storage-adapter', async () => {\n                let secretStorageAdapter: undefined | SwarmStoreConnectorOrbitDBSubclassStoreToSecretStorageAdapter;\n                const testKey = '___test_key';\n                const testValue = '___test_value';\n\n                expect(() => {\n                    secretStorageAdapter = new SwarmStoreConnectorOrbitDBSubclassStoreToSecretStorageAdapter(\n                        SWARM_STORE_CONNECTOR_TEST_SUBCLASS_SECRET_STORAGE_CONNECTOR_CREDENTIALS,\n                        SWARM_STORE_CONNECTOR_TEST_SUBCLASS_SECRET_STORAGE_CONNECTOR_OPTIONS,\n                    );\n                }).to.not.throw();\n                expect(secretStorageAdapter)\n                    .to.be.an\n                    .instanceof(SwarmStoreConnectorOrbitDBSubclassStoreToSecretStorageAdapter);\n                expect(secretStorageAdapter!.status).to.be.equal(SWARM_STORE_CONNECTOR_ORBITDB_SUBCASS_STORE_TO_SECRET_STORAGE_ADAPTER_STATUS.OPEN);\n                await expect(secretStorageAdapter!.get(\n                    testKey,\n                )).to.be.eventually.oneOf([testValue, undefined]);\n                expect(secretStorageAdapter!.status).to.be.equal(SWARM_STORE_CONNECTOR_ORBITDB_SUBCASS_STORE_TO_SECRET_STORAGE_ADAPTER_STATUS.OPEN);\n                await expect(secretStorageAdapter!.put(\n                    testKey,\n                    testValue,\n                )).to.eventually.be.fulfilled;\n                await expect(secretStorageAdapter!.open()).to.eventually.be.fulfilled;\n                expect(secretStorageAdapter!.status).to.be.equal(SWARM_STORE_CONNECTOR_ORBITDB_SUBCASS_STORE_TO_SECRET_STORAGE_ADAPTER_STATUS.OPEN);\n                // TODO - must provide storing values as buffer fo the SecretStorage\n                await expect(secretStorageAdapter!.get(\n                    testKey,\n                )).to.be.eventually.equal(testValue);\n\n                const testKeyRandom = `${Date.now()}!@#$%^&**()_)_)*(&*&TY&*%*$^#$*:\":/*/-*)//..,<><.~~~~';`;\n                const testValueRandom = `${new Date()}!@#$%^&**()_)_)*(&*&TY&*%*$^#$*:\":/*/-*)//..,<><.~~~~';`;\n\n                await expect(secretStorageAdapter!.put(\n                    testKeyRandom,\n                    testValueRandom,\n                )).to.eventually.be.fulfilled;\n                // TODO - must provide storing values as buffer fo the SecretStorage\n                await expect(secretStorageAdapter!.get(\n                    testKeyRandom,\n                )).to.be.eventually.equal(testValueRandom);\n                await expect(secretStorageAdapter!.close()).to.eventually.be.fulfilled;\n                expect(secretStorageAdapter!.status).to.be.equal(SWARM_STORE_CONNECTOR_ORBITDB_SUBCASS_STORE_TO_SECRET_STORAGE_ADAPTER_STATUS.CLOSE);\n            }).timeout(10000);\n        }\n        if (!name || name === 'subclass swarm-store-connector-orbit-db-subclass-storage-cache') {\n            it('subclass swarm-store-connector-orbit-db-subclass-storage-cache', async () => {\n                const password = '123456';\n                let key: CryptoKey;\n                let cache: undefined | SwarmStoreConnectorOrbitDBSubclassStoreToSecretStorageAdapter;\n\n                await expect((async () => {\n                    key = await SecretStorage.generatePasswordKeyByPasswordString(password) as CryptoKey;\n                    return key;\n                })()).to.eventually.be.fulfilled;\n\n                expect(key!).to.be.an.instanceOf(CryptoKey);\n                expect(() => {\n                    cache = new SwarmStoreConnectorOrbitDBSubclassStoreToSecretStorageAdapter(\n                        { key },\n                        SWARM_STORE_CONNECTOR_TEST_SUBCLASS_CACHE_OPTIONS,\n                    );\n                }).to.not.throw();\n                await testCache(cache!);\n            }).timeout(10000);\n        }\n        if (!name || name === 'subclass swarm-store-connector-orbit-db-subclass-storage-fabric') {\n            it('subclass swarm-store-connector-orbit-db-subclass-storage-fabric', async () => {\n                const password = '123456';\n                const cachePath = '___cachePath_test';\n                const passwordFailed = '12345';\n\n                expect(() => {\n                    new SwarmStoreConnectorOrbitDBSubclassStorageFabric(\n                        { password: passwordFailed}\n                    );\n                }).to.throw();\n\n                let fabric: undefined | SwarmStoreConnectorOrbitDBSubclassStorageFabric;\n                let cache: undefined | SwarmStoreConnectorOrbitDBSubclassStoreToSecretStorageAdapter;\n\n                expect(() => {\n                    fabric = new SwarmStoreConnectorOrbitDBSubclassStorageFabric(\n                        { password }\n                    );\n                }).not.to.throw();\n                expect(fabric).to.be.instanceOf(SwarmStoreConnectorOrbitDBSubclassStorageFabric);\n                await expect((async () => {\n                    cache = await fabric!.createStore(cachePath) as SwarmStoreConnectorOrbitDBSubclassStoreToSecretStorageAdapter;\n                })()).to.eventually.be.fulfilled;\n                await testCache(cache!);\n            }).timeout(10000);\n        }\n    });\n};","/home/paul/projects/decentrilized-protocol/src/test/valiation-utils.test.ts",["1669"],"import { validateBySchema } from 'utils/validation-utils/validation-utils';\n\nexport const runTest = () => {\n  const schema = {\n    title: 'test',\n    type: 'object',\n    $id: 'http://test.schema',\n    description: 'schema for testing of the validation functionality',\n    properties: {\n      notRequired: {\n        type: 'string',\n      },\n      required: {\n        type: 'array',\n        items: {\n          oneOf: [\n            {\n              type: 'number',\n            },\n            {\n              type: 'string',\n            },\n          ],\n        },\n      },\n    },\n    required: ['required'],\n    additionalProperties: false,\n  };\n\n  const result = validateBySchema(schema, undefined);\n\n  if (result !== false) {\n    console.error('Wrong result for undefined');\n  }\n\n  const testData1 = {\n    required: ['1', 1],\n  };\n  const result1 = validateBySchema(schema, testData1);\n\n  if (result1 !== true) {\n    console.error('Wrong result for requered field');\n  }\n\n  const testData2 = {\n    notRequired: '1',\n  };\n  const result2 = validateBySchema(schema, testData2);\n\n  if (result2 !== false) {\n    console.error('Wrong result for data with no required field');\n  }\n\n  const testData3 = {\n    notRequired: '1',\n    required: ['1', 1],\n  };\n  const result3 = validateBySchema(schema, testData3);\n\n  if (result3 !== true) {\n    console.error('Wrong result for data with all fields');\n  }\n\n  const testData4 = {\n    notRequired: '1',\n    required: ['1', 1],\n    additional: 1,\n  };\n  const result4 = validateBySchema(schema, testData4);\n\n  if (result4 !== false) {\n    console.error('Wrong result for data with additional fields');\n  }\n};\n","/home/paul/projects/decentrilized-protocol/src/test/validation-messaging.test/validation-messaging.test.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/pseudo-ntp-class/pseudo-ntp-class.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/pseudo-ntp-class/pseudo-ntp-class.ts",["1670","1671","1672","1673","1674","1675","1676"],"/home/paul/projects/decentrilized-protocol/src/classes/pseudo-ntp-class/pseudo-ntp-class.types.ts",["1677","1678"],"/home/paul/projects/decentrilized-protocol/src/classes/pseudo-ntp-class/pseudo-ntp-class.utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/const/const-api-conf.ts",[],"/home/paul/projects/decentrilized-protocol/src/const/common-date-time/common-date-time-main.ts",[],"/home/paul/projects/decentrilized-protocol/src/const/common-date-time/common-date-time-ntp-servers.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/common-utils/common-utils-date-time-synced.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-issuer-deserizlied/swarm-message-subclass-validator-fields-validator-validator-issuer-deserizlied.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-issuer-deserizlied/swarm-message-subclass-validator-fields-validator-validator-issuer-deserizlied.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-issuer-serialized/swarm-message-subclass-validator-fields-validator-validator-issuer-serialized.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-issuer-serialized/swarm-message-subclass-validator-fields-validator-validator-issuer-serialized.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-payload/swarm-message-subclass-validator-fields-validator-validator-payload.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-payload/swarm-message-subclass-validator-fields-validator-validator-payload.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-payload/swarm-message-subclass-validator-fields-validator-validator-payload.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-timestamp/swarm-message-subclass-validator-fields-validator-validator-timestamp.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-timestamp/swarm-message-subclass-validator-fields-validator-validator-timestamp.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-timestamp/swarm-message-subclass-validator-fields-validator-validator-timestamp.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-type/swarm-message-subclass-validator-fields-validator-validator-type.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-type/swarm-message-subclass-validator-fields-validator-validator-type.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-user-identifier/swarm-message-subclass-validator-fields-validator-validator-user-identifier.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-user-identifier/swarm-message-subclass-validator-fields-validator-validator-user-identifier.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator.ts",["1679","1680","1681"],"/home/paul/projects/decentrilized-protocol/src/classes/swarm-message/swarm-message-subclasses/swarm-message-subclass-validator/swarm-message-subclass-validator-fields-validator/swarm-message-subclass-validator-fields-validator-validators/swarm-message-subclass-validator-fields-validator-validator-user-identifier/swarm-message-subclass-validator-fields-validator-validator-user-identifier.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/common-utils/common-utils-date-time.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/common-utils/common-utils-number.ts",[],"/home/paul/projects/decentrilized-protocol/src/backog-classes/channel-authority-class/channel-authority-class.ts",[],"/home/paul/projects/decentrilized-protocol/src/backog-classes/channel-authority-class/channel-authority-class.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/backog-classes/channel-authority-class/channel-authority-connections/channel-authority-connection-with-server-api/channel-authority-connection-with-server-api.ts",[],"/home/paul/projects/decentrilized-protocol/src/backog-classes/channel-authority-class/channel-authority-connections/channel-authority-connection-with-server-api/channel-authority-connection-with-server-api.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-current-user-auth/central-authority-storage-credentials/central-authority-storage-credentials.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-current-user-auth/central-authority-storage-credentials/central-authority-storage-credentials.ts",["1682","1683"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-parsers/central-authority-class-user-identity-parsers-parser-v2/central-authority-class-user-identity-parsers-parser-v2.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-parsers/central-authority-class-user-identity-parsers-parser-v2/central-authority-class-user-identity-parsers-parser-v2.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-validators/central-authority-class-user-identity-validator-v2/central-authority-class-user-identity-validator-v2.ts",["1684"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-current-user-auth/central-authority-storage-current-user-auth/central-authority-storage-auth-providers-credentials.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-current-user-auth/central-authority-storage-current-user-auth/central-authority-storage-auth-providers-credentials.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/const/common-values/common-values-env.ts",[],"/home/paul/projects/decentrilized-protocol/src/const/const-validation-regex/const-validation-regex-common.ts",[],"/home/paul/projects/decentrilized-protocol/src/test/central-authority-identity.test/central-authority-identity.utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-formatters/central-authority-class-user-identity-formatters-formatter-v2/central-authority-class-user-identity-formatters-formatter-v2.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-class-user-identity/central-authority-class-user-identity-formatters/central-authority-class-user-identity-formatters-formatter-v2/central-authority-class-user-identity-formatters-formatter-v2.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-swarm-users-auth/central-authority-storage-swarm-users-identity-credentials/central-authority-storage-swarm-users-identity-credentials.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-swarm-users-auth/central-authority-storage-swarm-users-identity-credentials/central-authority-storage-swarm-users-identity-credentials.ts",["1685","1686","1687","1688","1689"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-swarm-users-auth/central-authority-storage-swarm-users-identity-credentials/central-authority-storage-swarm-users-identity-credentials.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-base/central-authority-connection-firebase-base.ts",["1690","1691","1692","1693","1694","1695","1696","1697","1698","1699","1700"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-connection-implementation/central-authority-connection-firebase-connection-implementation.ts",["1701","1702","1703","1704"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.validators/central-authority-connection-firebase-utils.validators.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connection-firebase/central-authority-connection-firebase-utils/central-authority-connection-firebase-utils.validators/central-authority-connection-firebase-utils.validators.ts",["1705"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-pool/central-authority-connections-pool.ts",["1706","1707"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-pool/central-authority-connections-pool.types.ts",["1708"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-utils/central-authority-connections-utils.normalizers.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-utils/central-authority-connections-utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-utils/central-authority-connections-utils.validators/central-authority-connections-utils.validators.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-utils/central-authority-connections-utils.validators/central-authority-connections-utils.validators.ts",["1709","1710"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/common-utils/common-utils-url.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-utils/central-authority-connections-utils.common/central-authority-connections-utils.common.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-connections/central-authority-connections-const/central-authority-connections-const-status.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-current-user-auth/central-authority-storage-credentials/central-authority-storage-credentials.types.ts",["1711","1712","1713"],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-current-user-auth/central-authority-storage-credentials/central-authority-storage-credentials.utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/salt-utils.const.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/salt-utils.ts",[],"/home/paul/projects/decentrilized-protocol/src/utils/encryption-utils/salt-utils.types.ts",[],"/home/paul/projects/decentrilized-protocol/src/classes/central-authority-class/central-authority-storage-local/central-authority-storage-current-user-auth/central-authority-storage-credentials/central-authority-storage-credentials copy.ts",[],{"ruleId":"1714","severity":1,"message":"1715","line":2,"column":8,"nodeType":"1716","endLine":2,"endColumn":12},{"ruleId":"1714","severity":1,"message":"1717","line":5,"column":10,"nodeType":"1716","endLine":5,"endColumn":43},{"ruleId":"1714","severity":1,"message":"1718","line":6,"column":10,"nodeType":"1716","endLine":6,"endColumn":43},{"ruleId":"1714","severity":1,"message":"1719","line":8,"column":3,"nodeType":"1716","endLine":8,"endColumn":52},{"ruleId":"1714","severity":1,"message":"1720","line":9,"column":3,"nodeType":"1716","endLine":9,"endColumn":22},{"ruleId":"1714","severity":1,"message":"1721","line":12,"column":3,"nodeType":"1716","endLine":12,"endColumn":30},{"ruleId":"1714","severity":1,"message":"1722","line":13,"column":3,"nodeType":"1716","endLine":13,"endColumn":77},{"ruleId":"1714","severity":1,"message":"1723","line":15,"column":10,"nodeType":"1716","endLine":15,"endColumn":30},{"ruleId":"1714","severity":1,"message":"1724","line":16,"column":10,"nodeType":"1716","endLine":16,"endColumn":32},{"ruleId":"1714","severity":1,"message":"1725","line":17,"column":10,"nodeType":"1716","endLine":17,"endColumn":36},{"ruleId":"1714","severity":1,"message":"1726","line":19,"column":10,"nodeType":"1716","endLine":19,"endColumn":44},{"ruleId":"1714","severity":1,"message":"1727","line":20,"column":10,"nodeType":"1716","endLine":20,"endColumn":48},{"ruleId":"1714","severity":1,"message":"1728","line":21,"column":10,"nodeType":"1716","endLine":21,"endColumn":28},{"ruleId":"1714","severity":1,"message":"1729","line":22,"column":10,"nodeType":"1716","endLine":22,"endColumn":31},{"ruleId":"1714","severity":1,"message":"1730","line":23,"column":10,"nodeType":"1716","endLine":23,"endColumn":33},{"ruleId":"1714","severity":1,"message":"1731","line":24,"column":10,"nodeType":"1716","endLine":24,"endColumn":40},{"ruleId":"1714","severity":1,"message":"1732","line":25,"column":10,"nodeType":"1716","endLine":25,"endColumn":29},{"ruleId":"1714","severity":1,"message":"1733","line":26,"column":10,"nodeType":"1716","endLine":26,"endColumn":45},{"ruleId":"1714","severity":1,"message":"1734","line":27,"column":10,"nodeType":"1716","endLine":27,"endColumn":45},{"ruleId":"1714","severity":1,"message":"1735","line":28,"column":10,"nodeType":"1716","endLine":28,"endColumn":31},{"ruleId":"1714","severity":1,"message":"1736","line":29,"column":10,"nodeType":"1716","endLine":29,"endColumn":38},{"ruleId":"1714","severity":1,"message":"1737","line":2,"column":10,"nodeType":"1716","endLine":2,"endColumn":13},{"ruleId":"1738","severity":1,"message":"1739","line":9,"column":56,"nodeType":"1740","messageId":"1741","endLine":9,"endColumn":59},{"ruleId":"1738","severity":1,"message":"1739","line":15,"column":55,"nodeType":"1740","messageId":"1741","endLine":15,"endColumn":58},{"ruleId":"1742","severity":1,"message":"1743","line":18,"column":3,"nodeType":"1744","messageId":"1745","endLine":18,"endColumn":57},{"ruleId":"1746","severity":1,"message":"1747","line":87,"column":15,"nodeType":"1748","messageId":"1749","endLine":87,"endColumn":27},{"ruleId":"1714","severity":1,"message":"1750","line":32,"column":9,"nodeType":"1716","endLine":32,"endColumn":15},{"ruleId":"1714","severity":1,"message":"1751","line":8,"column":10,"nodeType":"1716","endLine":8,"endColumn":20},{"ruleId":"1738","severity":1,"message":"1739","line":77,"column":27,"nodeType":"1740","messageId":"1741","endLine":77,"endColumn":30},{"ruleId":"1738","severity":1,"message":"1739","line":78,"column":39,"nodeType":"1740","messageId":"1741","endLine":78,"endColumn":42},{"ruleId":"1742","severity":1,"message":"1752","line":47,"column":3,"nodeType":"1753","messageId":"1745","endLine":47,"endColumn":52},{"ruleId":"1742","severity":1,"message":"1754","line":49,"column":3,"nodeType":"1753","messageId":"1745","endLine":49,"endColumn":26},{"ruleId":"1742","severity":1,"message":"1755","line":51,"column":3,"nodeType":"1753","messageId":"1745","endLine":51,"endColumn":29},{"ruleId":"1742","severity":1,"message":"1756","line":53,"column":3,"nodeType":"1753","messageId":"1745","endLine":53,"endColumn":32},{"ruleId":"1742","severity":1,"message":"1757","line":55,"column":3,"nodeType":"1753","messageId":"1745","endLine":55,"endColumn":59},{"ruleId":"1742","severity":1,"message":"1758","line":57,"column":3,"nodeType":"1753","messageId":"1745","endLine":57,"endColumn":34},{"ruleId":"1742","severity":1,"message":"1759","line":59,"column":3,"nodeType":"1753","messageId":"1745","endLine":59,"endColumn":40},{"ruleId":"1742","severity":1,"message":"1760","line":61,"column":3,"nodeType":"1753","messageId":"1745","endLine":61,"endColumn":46},{"ruleId":"1742","severity":1,"message":"1743","line":69,"column":3,"nodeType":"1744","messageId":"1745","endLine":82,"endColumn":4},{"ruleId":"1746","severity":1,"message":"1747","line":98,"column":36,"nodeType":"1748","messageId":"1749","endLine":98,"endColumn":40},{"ruleId":"1738","severity":1,"message":"1739","line":130,"column":38,"nodeType":"1740","messageId":"1741","endLine":130,"endColumn":41},{"ruleId":"1714","severity":1,"message":"1761","line":38,"column":7,"nodeType":"1716","endLine":38,"endColumn":17},{"ruleId":"1742","severity":1,"message":"1762","line":24,"column":3,"nodeType":"1753","messageId":"1745","endLine":24,"endColumn":35},{"ruleId":"1742","severity":1,"message":"1763","line":25,"column":3,"nodeType":"1753","messageId":"1745","endLine":25,"endColumn":45},{"ruleId":"1742","severity":1,"message":"1764","line":26,"column":3,"nodeType":"1753","messageId":"1745","endLine":26,"endColumn":68},{"ruleId":"1742","severity":1,"message":"1765","line":27,"column":3,"nodeType":"1753","messageId":"1745","endLine":27,"endColumn":53},{"ruleId":"1742","severity":1,"message":"1766","line":28,"column":3,"nodeType":"1753","messageId":"1745","endLine":28,"endColumn":37},{"ruleId":"1742","severity":1,"message":"1743","line":30,"column":3,"nodeType":"1744","messageId":"1745","endLine":33,"endColumn":4},{"ruleId":"1742","severity":1,"message":"1767","line":25,"column":5,"nodeType":"1753","messageId":"1745","endLine":27,"endColumn":19},{"ruleId":"1742","severity":1,"message":"1768","line":29,"column":5,"nodeType":"1753","messageId":"1745","endLine":29,"endColumn":34},{"ruleId":"1742","severity":1,"message":"1769","line":37,"column":5,"nodeType":"1753","messageId":"1745","endLine":39,"endColumn":10},{"ruleId":"1770","severity":1,"message":"1771","line":53,"column":3,"nodeType":"1744","endLine":53,"endColumn":19},{"ruleId":"1772","severity":1,"message":"1773","line":53,"column":17,"nodeType":"1774","messageId":"1775"},{"ruleId":"1714","severity":1,"message":"1776","line":2,"column":3,"nodeType":"1716","endLine":2,"endColumn":28},{"ruleId":"1714","severity":1,"message":"1777","line":3,"column":3,"nodeType":"1716","endLine":3,"endColumn":41},{"ruleId":"1714","severity":1,"message":"1778","line":1,"column":10,"nodeType":"1716","endLine":1,"endColumn":39},{"ruleId":"1738","severity":1,"message":"1739","line":14,"column":6,"nodeType":"1740","messageId":"1741","endLine":14,"endColumn":9},{"ruleId":"1738","severity":1,"message":"1739","line":2,"column":7,"nodeType":"1740","messageId":"1741","endLine":2,"endColumn":10},{"ruleId":"1738","severity":1,"message":"1739","line":12,"column":12,"nodeType":"1740","messageId":"1741","endLine":12,"endColumn":15},{"ruleId":"1738","severity":1,"message":"1739","line":46,"column":28,"nodeType":"1740","messageId":"1741","endLine":46,"endColumn":31},{"ruleId":"1738","severity":1,"message":"1739","line":66,"column":28,"nodeType":"1740","messageId":"1741","endLine":66,"endColumn":31},{"ruleId":"1714","severity":1,"message":"1779","line":18,"column":3,"nodeType":"1716","endLine":18,"endColumn":28},{"ruleId":"1714","severity":1,"message":"1751","line":21,"column":10,"nodeType":"1716","endLine":21,"endColumn":20},{"ruleId":"1738","severity":1,"message":"1739","line":44,"column":58,"nodeType":"1740","messageId":"1741","endLine":44,"endColumn":61},{"ruleId":"1714","severity":1,"message":"1780","line":20,"column":10,"nodeType":"1716","endLine":20,"endColumn":30},{"ruleId":"1746","severity":1,"message":"1747","line":84,"column":14,"nodeType":"1748","messageId":"1749","endLine":84,"endColumn":19},{"ruleId":"1746","severity":1,"message":"1747","line":84,"column":14,"nodeType":"1748","messageId":"1749","endLine":84,"endColumn":18},{"ruleId":"1742","severity":1,"message":"1781","line":130,"column":3,"nodeType":"1744","messageId":"1745","endLine":134,"endColumn":4},{"ruleId":"1738","severity":1,"message":"1739","line":159,"column":29,"nodeType":"1740","messageId":"1741","endLine":159,"endColumn":32},{"ruleId":"1738","severity":1,"message":"1739","line":189,"column":29,"nodeType":"1740","messageId":"1741","endLine":189,"endColumn":32},{"ruleId":"1738","severity":1,"message":"1739","line":226,"column":20,"nodeType":"1740","messageId":"1741","endLine":226,"endColumn":23},{"ruleId":"1714","severity":1,"message":"1780","line":4,"column":10,"nodeType":"1716","endLine":4,"endColumn":30},{"ruleId":"1738","severity":1,"message":"1739","line":37,"column":32,"nodeType":"1740","messageId":"1741","endLine":37,"endColumn":35},{"ruleId":"1746","severity":1,"message":"1747","line":103,"column":13,"nodeType":"1748","messageId":"1749","endLine":103,"endColumn":23},{"ruleId":"1746","severity":1,"message":"1747","line":103,"column":13,"nodeType":"1748","messageId":"1749","endLine":103,"endColumn":22},{"ruleId":"1746","severity":1,"message":"1747","line":134,"column":13,"nodeType":"1748","messageId":"1749","endLine":134,"endColumn":23},{"ruleId":"1746","severity":1,"message":"1747","line":134,"column":13,"nodeType":"1748","messageId":"1749","endLine":134,"endColumn":22},{"ruleId":"1746","severity":1,"message":"1747","line":152,"column":30,"nodeType":"1748","messageId":"1749","endLine":152,"endColumn":40},{"ruleId":"1746","severity":1,"message":"1747","line":152,"column":30,"nodeType":"1748","messageId":"1749","endLine":152,"endColumn":39},{"ruleId":"1714","severity":1,"message":"1782","line":1,"column":13,"nodeType":"1716","endLine":1,"endColumn":21},{"ruleId":"1738","severity":1,"message":"1739","line":19,"column":58,"nodeType":"1740","messageId":"1741","endLine":19,"endColumn":61},{"ruleId":"1738","severity":1,"message":"1739","line":34,"column":13,"nodeType":"1740","messageId":"1741","endLine":34,"endColumn":16},{"ruleId":"1738","severity":1,"message":"1739","line":64,"column":13,"nodeType":"1740","messageId":"1741","endLine":64,"endColumn":16},{"ruleId":"1738","severity":1,"message":"1739","line":87,"column":15,"nodeType":"1740","messageId":"1741","endLine":87,"endColumn":18},{"ruleId":"1714","severity":1,"message":"1783","line":11,"column":3,"nodeType":"1716","endLine":11,"endColumn":23},{"ruleId":"1714","severity":1,"message":"1784","line":14,"column":3,"nodeType":"1716","endLine":14,"endColumn":45},{"ruleId":"1738","severity":1,"message":"1739","line":131,"column":30,"nodeType":"1740","messageId":"1741","endLine":131,"endColumn":33},{"ruleId":"1738","severity":1,"message":"1739","line":164,"column":28,"nodeType":"1740","messageId":"1741","endLine":164,"endColumn":31},{"ruleId":"1738","severity":1,"message":"1739","line":19,"column":45,"nodeType":"1740","messageId":"1741","endLine":19,"endColumn":48},{"ruleId":"1738","severity":1,"message":"1739","line":23,"column":6,"nodeType":"1740","messageId":"1741","endLine":23,"endColumn":9},{"ruleId":"1738","severity":1,"message":"1739","line":28,"column":6,"nodeType":"1740","messageId":"1741","endLine":28,"endColumn":9},{"ruleId":"1738","severity":1,"message":"1739","line":56,"column":6,"nodeType":"1740","messageId":"1741","endLine":56,"endColumn":9},{"ruleId":"1738","severity":1,"message":"1739","line":60,"column":6,"nodeType":"1740","messageId":"1741","endLine":60,"endColumn":9},{"ruleId":"1738","severity":1,"message":"1739","line":68,"column":34,"nodeType":"1740","messageId":"1741","endLine":68,"endColumn":37},{"ruleId":"1738","severity":1,"message":"1739","line":72,"column":58,"nodeType":"1740","messageId":"1741","endLine":72,"endColumn":61},{"ruleId":"1738","severity":1,"message":"1739","line":18,"column":62,"nodeType":"1740","messageId":"1741","endLine":18,"endColumn":65},{"ruleId":"1738","severity":1,"message":"1739","line":29,"column":22,"nodeType":"1740","messageId":"1741","endLine":29,"endColumn":25},{"ruleId":"1738","severity":1,"message":"1739","line":75,"column":22,"nodeType":"1740","messageId":"1741","endLine":75,"endColumn":25},{"ruleId":"1738","severity":1,"message":"1739","line":114,"column":38,"nodeType":"1740","messageId":"1741","endLine":114,"endColumn":41},{"ruleId":"1738","severity":1,"message":"1739","line":6,"column":16,"nodeType":"1740","messageId":"1741","endLine":6,"endColumn":19},{"ruleId":"1742","severity":1,"message":"1785","line":52,"column":3,"nodeType":"1753","messageId":"1745","endLine":52,"endColumn":38},{"ruleId":"1742","severity":1,"message":"1786","line":54,"column":3,"nodeType":"1753","messageId":"1745","endLine":54,"endColumn":47},{"ruleId":"1742","severity":1,"message":"1787","line":56,"column":3,"nodeType":"1753","messageId":"1745","endLine":56,"endColumn":43},{"ruleId":"1742","severity":1,"message":"1788","line":58,"column":3,"nodeType":"1753","messageId":"1745","endLine":58,"endColumn":37},{"ruleId":"1742","severity":1,"message":"1789","line":60,"column":3,"nodeType":"1753","messageId":"1745","endLine":60,"endColumn":59},{"ruleId":"1742","severity":1,"message":"1790","line":62,"column":3,"nodeType":"1753","messageId":"1745","endLine":62,"endColumn":74},{"ruleId":"1742","severity":1,"message":"1791","line":64,"column":3,"nodeType":"1753","messageId":"1745","endLine":66,"endColumn":79},{"ruleId":"1742","severity":1,"message":"1792","line":78,"column":3,"nodeType":"1753","messageId":"1745","endLine":80,"endColumn":79},{"ruleId":"1742","severity":1,"message":"1793","line":93,"column":3,"nodeType":"1753","messageId":"1745","endLine":95,"endColumn":79},{"ruleId":"1742","severity":1,"message":"1794","line":97,"column":3,"nodeType":"1753","messageId":"1745","endLine":97,"endColumn":54},{"ruleId":"1742","severity":1,"message":"1743","line":99,"column":3,"nodeType":"1744","messageId":"1745","endLine":123,"endColumn":4},{"ruleId":"1714","severity":1,"message":"1795","line":546,"column":38,"nodeType":"1716","endLine":546,"endColumn":44},{"ruleId":"1714","severity":1,"message":"1795","line":858,"column":38,"nodeType":"1716","endLine":858,"endColumn":44},{"ruleId":"1738","severity":1,"message":"1739","line":972,"column":34,"nodeType":"1740","messageId":"1741","endLine":972,"endColumn":37},{"ruleId":"1714","severity":1,"message":"1796","line":3,"column":3,"nodeType":"1716","endLine":3,"endColumn":28},{"ruleId":"1714","severity":1,"message":"1797","line":3,"column":8,"nodeType":"1716","endLine":3,"endColumn":20},{"ruleId":"1746","severity":1,"message":"1747","line":145,"column":26,"nodeType":"1748","messageId":"1749","endLine":145,"endColumn":39},{"ruleId":"1746","severity":1,"message":"1747","line":169,"column":26,"nodeType":"1748","messageId":"1749","endLine":169,"endColumn":39},{"ruleId":"1746","severity":1,"message":"1747","line":155,"column":26,"nodeType":"1748","messageId":"1749","endLine":155,"endColumn":39},{"ruleId":"1746","severity":1,"message":"1747","line":179,"column":26,"nodeType":"1748","messageId":"1749","endLine":179,"endColumn":39},{"ruleId":"1738","severity":1,"message":"1739","line":184,"column":37,"nodeType":"1740","messageId":"1741","endLine":184,"endColumn":40},{"ruleId":"1714","severity":1,"message":"1798","line":17,"column":22,"nodeType":"1716","endLine":17,"endColumn":30},{"ruleId":"1738","severity":1,"message":"1739","line":111,"column":30,"nodeType":"1740","messageId":"1741","endLine":111,"endColumn":33},{"ruleId":"1742","severity":1,"message":"1799","line":135,"column":3,"nodeType":"1753","messageId":"1745","endLine":136,"endColumn":77},{"ruleId":"1742","severity":1,"message":"1800","line":138,"column":3,"nodeType":"1753","messageId":"1745","endLine":138,"endColumn":62},{"ruleId":"1742","severity":1,"message":"1801","line":140,"column":3,"nodeType":"1753","messageId":"1745","endLine":140,"endColumn":25},{"ruleId":"1742","severity":1,"message":"1802","line":142,"column":3,"nodeType":"1753","messageId":"1745","endLine":142,"endColumn":56},{"ruleId":"1742","severity":1,"message":"1803","line":153,"column":3,"nodeType":"1753","messageId":"1745","endLine":153,"endColumn":63},{"ruleId":"1742","severity":1,"message":"1804","line":155,"column":3,"nodeType":"1753","messageId":"1745","endLine":155,"endColumn":60},{"ruleId":"1742","severity":1,"message":"1805","line":157,"column":3,"nodeType":"1753","messageId":"1745","endLine":159,"endColumn":5},{"ruleId":"1742","severity":1,"message":"1787","line":168,"column":3,"nodeType":"1753","messageId":"1745","endLine":168,"endColumn":43},{"ruleId":"1742","severity":1,"message":"1806","line":177,"column":3,"nodeType":"1753","messageId":"1745","endLine":177,"endColumn":27},{"ruleId":"1742","severity":1,"message":"1743","line":198,"column":3,"nodeType":"1744","messageId":"1745","endLine":202,"endColumn":4},{"ruleId":"1714","severity":1,"message":"1807","line":1,"column":10,"nodeType":"1716","endLine":1,"endColumn":64},{"ruleId":"1714","severity":1,"message":"1808","line":1,"column":8,"nodeType":"1716","endLine":1,"endColumn":17},{"ruleId":"1714","severity":1,"message":"1809","line":5,"column":3,"nodeType":"1716","endLine":5,"endColumn":70},{"ruleId":"1738","severity":1,"message":"1739","line":24,"column":40,"nodeType":"1740","messageId":"1741","endLine":24,"endColumn":43},{"ruleId":"1738","severity":1,"message":"1739","line":22,"column":20,"nodeType":"1740","messageId":"1741","endLine":22,"endColumn":23},{"ruleId":"1738","severity":1,"message":"1739","line":108,"column":38,"nodeType":"1740","messageId":"1741","endLine":108,"endColumn":41},{"ruleId":"1738","severity":1,"message":"1739","line":150,"column":46,"nodeType":"1740","messageId":"1741","endLine":150,"endColumn":49},{"ruleId":"1742","severity":1,"message":"1810","line":56,"column":3,"nodeType":"1753","messageId":"1745","endLine":56,"endColumn":49},{"ruleId":"1742","severity":1,"message":"1811","line":58,"column":3,"nodeType":"1753","messageId":"1745","endLine":58,"endColumn":45},{"ruleId":"1770","severity":1,"message":"1771","line":4,"column":3,"nodeType":"1744","endLine":4,"endColumn":70},{"ruleId":"1772","severity":1,"message":"1773","line":4,"column":68,"nodeType":"1774","messageId":"1775"},{"ruleId":"1714","severity":1,"message":"1812","line":1,"column":8,"nodeType":"1716","endLine":1,"endColumn":32},{"ruleId":"1742","severity":1,"message":"1813","line":44,"column":3,"nodeType":"1753","messageId":"1745","endLine":44,"endColumn":40},{"ruleId":"1742","severity":1,"message":"1814","line":46,"column":3,"nodeType":"1753","messageId":"1745","endLine":48,"endColumn":5},{"ruleId":"1742","severity":1,"message":"1815","line":50,"column":3,"nodeType":"1753","messageId":"1745","endLine":50,"endColumn":32},{"ruleId":"1742","severity":1,"message":"1816","line":52,"column":3,"nodeType":"1753","messageId":"1745","endLine":54,"endColumn":5},{"ruleId":"1742","severity":1,"message":"1743","line":56,"column":3,"nodeType":"1744","messageId":"1745","endLine":63,"endColumn":4},{"ruleId":"1738","severity":1,"message":"1739","line":161,"column":33,"nodeType":"1740","messageId":"1741","endLine":161,"endColumn":36},{"ruleId":"1742","severity":1,"message":"1817","line":216,"column":3,"nodeType":"1753","messageId":"1745","endLine":216,"endColumn":80},{"ruleId":"1742","severity":1,"message":"1818","line":218,"column":3,"nodeType":"1753","messageId":"1745","endLine":218,"endColumn":45},{"ruleId":"1742","severity":1,"message":"1819","line":220,"column":3,"nodeType":"1753","messageId":"1745","endLine":220,"endColumn":57},{"ruleId":"1738","severity":1,"message":"1739","line":268,"column":14,"nodeType":"1740","messageId":"1741","endLine":268,"endColumn":17},{"ruleId":"1746","severity":1,"message":"1747","line":271,"column":24,"nodeType":"1748","messageId":"1749","endLine":271,"endColumn":32},{"ruleId":"1746","severity":1,"message":"1747","line":289,"column":19,"nodeType":"1748","messageId":"1749","endLine":289,"endColumn":28},{"ruleId":"1738","severity":1,"message":"1739","line":292,"column":26,"nodeType":"1740","messageId":"1741","endLine":292,"endColumn":29},{"ruleId":"1746","severity":1,"message":"1747","line":511,"column":26,"nodeType":"1748","messageId":"1749","endLine":511,"endColumn":34},{"ruleId":"1742","severity":1,"message":"1820","line":42,"column":3,"nodeType":"1753","messageId":"1745","endLine":42,"endColumn":34},{"ruleId":"1742","severity":1,"message":"1743","line":44,"column":3,"nodeType":"1744","messageId":"1745","endLine":55,"endColumn":4},{"ruleId":"1738","severity":1,"message":"1739","line":84,"column":11,"nodeType":"1740","messageId":"1741","endLine":84,"endColumn":14},{"ruleId":"1746","severity":1,"message":"1747","line":94,"column":23,"nodeType":"1748","messageId":"1749","endLine":94,"endColumn":32},{"ruleId":"1746","severity":1,"message":"1747","line":100,"column":27,"nodeType":"1748","messageId":"1749","endLine":100,"endColumn":36},{"ruleId":"1738","severity":1,"message":"1739","line":100,"column":40,"nodeType":"1740","messageId":"1741","endLine":100,"endColumn":43},{"ruleId":"1772","severity":1,"message":"1821","line":157,"column":23,"nodeType":"1774","messageId":"1775"},{"ruleId":"1714","severity":1,"message":"1822","line":2,"column":10,"nodeType":"1716","endLine":2,"endColumn":26},{"ruleId":"1742","severity":1,"message":"1823","line":57,"column":3,"nodeType":"1753","messageId":"1745","endLine":57,"endColumn":66},{"ruleId":"1742","severity":1,"message":"1824","line":68,"column":3,"nodeType":"1753","messageId":"1745","endLine":68,"endColumn":35},{"ruleId":"1742","severity":1,"message":"1825","line":70,"column":3,"nodeType":"1753","messageId":"1745","endLine":70,"endColumn":36},{"ruleId":"1742","severity":1,"message":"1826","line":72,"column":3,"nodeType":"1753","messageId":"1745","endLine":72,"endColumn":33},{"ruleId":"1742","severity":1,"message":"1827","line":74,"column":3,"nodeType":"1753","messageId":"1745","endLine":74,"endColumn":90},{"ruleId":"1742","severity":1,"message":"1828","line":76,"column":3,"nodeType":"1753","messageId":"1745","endLine":76,"endColumn":28},{"ruleId":"1738","severity":1,"message":"1739","line":76,"column":24,"nodeType":"1740","messageId":"1741","endLine":76,"endColumn":27},{"ruleId":"1742","severity":1,"message":"1829","line":78,"column":3,"nodeType":"1753","messageId":"1745","endLine":78,"endColumn":78},{"ruleId":"1742","severity":1,"message":"1787","line":80,"column":3,"nodeType":"1753","messageId":"1745","endLine":82,"endColumn":5},{"ruleId":"1742","severity":1,"message":"1830","line":84,"column":3,"nodeType":"1753","messageId":"1745","endLine":84,"endColumn":25},{"ruleId":"1742","severity":1,"message":"1831","line":86,"column":3,"nodeType":"1753","messageId":"1745","endLine":86,"endColumn":31},{"ruleId":"1742","severity":1,"message":"1832","line":88,"column":3,"nodeType":"1753","messageId":"1745","endLine":90,"endColumn":12},{"ruleId":"1742","severity":1,"message":"1833","line":92,"column":3,"nodeType":"1753","messageId":"1745","endLine":92,"endColumn":41},{"ruleId":"1742","severity":1,"message":"1834","line":94,"column":3,"nodeType":"1753","messageId":"1745","endLine":94,"endColumn":72},{"ruleId":"1742","severity":1,"message":"1743","line":96,"column":3,"nodeType":"1744","messageId":"1745","endLine":103,"endColumn":4},{"ruleId":"1738","severity":1,"message":"1739","line":271,"column":22,"nodeType":"1740","messageId":"1741","endLine":271,"endColumn":25},{"ruleId":"1738","severity":1,"message":"1739","line":286,"column":42,"nodeType":"1740","messageId":"1741","endLine":286,"endColumn":45},{"ruleId":"1746","severity":1,"message":"1747","line":647,"column":7,"nodeType":"1748","messageId":"1749","endLine":647,"endColumn":19},{"ruleId":"1835","severity":1,"message":"1836","line":933,"column":13,"nodeType":"1837","endLine":933,"endColumn":33,"fix":"1838"},{"ruleId":"1714","severity":1,"message":"1839","line":3,"column":3,"nodeType":"1716","endLine":3,"endColumn":16},{"ruleId":"1714","severity":1,"message":"1840","line":4,"column":3,"nodeType":"1716","endLine":4,"endColumn":16},{"ruleId":"1714","severity":1,"message":"1841","line":5,"column":3,"nodeType":"1716","endLine":5,"endColumn":24},{"ruleId":"1714","severity":1,"message":"1842","line":6,"column":3,"nodeType":"1716","endLine":6,"endColumn":26},{"ruleId":"1714","severity":1,"message":"1843","line":7,"column":3,"nodeType":"1716","endLine":7,"endColumn":18},{"ruleId":"1714","severity":1,"message":"1844","line":8,"column":3,"nodeType":"1716","endLine":8,"endColumn":20},{"ruleId":"1714","severity":1,"message":"1845","line":9,"column":3,"nodeType":"1716","endLine":9,"endColumn":22},{"ruleId":"1714","severity":1,"message":"1846","line":11,"column":10,"nodeType":"1716","endLine":11,"endColumn":23},{"ruleId":"1714","severity":1,"message":"1847","line":13,"column":10,"nodeType":"1716","endLine":13,"endColumn":29},{"ruleId":"1714","severity":1,"message":"1848","line":23,"column":7,"nodeType":"1716","endLine":23,"endColumn":21},{"ruleId":"1714","severity":1,"message":"1849","line":3,"column":8,"nodeType":"1716","endLine":3,"endColumn":13},{"ruleId":"1738","severity":1,"message":"1739","line":15,"column":6,"nodeType":"1740","messageId":"1741","endLine":15,"endColumn":9},{"ruleId":"1738","severity":1,"message":"1739","line":25,"column":48,"nodeType":"1740","messageId":"1741","endLine":25,"endColumn":51},{"ruleId":"1742","severity":1,"message":"1850","line":10,"column":3,"nodeType":"1753","messageId":"1745","endLine":10,"endColumn":16},{"ruleId":"1738","severity":1,"message":"1739","line":15,"column":31,"nodeType":"1740","messageId":"1741","endLine":15,"endColumn":34},{"ruleId":"1738","severity":1,"message":"1739","line":16,"column":29,"nodeType":"1740","messageId":"1741","endLine":16,"endColumn":32},{"ruleId":"1738","severity":1,"message":"1739","line":21,"column":14,"nodeType":"1740","messageId":"1741","endLine":21,"endColumn":17},{"ruleId":"1738","severity":1,"message":"1739","line":24,"column":20,"nodeType":"1740","messageId":"1741","endLine":24,"endColumn":23},{"ruleId":"1738","severity":1,"message":"1739","line":28,"column":15,"nodeType":"1740","messageId":"1741","endLine":28,"endColumn":18},{"ruleId":"1738","severity":1,"message":"1739","line":29,"column":15,"nodeType":"1740","messageId":"1741","endLine":29,"endColumn":18},{"ruleId":"1742","severity":1,"message":"1851","line":33,"column":3,"nodeType":"1753","messageId":"1745","endLine":33,"endColumn":27},{"ruleId":"1742","severity":1,"message":"1852","line":34,"column":3,"nodeType":"1753","messageId":"1745","endLine":34,"endColumn":17},{"ruleId":"1742","severity":1,"message":"1853","line":35,"column":3,"nodeType":"1753","messageId":"1745","endLine":35,"endColumn":18},{"ruleId":"1738","severity":1,"message":"1739","line":35,"column":14,"nodeType":"1740","messageId":"1741","endLine":35,"endColumn":17},{"ruleId":"1742","severity":1,"message":"1854","line":36,"column":3,"nodeType":"1753","messageId":"1745","endLine":36,"endColumn":15},{"ruleId":"1738","severity":1,"message":"1739","line":36,"column":11,"nodeType":"1740","messageId":"1741","endLine":36,"endColumn":14},{"ruleId":"1742","severity":1,"message":"1855","line":37,"column":3,"nodeType":"1753","messageId":"1745","endLine":37,"endColumn":14},{"ruleId":"1738","severity":1,"message":"1739","line":37,"column":10,"nodeType":"1740","messageId":"1741","endLine":37,"endColumn":13},{"ruleId":"1742","severity":1,"message":"1856","line":38,"column":3,"nodeType":"1753","messageId":"1745","endLine":38,"endColumn":21},{"ruleId":"1742","severity":1,"message":"1857","line":39,"column":3,"nodeType":"1753","messageId":"1745","endLine":39,"endColumn":15},{"ruleId":"1742","severity":1,"message":"1858","line":40,"column":3,"nodeType":"1753","messageId":"1745","endLine":40,"endColumn":15},{"ruleId":"1738","severity":1,"message":"1739","line":40,"column":11,"nodeType":"1740","messageId":"1741","endLine":40,"endColumn":14},{"ruleId":"1742","severity":1,"message":"1859","line":41,"column":3,"nodeType":"1753","messageId":"1745","endLine":41,"endColumn":19},{"ruleId":"1742","severity":1,"message":"1860","line":42,"column":3,"nodeType":"1753","messageId":"1745","endLine":42,"endColumn":19},{"ruleId":"1742","severity":1,"message":"1861","line":43,"column":3,"nodeType":"1753","messageId":"1745","endLine":43,"endColumn":20},{"ruleId":"1742","severity":1,"message":"1862","line":48,"column":3,"nodeType":"1753","messageId":"1745","endLine":48,"endColumn":18},{"ruleId":"1738","severity":1,"message":"1739","line":58,"column":18,"nodeType":"1740","messageId":"1741","endLine":58,"endColumn":21},{"ruleId":"1738","severity":1,"message":"1739","line":60,"column":12,"nodeType":"1740","messageId":"1741","endLine":60,"endColumn":15},{"ruleId":"1738","severity":1,"message":"1739","line":73,"column":25,"nodeType":"1740","messageId":"1741","endLine":73,"endColumn":28},{"ruleId":"1738","severity":1,"message":"1739","line":74,"column":19,"nodeType":"1740","messageId":"1741","endLine":74,"endColumn":22},{"ruleId":"1738","severity":1,"message":"1739","line":77,"column":11,"nodeType":"1740","messageId":"1741","endLine":77,"endColumn":14},{"ruleId":"1738","severity":1,"message":"1739","line":78,"column":20,"nodeType":"1740","messageId":"1741","endLine":78,"endColumn":23},{"ruleId":"1738","severity":1,"message":"1739","line":79,"column":13,"nodeType":"1740","messageId":"1741","endLine":79,"endColumn":16},{"ruleId":"1738","severity":1,"message":"1739","line":100,"column":57,"nodeType":"1740","messageId":"1741","endLine":100,"endColumn":60},{"ruleId":"1738","severity":1,"message":"1739","line":102,"column":20,"nodeType":"1740","messageId":"1741","endLine":102,"endColumn":23},{"ruleId":"1738","severity":1,"message":"1739","line":102,"column":44,"nodeType":"1740","messageId":"1741","endLine":102,"endColumn":47},{"ruleId":"1738","severity":1,"message":"1739","line":103,"column":30,"nodeType":"1740","messageId":"1741","endLine":103,"endColumn":33},{"ruleId":"1738","severity":1,"message":"1739","line":109,"column":42,"nodeType":"1740","messageId":"1741","endLine":109,"endColumn":45},{"ruleId":"1738","severity":1,"message":"1739","line":130,"column":28,"nodeType":"1740","messageId":"1741","endLine":130,"endColumn":31},{"ruleId":"1738","severity":1,"message":"1739","line":130,"column":52,"nodeType":"1740","messageId":"1741","endLine":130,"endColumn":55},{"ruleId":"1738","severity":1,"message":"1739","line":131,"column":38,"nodeType":"1740","messageId":"1741","endLine":131,"endColumn":41},{"ruleId":"1738","severity":1,"message":"1739","line":133,"column":29,"nodeType":"1740","messageId":"1741","endLine":133,"endColumn":32},{"ruleId":"1738","severity":1,"message":"1739","line":133,"column":35,"nodeType":"1740","messageId":"1741","endLine":133,"endColumn":38},{"ruleId":"1738","severity":1,"message":"1739","line":135,"column":35,"nodeType":"1740","messageId":"1741","endLine":135,"endColumn":38},{"ruleId":"1738","severity":1,"message":"1739","line":136,"column":35,"nodeType":"1740","messageId":"1741","endLine":136,"endColumn":38},{"ruleId":"1738","severity":1,"message":"1739","line":146,"column":47,"nodeType":"1740","messageId":"1741","endLine":146,"endColumn":50},{"ruleId":"1738","severity":1,"message":"1739","line":154,"column":22,"nodeType":"1740","messageId":"1741","endLine":154,"endColumn":25},{"ruleId":"1738","severity":1,"message":"1739","line":180,"column":57,"nodeType":"1740","messageId":"1741","endLine":180,"endColumn":60},{"ruleId":"1738","severity":1,"message":"1739","line":181,"column":47,"nodeType":"1740","messageId":"1741","endLine":181,"endColumn":50},{"ruleId":"1738","severity":1,"message":"1739","line":183,"column":60,"nodeType":"1740","messageId":"1741","endLine":183,"endColumn":63},{"ruleId":"1738","severity":1,"message":"1739","line":184,"column":50,"nodeType":"1740","messageId":"1741","endLine":184,"endColumn":53},{"ruleId":"1738","severity":1,"message":"1739","line":189,"column":23,"nodeType":"1740","messageId":"1741","endLine":189,"endColumn":26},{"ruleId":"1738","severity":1,"message":"1739","line":190,"column":23,"nodeType":"1740","messageId":"1741","endLine":190,"endColumn":26},{"ruleId":"1738","severity":1,"message":"1739","line":191,"column":36,"nodeType":"1740","messageId":"1741","endLine":191,"endColumn":39},{"ruleId":"1738","severity":1,"message":"1739","line":192,"column":49,"nodeType":"1740","messageId":"1741","endLine":192,"endColumn":52},{"ruleId":"1738","severity":1,"message":"1739","line":204,"column":9,"nodeType":"1740","messageId":"1741","endLine":204,"endColumn":12},{"ruleId":"1738","severity":1,"message":"1739","line":208,"column":9,"nodeType":"1740","messageId":"1741","endLine":208,"endColumn":12},{"ruleId":"1738","severity":1,"message":"1739","line":216,"column":24,"nodeType":"1740","messageId":"1741","endLine":216,"endColumn":27},{"ruleId":"1738","severity":1,"message":"1739","line":222,"column":14,"nodeType":"1740","messageId":"1741","endLine":222,"endColumn":17},{"ruleId":"1738","severity":1,"message":"1739","line":223,"column":67,"nodeType":"1740","messageId":"1741","endLine":223,"endColumn":70},{"ruleId":"1738","severity":1,"message":"1739","line":224,"column":57,"nodeType":"1740","messageId":"1741","endLine":224,"endColumn":60},{"ruleId":"1738","severity":1,"message":"1739","line":230,"column":24,"nodeType":"1740","messageId":"1741","endLine":230,"endColumn":27},{"ruleId":"1738","severity":1,"message":"1739","line":236,"column":14,"nodeType":"1740","messageId":"1741","endLine":236,"endColumn":17},{"ruleId":"1738","severity":1,"message":"1739","line":240,"column":24,"nodeType":"1740","messageId":"1741","endLine":240,"endColumn":27},{"ruleId":"1738","severity":1,"message":"1739","line":242,"column":62,"nodeType":"1740","messageId":"1741","endLine":242,"endColumn":65},{"ruleId":"1738","severity":1,"message":"1739","line":246,"column":11,"nodeType":"1740","messageId":"1741","endLine":246,"endColumn":14},{"ruleId":"1738","severity":1,"message":"1739","line":248,"column":24,"nodeType":"1740","messageId":"1741","endLine":248,"endColumn":27},{"ruleId":"1738","severity":1,"message":"1739","line":252,"column":11,"nodeType":"1740","messageId":"1741","endLine":252,"endColumn":14},{"ruleId":"1738","severity":1,"message":"1739","line":254,"column":14,"nodeType":"1740","messageId":"1741","endLine":254,"endColumn":17},{"ruleId":"1738","severity":1,"message":"1739","line":255,"column":42,"nodeType":"1740","messageId":"1741","endLine":255,"endColumn":45},{"ruleId":"1738","severity":1,"message":"1739","line":255,"column":66,"nodeType":"1740","messageId":"1741","endLine":255,"endColumn":69},{"ruleId":"1738","severity":1,"message":"1739","line":256,"column":42,"nodeType":"1740","messageId":"1741","endLine":256,"endColumn":45},{"ruleId":"1738","severity":1,"message":"1739","line":256,"column":56,"nodeType":"1740","messageId":"1741","endLine":256,"endColumn":59},{"ruleId":"1738","severity":1,"message":"1739","line":260,"column":11,"nodeType":"1740","messageId":"1741","endLine":260,"endColumn":14},{"ruleId":"1738","severity":1,"message":"1739","line":262,"column":24,"nodeType":"1740","messageId":"1741","endLine":262,"endColumn":27},{"ruleId":"1738","severity":1,"message":"1739","line":266,"column":11,"nodeType":"1740","messageId":"1741","endLine":266,"endColumn":14},{"ruleId":"1738","severity":1,"message":"1739","line":268,"column":14,"nodeType":"1740","messageId":"1741","endLine":268,"endColumn":17},{"ruleId":"1738","severity":1,"message":"1739","line":269,"column":39,"nodeType":"1740","messageId":"1741","endLine":269,"endColumn":42},{"ruleId":"1738","severity":1,"message":"1739","line":269,"column":63,"nodeType":"1740","messageId":"1741","endLine":269,"endColumn":66},{"ruleId":"1738","severity":1,"message":"1739","line":270,"column":39,"nodeType":"1740","messageId":"1741","endLine":270,"endColumn":42},{"ruleId":"1738","severity":1,"message":"1739","line":270,"column":53,"nodeType":"1740","messageId":"1741","endLine":270,"endColumn":56},{"ruleId":"1738","severity":1,"message":"1739","line":278,"column":63,"nodeType":"1740","messageId":"1741","endLine":278,"endColumn":66},{"ruleId":"1738","severity":1,"message":"1739","line":279,"column":53,"nodeType":"1740","messageId":"1741","endLine":279,"endColumn":56},{"ruleId":"1738","severity":1,"message":"1739","line":280,"column":36,"nodeType":"1740","messageId":"1741","endLine":280,"endColumn":39},{"ruleId":"1738","severity":1,"message":"1739","line":281,"column":26,"nodeType":"1740","messageId":"1741","endLine":281,"endColumn":29},{"ruleId":"1738","severity":1,"message":"1739","line":286,"column":24,"nodeType":"1740","messageId":"1741","endLine":286,"endColumn":27},{"ruleId":"1738","severity":1,"message":"1739","line":288,"column":65,"nodeType":"1740","messageId":"1741","endLine":288,"endColumn":68},{"ruleId":"1738","severity":1,"message":"1739","line":289,"column":48,"nodeType":"1740","messageId":"1741","endLine":289,"endColumn":51},{"ruleId":"1738","severity":1,"message":"1739","line":290,"column":38,"nodeType":"1740","messageId":"1741","endLine":290,"endColumn":41},{"ruleId":"1738","severity":1,"message":"1739","line":295,"column":24,"nodeType":"1740","messageId":"1741","endLine":295,"endColumn":27},{"ruleId":"1738","severity":1,"message":"1739","line":297,"column":66,"nodeType":"1740","messageId":"1741","endLine":297,"endColumn":69},{"ruleId":"1738","severity":1,"message":"1739","line":298,"column":49,"nodeType":"1740","messageId":"1741","endLine":298,"endColumn":52},{"ruleId":"1738","severity":1,"message":"1739","line":299,"column":39,"nodeType":"1740","messageId":"1741","endLine":299,"endColumn":42},{"ruleId":"1738","severity":1,"message":"1739","line":323,"column":16,"nodeType":"1740","messageId":"1741","endLine":323,"endColumn":19},{"ruleId":"1738","severity":1,"message":"1739","line":323,"column":30,"nodeType":"1740","messageId":"1741","endLine":323,"endColumn":33},{"ruleId":"1738","severity":1,"message":"1739","line":323,"column":54,"nodeType":"1740","messageId":"1741","endLine":323,"endColumn":57},{"ruleId":"1738","severity":1,"message":"1739","line":324,"column":16,"nodeType":"1740","messageId":"1741","endLine":324,"endColumn":19},{"ruleId":"1738","severity":1,"message":"1739","line":324,"column":30,"nodeType":"1740","messageId":"1741","endLine":324,"endColumn":33},{"ruleId":"1738","severity":1,"message":"1739","line":324,"column":44,"nodeType":"1740","messageId":"1741","endLine":324,"endColumn":47},{"ruleId":"1738","severity":1,"message":"1739","line":329,"column":14,"nodeType":"1740","messageId":"1741","endLine":329,"endColumn":17},{"ruleId":"1738","severity":1,"message":"1739","line":330,"column":24,"nodeType":"1740","messageId":"1741","endLine":330,"endColumn":27},{"ruleId":"1738","severity":1,"message":"1739","line":332,"column":49,"nodeType":"1740","messageId":"1741","endLine":332,"endColumn":52},{"ruleId":"1738","severity":1,"message":"1739","line":332,"column":63,"nodeType":"1740","messageId":"1741","endLine":332,"endColumn":66},{"ruleId":"1738","severity":1,"message":"1739","line":333,"column":59,"nodeType":"1740","messageId":"1741","endLine":333,"endColumn":62},{"ruleId":"1738","severity":1,"message":"1739","line":334,"column":49,"nodeType":"1740","messageId":"1741","endLine":334,"endColumn":52},{"ruleId":"1738","severity":1,"message":"1739","line":335,"column":45,"nodeType":"1740","messageId":"1741","endLine":335,"endColumn":48},{"ruleId":"1738","severity":1,"message":"1739","line":336,"column":35,"nodeType":"1740","messageId":"1741","endLine":336,"endColumn":38},{"ruleId":"1738","severity":1,"message":"1739","line":341,"column":14,"nodeType":"1740","messageId":"1741","endLine":341,"endColumn":17},{"ruleId":"1738","severity":1,"message":"1739","line":342,"column":24,"nodeType":"1740","messageId":"1741","endLine":342,"endColumn":27},{"ruleId":"1738","severity":1,"message":"1739","line":344,"column":50,"nodeType":"1740","messageId":"1741","endLine":344,"endColumn":53},{"ruleId":"1738","severity":1,"message":"1739","line":344,"column":64,"nodeType":"1740","messageId":"1741","endLine":344,"endColumn":67},{"ruleId":"1738","severity":1,"message":"1739","line":345,"column":60,"nodeType":"1740","messageId":"1741","endLine":345,"endColumn":63},{"ruleId":"1738","severity":1,"message":"1739","line":346,"column":50,"nodeType":"1740","messageId":"1741","endLine":346,"endColumn":53},{"ruleId":"1738","severity":1,"message":"1739","line":347,"column":36,"nodeType":"1740","messageId":"1741","endLine":347,"endColumn":39},{"ruleId":"1738","severity":1,"message":"1739","line":347,"column":60,"nodeType":"1740","messageId":"1741","endLine":347,"endColumn":63},{"ruleId":"1738","severity":1,"message":"1739","line":348,"column":36,"nodeType":"1740","messageId":"1741","endLine":348,"endColumn":39},{"ruleId":"1738","severity":1,"message":"1739","line":348,"column":50,"nodeType":"1740","messageId":"1741","endLine":348,"endColumn":53},{"ruleId":"1738","severity":1,"message":"1739","line":349,"column":46,"nodeType":"1740","messageId":"1741","endLine":349,"endColumn":49},{"ruleId":"1738","severity":1,"message":"1739","line":350,"column":36,"nodeType":"1740","messageId":"1741","endLine":350,"endColumn":39},{"ruleId":"1738","severity":1,"message":"1739","line":355,"column":34,"nodeType":"1740","messageId":"1741","endLine":355,"endColumn":37},{"ruleId":"1738","severity":1,"message":"1739","line":368,"column":24,"nodeType":"1740","messageId":"1741","endLine":368,"endColumn":27},{"ruleId":"1738","severity":1,"message":"1739","line":386,"column":24,"nodeType":"1740","messageId":"1741","endLine":386,"endColumn":27},{"ruleId":"1738","severity":1,"message":"1739","line":388,"column":60,"nodeType":"1740","messageId":"1741","endLine":388,"endColumn":63},{"ruleId":"1738","severity":1,"message":"1739","line":390,"column":25,"nodeType":"1740","messageId":"1741","endLine":390,"endColumn":28},{"ruleId":"1738","severity":1,"message":"1739","line":391,"column":17,"nodeType":"1740","messageId":"1741","endLine":391,"endColumn":20},{"ruleId":"1738","severity":1,"message":"1739","line":393,"column":49,"nodeType":"1740","messageId":"1741","endLine":393,"endColumn":52},{"ruleId":"1738","severity":1,"message":"1739","line":394,"column":39,"nodeType":"1740","messageId":"1741","endLine":394,"endColumn":42},{"ruleId":"1738","severity":1,"message":"1739","line":407,"column":19,"nodeType":"1740","messageId":"1741","endLine":407,"endColumn":22},{"ruleId":"1738","severity":1,"message":"1739","line":420,"column":47,"nodeType":"1740","messageId":"1741","endLine":420,"endColumn":50},{"ruleId":"1738","severity":1,"message":"1739","line":430,"column":56,"nodeType":"1740","messageId":"1741","endLine":430,"endColumn":59},{"ruleId":"1738","severity":1,"message":"1739","line":431,"column":46,"nodeType":"1740","messageId":"1741","endLine":431,"endColumn":49},{"ruleId":"1742","severity":1,"message":"1863","line":82,"column":5,"nodeType":"1753","messageId":"1745","endLine":82,"endColumn":26},{"ruleId":"1738","severity":1,"message":"1739","line":8,"column":23,"nodeType":"1740","messageId":"1741","endLine":8,"endColumn":26},{"ruleId":"1738","severity":1,"message":"1739","line":15,"column":23,"nodeType":"1740","messageId":"1741","endLine":15,"endColumn":26},{"ruleId":"1738","severity":1,"message":"1739","line":16,"column":21,"nodeType":"1740","messageId":"1741","endLine":16,"endColumn":24},{"ruleId":"1738","severity":1,"message":"1739","line":40,"column":25,"nodeType":"1740","messageId":"1741","endLine":40,"endColumn":28},{"ruleId":"1738","severity":1,"message":"1739","line":48,"column":18,"nodeType":"1740","messageId":"1741","endLine":48,"endColumn":21},{"ruleId":"1738","severity":1,"message":"1739","line":1,"column":37,"nodeType":"1740","messageId":"1741","endLine":1,"endColumn":40},{"ruleId":"1738","severity":1,"message":"1739","line":5,"column":34,"nodeType":"1740","messageId":"1741","endLine":5,"endColumn":37},{"ruleId":"1714","severity":1,"message":"1864","line":23,"column":3,"nodeType":"1716","endLine":23,"endColumn":8},{"ruleId":"1714","severity":1,"message":"1865","line":24,"column":3,"nodeType":"1716","endLine":24,"endColumn":9},{"ruleId":"1738","severity":1,"message":"1739","line":32,"column":8,"nodeType":"1740","messageId":"1741","endLine":32,"endColumn":11},{"ruleId":"1714","severity":1,"message":"1866","line":11,"column":24,"nodeType":"1716","endLine":11,"endColumn":33},{"ruleId":"1714","severity":1,"message":"1867","line":4,"column":3,"nodeType":"1716","endLine":4,"endColumn":21},{"ruleId":"1738","severity":1,"message":"1739","line":10,"column":41,"nodeType":"1740","messageId":"1741","endLine":10,"endColumn":44},{"ruleId":"1738","severity":1,"message":"1739","line":14,"column":41,"nodeType":"1740","messageId":"1741","endLine":14,"endColumn":44},{"ruleId":"1738","severity":1,"message":"1739","line":20,"column":44,"nodeType":"1740","messageId":"1741","endLine":20,"endColumn":47},{"ruleId":"1738","severity":1,"message":"1739","line":24,"column":43,"nodeType":"1740","messageId":"1741","endLine":24,"endColumn":46},{"ruleId":"1738","severity":1,"message":"1739","line":28,"column":47,"nodeType":"1740","messageId":"1741","endLine":28,"endColumn":50},{"ruleId":"1738","severity":1,"message":"1739","line":7,"column":32,"nodeType":"1740","messageId":"1741","endLine":7,"endColumn":35},{"ruleId":"1738","severity":1,"message":"1739","line":9,"column":42,"nodeType":"1740","messageId":"1741","endLine":9,"endColumn":45},{"ruleId":"1738","severity":1,"message":"1739","line":17,"column":58,"nodeType":"1740","messageId":"1741","endLine":17,"endColumn":61},{"ruleId":"1738","severity":1,"message":"1739","line":50,"column":8,"nodeType":"1740","messageId":"1741","endLine":50,"endColumn":11},{"ruleId":"1738","severity":1,"message":"1739","line":73,"column":36,"nodeType":"1740","messageId":"1741","endLine":73,"endColumn":39},{"ruleId":"1738","severity":1,"message":"1739","line":76,"column":35,"nodeType":"1740","messageId":"1741","endLine":76,"endColumn":38},{"ruleId":"1714","severity":1,"message":"1866","line":14,"column":24,"nodeType":"1716","endLine":14,"endColumn":33},{"ruleId":"1738","severity":1,"message":"1739","line":23,"column":8,"nodeType":"1740","messageId":"1741","endLine":23,"endColumn":11},{"ruleId":"1714","severity":1,"message":"1868","line":5,"column":3,"nodeType":"1716","endLine":5,"endColumn":51},{"ruleId":"1714","severity":1,"message":"1869","line":21,"column":3,"nodeType":"1716","endLine":21,"endColumn":69},{"ruleId":"1714","severity":1,"message":"1870","line":3,"column":3,"nodeType":"1716","endLine":3,"endColumn":68},{"ruleId":"1714","severity":1,"message":"1871","line":12,"column":3,"nodeType":"1716","endLine":12,"endColumn":33},{"ruleId":"1714","severity":1,"message":"1872","line":1,"column":10,"nodeType":"1716","endLine":1,"endColumn":38},{"ruleId":"1714","severity":1,"message":"1873","line":2,"column":10,"nodeType":"1716","endLine":2,"endColumn":22},{"ruleId":"1738","severity":1,"message":"1739","line":7,"column":66,"nodeType":"1740","messageId":"1741","endLine":7,"endColumn":69},{"ruleId":"1738","severity":1,"message":"1739","line":16,"column":57,"nodeType":"1740","messageId":"1741","endLine":16,"endColumn":60},{"ruleId":"1738","severity":1,"message":"1739","line":135,"column":13,"nodeType":"1740","messageId":"1741","endLine":135,"endColumn":16},{"ruleId":"1874","severity":2,"message":"1875","line":285,"column":21,"nodeType":"1876","messageId":"1877","endLine":285,"endColumn":55,"fix":"1878"},{"ruleId":"1874","severity":2,"message":"1875","line":305,"column":21,"nodeType":"1876","messageId":"1877","endLine":305,"endColumn":55,"fix":"1879"},{"ruleId":"1714","severity":1,"message":"1880","line":1,"column":10,"nodeType":"1716","endLine":1,"endColumn":35},{"ruleId":"1881","severity":1,"message":"1882","line":9,"column":50,"nodeType":"1883","messageId":"1884","endLine":9,"endColumn":61},{"ruleId":"1881","severity":1,"message":"1882","line":6,"column":50,"nodeType":"1883","messageId":"1884","endLine":6,"endColumn":61},{"ruleId":"1738","severity":1,"message":"1739","line":68,"column":27,"nodeType":"1740","messageId":"1741","endLine":68,"endColumn":30},{"ruleId":"1881","severity":1,"message":"1882","line":16,"column":55,"nodeType":"1883","messageId":"1884","endLine":16,"endColumn":66},{"ruleId":"1885","severity":1,"message":"1886","line":36,"column":7,"nodeType":"1887","endLine":36,"endColumn":78},{"ruleId":"1885","severity":1,"message":"1886","line":41,"column":5,"nodeType":"1887","endLine":41,"endColumn":78},{"ruleId":"1881","severity":1,"message":"1882","line":54,"column":44,"nodeType":"1883","messageId":"1884","endLine":54,"endColumn":55},{"ruleId":"1881","severity":1,"message":"1882","line":107,"column":91,"nodeType":"1883","messageId":"1884","endLine":107,"endColumn":102},{"ruleId":"1714","severity":1,"message":"1888","line":108,"column":9,"nodeType":"1716","endLine":108,"endColumn":20},{"ruleId":"1881","severity":1,"message":"1882","line":5,"column":41,"nodeType":"1883","messageId":"1884","endLine":5,"endColumn":46},{"ruleId":"1881","severity":1,"message":"1882","line":111,"column":52,"nodeType":"1883","messageId":"1884","endLine":111,"endColumn":63},{"ruleId":"1881","severity":1,"message":"1882","line":11,"column":43,"nodeType":"1883","messageId":"1884","endLine":11,"endColumn":54},{"ruleId":"1881","severity":1,"message":"1882","line":4,"column":28,"nodeType":"1883","messageId":"1884","endLine":4,"endColumn":39},{"ruleId":"1881","severity":1,"message":"1882","line":7,"column":40,"nodeType":"1883","messageId":"1884","endLine":7,"endColumn":51},{"ruleId":"1738","severity":1,"message":"1739","line":19,"column":25,"nodeType":"1740","messageId":"1741","endLine":19,"endColumn":28},{"ruleId":"1881","severity":1,"message":"1882","line":4,"column":8,"nodeType":"1889","messageId":"1884","endLine":4,"endColumn":37},{"ruleId":"1881","severity":1,"message":"1882","line":6,"column":43,"nodeType":"1883","messageId":"1884","endLine":6,"endColumn":54},{"ruleId":"1890","severity":2,"message":"1891","line":15,"column":16,"nodeType":"1892","messageId":"1893","endLine":15,"endColumn":34},{"ruleId":"1881","severity":1,"message":"1882","line":8,"column":39,"nodeType":"1883","messageId":"1884","endLine":8,"endColumn":50},{"ruleId":"1890","severity":2,"message":"1891","line":15,"column":14,"nodeType":"1892","messageId":"1893","endLine":15,"endColumn":39},{"ruleId":"1890","severity":2,"message":"1891","line":36,"column":14,"nodeType":"1892","messageId":"1893","endLine":36,"endColumn":39},{"ruleId":null,"fatal":true,"severity":2,"message":"1894"},{"ruleId":"1714","severity":1,"message":"1895","line":3,"column":3,"nodeType":"1716","endLine":3,"endColumn":30},{"ruleId":"1714","severity":1,"message":"1896","line":4,"column":3,"nodeType":"1716","endLine":4,"endColumn":20},{"ruleId":"1714","severity":1,"message":"1897","line":7,"column":3,"nodeType":"1716","endLine":7,"endColumn":27},{"ruleId":"1714","severity":1,"message":"1898","line":12,"column":3,"nodeType":"1716","endLine":12,"endColumn":27},{"ruleId":"1881","severity":1,"message":"1882","line":17,"column":27,"nodeType":"1883","messageId":"1884","endLine":17,"endColumn":38},{"ruleId":"1881","severity":1,"message":"1882","line":4,"column":40,"nodeType":"1883","messageId":"1884","endLine":4,"endColumn":51},{"ruleId":"1881","severity":1,"message":"1882","line":40,"column":39,"nodeType":"1883","messageId":"1884","endLine":40,"endColumn":50},{"ruleId":"1881","severity":1,"message":"1882","line":79,"column":24,"nodeType":"1883","messageId":"1884","endLine":79,"endColumn":35},{"ruleId":"1881","severity":1,"message":"1882","line":3,"column":24,"nodeType":"1883","messageId":"1884","endLine":3,"endColumn":35},{"ruleId":"1881","severity":1,"message":"1882","line":21,"column":21,"nodeType":"1883","messageId":"1884","endLine":21,"endColumn":42},{"ruleId":"1881","severity":1,"message":"1882","line":29,"column":1,"nodeType":"1889","messageId":"1884","endLine":29,"endColumn":36},{"ruleId":"1881","severity":1,"message":"1882","line":31,"column":29,"nodeType":"1883","messageId":"1884","endLine":34,"endColumn":5},{"ruleId":"1714","severity":1,"message":"1899","line":35,"column":11,"nodeType":"1716","endLine":35,"endColumn":20},{"ruleId":"1738","severity":1,"message":"1739","line":50,"column":64,"nodeType":"1740","messageId":"1741","endLine":50,"endColumn":67},{"ruleId":"1881","severity":1,"message":"1882","line":69,"column":44,"nodeType":"1883","messageId":"1884","endLine":72,"endColumn":5},{"ruleId":"1738","severity":1,"message":"1739","line":93,"column":68,"nodeType":"1740","messageId":"1741","endLine":93,"endColumn":71},{"ruleId":"1881","severity":1,"message":"1882","line":113,"column":51,"nodeType":"1883","messageId":"1884","endLine":113,"endColumn":75},{"ruleId":"1890","severity":2,"message":"1891","line":138,"column":24,"nodeType":"1892","messageId":"1893","endLine":138,"endColumn":42},{"ruleId":"1900","severity":2,"message":"1901","line":141,"column":21,"nodeType":"1716","messageId":"1902","endLine":141,"endColumn":43,"fix":"1903"},{"ruleId":"1746","severity":1,"message":"1747","line":155,"column":27,"nodeType":"1748","messageId":"1749","endLine":155,"endColumn":42},{"ruleId":"1890","severity":2,"message":"1891","line":208,"column":24,"nodeType":"1892","messageId":"1893","endLine":208,"endColumn":42},{"ruleId":"1900","severity":2,"message":"1901","line":211,"column":21,"nodeType":"1716","messageId":"1902","endLine":211,"endColumn":43,"fix":"1904"},{"ruleId":"1746","severity":1,"message":"1747","line":225,"column":27,"nodeType":"1748","messageId":"1749","endLine":225,"endColumn":42},{"ruleId":"1738","severity":1,"message":"1739","line":299,"column":97,"nodeType":"1740","messageId":"1741","endLine":299,"endColumn":100},{"ruleId":"1890","severity":2,"message":"1891","line":303,"column":24,"nodeType":"1892","messageId":"1893","endLine":303,"endColumn":42},{"ruleId":"1900","severity":2,"message":"1901","line":306,"column":21,"nodeType":"1716","messageId":"1902","endLine":306,"endColumn":43,"fix":"1905"},{"ruleId":"1746","severity":1,"message":"1747","line":320,"column":27,"nodeType":"1748","messageId":"1749","endLine":320,"endColumn":42},{"ruleId":"1738","severity":1,"message":"1739","line":347,"column":119,"nodeType":"1740","messageId":"1741","endLine":347,"endColumn":122},{"ruleId":"1890","severity":2,"message":"1891","line":351,"column":24,"nodeType":"1892","messageId":"1893","endLine":351,"endColumn":42},{"ruleId":"1900","severity":2,"message":"1901","line":354,"column":21,"nodeType":"1716","messageId":"1902","endLine":354,"endColumn":43,"fix":"1906"},{"ruleId":"1746","severity":1,"message":"1747","line":368,"column":27,"nodeType":"1748","messageId":"1749","endLine":368,"endColumn":42},{"ruleId":"1738","severity":1,"message":"1739","line":395,"column":138,"nodeType":"1740","messageId":"1741","endLine":395,"endColumn":141},{"ruleId":"1890","severity":2,"message":"1891","line":399,"column":24,"nodeType":"1892","messageId":"1893","endLine":399,"endColumn":42},{"ruleId":"1900","severity":2,"message":"1901","line":402,"column":21,"nodeType":"1716","messageId":"1902","endLine":402,"endColumn":43,"fix":"1907"},{"ruleId":"1746","severity":1,"message":"1747","line":416,"column":27,"nodeType":"1748","messageId":"1749","endLine":416,"endColumn":42},{"ruleId":"1738","severity":1,"message":"1739","line":469,"column":138,"nodeType":"1740","messageId":"1741","endLine":469,"endColumn":141},{"ruleId":"1890","severity":2,"message":"1891","line":473,"column":24,"nodeType":"1892","messageId":"1893","endLine":473,"endColumn":42},{"ruleId":"1900","severity":2,"message":"1901","line":476,"column":21,"nodeType":"1716","messageId":"1902","endLine":476,"endColumn":43,"fix":"1908"},{"ruleId":"1746","severity":1,"message":"1747","line":490,"column":27,"nodeType":"1748","messageId":"1749","endLine":490,"endColumn":42},{"ruleId":"1881","severity":1,"message":"1882","line":539,"column":5,"nodeType":"1889","messageId":"1884","endLine":539,"endColumn":99},{"ruleId":"1874","severity":2,"message":"1875","line":549,"column":16,"nodeType":"1748","messageId":"1877","endLine":549,"endColumn":22,"fix":"1909"},{"ruleId":"1746","severity":1,"message":"1747","line":549,"column":16,"nodeType":"1748","messageId":"1749","endLine":549,"endColumn":22},{"ruleId":"1874","severity":2,"message":"1875","line":550,"column":22,"nodeType":"1748","messageId":"1877","endLine":550,"endColumn":28,"fix":"1910"},{"ruleId":"1746","severity":1,"message":"1747","line":550,"column":22,"nodeType":"1748","messageId":"1749","endLine":550,"endColumn":28},{"ruleId":"1874","severity":2,"message":"1875","line":553,"column":16,"nodeType":"1748","messageId":"1877","endLine":553,"endColumn":22,"fix":"1911"},{"ruleId":"1746","severity":1,"message":"1747","line":553,"column":16,"nodeType":"1748","messageId":"1749","endLine":553,"endColumn":22},{"ruleId":"1746","severity":1,"message":"1747","line":554,"column":22,"nodeType":"1748","messageId":"1749","endLine":554,"endColumn":28},{"ruleId":"1874","severity":2,"message":"1875","line":554,"column":22,"nodeType":"1748","messageId":"1877","endLine":554,"endColumn":28,"fix":"1912"},{"ruleId":"1874","severity":2,"message":"1875","line":558,"column":22,"nodeType":"1748","messageId":"1877","endLine":558,"endColumn":28,"fix":"1913"},{"ruleId":"1746","severity":1,"message":"1747","line":558,"column":22,"nodeType":"1748","messageId":"1749","endLine":558,"endColumn":28},{"ruleId":"1746","severity":1,"message":"1747","line":559,"column":16,"nodeType":"1748","messageId":"1749","endLine":559,"endColumn":22},{"ruleId":"1874","severity":2,"message":"1875","line":559,"column":16,"nodeType":"1748","messageId":"1877","endLine":559,"endColumn":22,"fix":"1914"},{"ruleId":"1746","severity":1,"message":"1747","line":561,"column":22,"nodeType":"1748","messageId":"1749","endLine":561,"endColumn":28},{"ruleId":"1874","severity":2,"message":"1875","line":561,"column":22,"nodeType":"1748","messageId":"1877","endLine":561,"endColumn":28,"fix":"1915"},{"ruleId":"1874","severity":2,"message":"1875","line":568,"column":22,"nodeType":"1748","messageId":"1877","endLine":568,"endColumn":28,"fix":"1916"},{"ruleId":"1746","severity":1,"message":"1747","line":568,"column":22,"nodeType":"1748","messageId":"1749","endLine":568,"endColumn":28},{"ruleId":"1881","severity":1,"message":"1882","line":575,"column":20,"nodeType":"1883","messageId":"1884","endLine":575,"endColumn":74},{"ruleId":"1874","severity":2,"message":"1875","line":581,"column":22,"nodeType":"1748","messageId":"1877","endLine":581,"endColumn":28,"fix":"1917"},{"ruleId":"1746","severity":1,"message":"1747","line":581,"column":22,"nodeType":"1748","messageId":"1749","endLine":581,"endColumn":28},{"ruleId":"1881","severity":1,"message":"1882","line":587,"column":23,"nodeType":"1883","messageId":"1884","endLine":587,"endColumn":50},{"ruleId":"1874","severity":2,"message":"1875","line":593,"column":22,"nodeType":"1748","messageId":"1877","endLine":593,"endColumn":28,"fix":"1918"},{"ruleId":"1746","severity":1,"message":"1747","line":593,"column":22,"nodeType":"1748","messageId":"1749","endLine":593,"endColumn":28},{"ruleId":"1874","severity":2,"message":"1875","line":598,"column":22,"nodeType":"1748","messageId":"1877","endLine":598,"endColumn":28,"fix":"1919"},{"ruleId":"1746","severity":1,"message":"1747","line":598,"column":22,"nodeType":"1748","messageId":"1749","endLine":598,"endColumn":28},{"ruleId":"1746","severity":1,"message":"1747","line":600,"column":16,"nodeType":"1748","messageId":"1749","endLine":600,"endColumn":22},{"ruleId":"1874","severity":2,"message":"1875","line":600,"column":16,"nodeType":"1748","messageId":"1877","endLine":600,"endColumn":22,"fix":"1920"},{"ruleId":"1746","severity":1,"message":"1747","line":619,"column":24,"nodeType":"1748","messageId":"1749","endLine":619,"endColumn":45},{"ruleId":"1746","severity":1,"message":"1747","line":620,"column":30,"nodeType":"1748","messageId":"1749","endLine":620,"endColumn":51},{"ruleId":"1746","severity":1,"message":"1747","line":623,"column":24,"nodeType":"1748","messageId":"1749","endLine":623,"endColumn":45},{"ruleId":"1746","severity":1,"message":"1747","line":624,"column":30,"nodeType":"1748","messageId":"1749","endLine":624,"endColumn":51},{"ruleId":"1746","severity":1,"message":"1747","line":628,"column":30,"nodeType":"1748","messageId":"1749","endLine":628,"endColumn":51},{"ruleId":"1746","severity":1,"message":"1747","line":629,"column":24,"nodeType":"1748","messageId":"1749","endLine":629,"endColumn":45},{"ruleId":"1746","severity":1,"message":"1747","line":631,"column":30,"nodeType":"1748","messageId":"1749","endLine":631,"endColumn":51},{"ruleId":"1746","severity":1,"message":"1747","line":638,"column":30,"nodeType":"1748","messageId":"1749","endLine":638,"endColumn":51},{"ruleId":"1746","severity":1,"message":"1747","line":643,"column":30,"nodeType":"1748","messageId":"1749","endLine":643,"endColumn":51},{"ruleId":"1746","severity":1,"message":"1747","line":646,"column":30,"nodeType":"1748","messageId":"1749","endLine":646,"endColumn":51},{"ruleId":"1746","severity":1,"message":"1747","line":647,"column":24,"nodeType":"1748","messageId":"1749","endLine":647,"endColumn":45},{"ruleId":"1881","severity":1,"message":"1882","line":656,"column":31,"nodeType":"1883","messageId":"1884","endLine":656,"endColumn":42},{"ruleId":"1746","severity":1,"message":"1747","line":661,"column":24,"nodeType":"1748","messageId":"1749","endLine":661,"endColumn":28},{"ruleId":"1746","severity":1,"message":"1747","line":668,"column":33,"nodeType":"1748","messageId":"1749","endLine":668,"endColumn":39},{"ruleId":"1881","severity":1,"message":"1882","line":692,"column":31,"nodeType":"1883","messageId":"1884","endLine":692,"endColumn":42},{"ruleId":"1746","severity":1,"message":"1747","line":693,"column":35,"nodeType":"1748","messageId":"1749","endLine":693,"endColumn":42},{"ruleId":"1746","severity":1,"message":"1747","line":695,"column":33,"nodeType":"1748","messageId":"1749","endLine":695,"endColumn":39},{"ruleId":"1881","severity":1,"message":"1882","line":3,"column":24,"nodeType":"1883","messageId":"1884","endLine":3,"endColumn":29},{"ruleId":"1714","severity":1,"message":"1921","line":9,"column":3,"nodeType":"1716","endLine":9,"endColumn":29},{"ruleId":"1738","severity":1,"message":"1739","line":144,"column":14,"nodeType":"1740","messageId":"1741","endLine":144,"endColumn":17},{"ruleId":"1746","severity":1,"message":"1747","line":207,"column":31,"nodeType":"1748","messageId":"1749","endLine":207,"endColumn":43},{"ruleId":"1746","severity":1,"message":"1747","line":232,"column":35,"nodeType":"1748","messageId":"1749","endLine":232,"endColumn":56},{"ruleId":"1746","severity":1,"message":"1747","line":245,"column":34,"nodeType":"1748","messageId":"1749","endLine":245,"endColumn":46},{"ruleId":"1738","severity":1,"message":"1739","line":389,"column":39,"nodeType":"1740","messageId":"1741","endLine":389,"endColumn":42},{"ruleId":"1746","severity":1,"message":"1747","line":547,"column":10,"nodeType":"1748","messageId":"1749","endLine":547,"endColumn":38},{"ruleId":"1738","severity":1,"message":"1739","line":3,"column":42,"nodeType":"1740","messageId":"1741","endLine":3,"endColumn":45},{"ruleId":"1738","severity":1,"message":"1739","line":34,"column":71,"nodeType":"1740","messageId":"1741","endLine":34,"endColumn":74},{"ruleId":"1742","severity":1,"message":"1922","line":211,"column":3,"nodeType":"1753","messageId":"1745","endLine":211,"endColumn":61},{"ruleId":"1742","severity":1,"message":"1923","line":213,"column":3,"nodeType":"1753","messageId":"1745","endLine":215,"endColumn":5},{"ruleId":"1742","severity":1,"message":"1924","line":217,"column":3,"nodeType":"1753","messageId":"1745","endLine":219,"endColumn":5},{"ruleId":"1738","severity":1,"message":"1739","line":100,"column":49,"nodeType":"1740","messageId":"1741","endLine":100,"endColumn":52},{"ruleId":"1738","severity":1,"message":"1739","line":233,"column":12,"nodeType":"1740","messageId":"1741","endLine":233,"endColumn":15},{"ruleId":"1738","severity":1,"message":"1739","line":14,"column":6,"nodeType":"1740","messageId":"1741","endLine":14,"endColumn":9},{"ruleId":"1738","severity":1,"message":"1739","line":140,"column":40,"nodeType":"1740","messageId":"1741","endLine":140,"endColumn":43},{"ruleId":"1746","severity":1,"message":"1747","line":247,"column":41,"nodeType":"1748","messageId":"1749","endLine":247,"endColumn":66},{"ruleId":"1746","severity":1,"message":"1747","line":247,"column":41,"nodeType":"1748","messageId":"1749","endLine":247,"endColumn":65},{"ruleId":"1746","severity":1,"message":"1747","line":314,"column":14,"nodeType":"1748","messageId":"1749","endLine":314,"endColumn":39},{"ruleId":"1746","severity":1,"message":"1747","line":314,"column":14,"nodeType":"1748","messageId":"1749","endLine":314,"endColumn":38},{"ruleId":"1746","severity":1,"message":"1747","line":90,"column":26,"nodeType":"1748","messageId":"1749","endLine":90,"endColumn":31},{"ruleId":"1746","severity":1,"message":"1747","line":90,"column":26,"nodeType":"1748","messageId":"1749","endLine":90,"endColumn":30},{"ruleId":"1746","severity":1,"message":"1747","line":156,"column":13,"nodeType":"1748","messageId":"1749","endLine":156,"endColumn":18},{"ruleId":"1746","severity":1,"message":"1747","line":156,"column":13,"nodeType":"1748","messageId":"1749","endLine":156,"endColumn":17},{"ruleId":"1746","severity":1,"message":"1747","line":332,"column":7,"nodeType":"1748","messageId":"1749","endLine":332,"endColumn":17},{"ruleId":"1746","severity":1,"message":"1747","line":332,"column":7,"nodeType":"1748","messageId":"1749","endLine":332,"endColumn":16},{"ruleId":"1714","severity":1,"message":"1925","line":391,"column":9,"nodeType":"1716","endLine":391,"endColumn":21},{"ruleId":"1746","severity":1,"message":"1747","line":700,"column":48,"nodeType":"1748","messageId":"1749","endLine":700,"endColumn":82},{"ruleId":"1746","severity":1,"message":"1747","line":700,"column":48,"nodeType":"1748","messageId":"1749","endLine":700,"endColumn":81},{"ruleId":"1746","severity":1,"message":"1747","line":723,"column":40,"nodeType":"1748","messageId":"1749","endLine":723,"endColumn":74},{"ruleId":"1746","severity":1,"message":"1747","line":723,"column":40,"nodeType":"1748","messageId":"1749","endLine":723,"endColumn":73},{"ruleId":"1746","severity":1,"message":"1747","line":187,"column":14,"nodeType":"1748","messageId":"1749","endLine":187,"endColumn":47},{"ruleId":"1746","severity":1,"message":"1747","line":213,"column":26,"nodeType":"1748","messageId":"1749","endLine":213,"endColumn":76},{"ruleId":"1746","severity":1,"message":"1747","line":213,"column":26,"nodeType":"1748","messageId":"1749","endLine":213,"endColumn":75},{"ruleId":"1738","severity":1,"message":"1739","line":323,"column":17,"nodeType":"1740","messageId":"1741","endLine":323,"endColumn":20},{"ruleId":"1738","severity":1,"message":"1739","line":7,"column":18,"nodeType":"1740","messageId":"1741","endLine":7,"endColumn":21},{"ruleId":"1926","severity":1,"message":"1927","line":297,"column":21,"nodeType":"1883","messageId":"1928","endLine":306,"endColumn":16},{"ruleId":"1926","severity":1,"message":"1927","line":307,"column":22,"nodeType":"1883","messageId":"1928","endLine":310,"endColumn":16},{"ruleId":"1714","severity":1,"message":"1929","line":1,"column":10,"nodeType":"1716","endLine":1,"endColumn":44},{"ruleId":"1738","severity":1,"message":"1739","line":10,"column":19,"nodeType":"1740","messageId":"1741","endLine":10,"endColumn":22},{"ruleId":"1738","severity":1,"message":"1739","line":26,"column":19,"nodeType":"1740","messageId":"1741","endLine":26,"endColumn":22},{"ruleId":"1714","severity":1,"message":"1930","line":2,"column":3,"nodeType":"1716","endLine":2,"endColumn":53},{"ruleId":"1714","severity":1,"message":"1931","line":4,"column":3,"nodeType":"1716","endLine":4,"endColumn":20},{"ruleId":"1714","severity":1,"message":"1932","line":8,"column":3,"nodeType":"1716","endLine":8,"endColumn":31},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","'runTestFirebaseConnectionDatabase' is defined but never used.","'runTestFirebaseCredentialsStorage' is defined but never used.","'runTestCAIdentityWithAuthorityProviderGeneratorV1' is defined but never used.","'runTestCAIdentityV1' is defined but never used.","'runTestCAConnectionFirebase' is defined but never used.","'runTestCAConnectionFirebaseCryptoCredentialsGenerateByFirebaseAuthProvider' is defined but never used.","'runTestErrorExtended' is defined but never used.","'runTestSwarmConnection' is defined but never used.","'runTestSwarmConnectionIPFS' is defined but never used.","'runTestSwarmStoreOrbitDBConnection' is defined but never used.","'runTestValidateMessagingTimestampsTest' is defined but never used.","'runTestHttpRequest' is defined but never used.","'runTestPseudoNtpClass' is defined but never used.","'runTestClientTimeSynced' is defined but never used.","'runSwarmMessageFieldsValidator' is defined but never used.","'runTestCAIdentityV2' is defined but never used.","'runCACredentialsIdentityStorageTest' is defined but never used.","'runTestCAConnectionsUtilsValidators' is defined but never used.","'runTestCommonUtilsURL' is defined but never used.","'runTestCAConnectionsPoolTest' is defined but never used.","'any' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny","@typescript-eslint/member-ordering","Member constructor should be declared before all static method definitions.","MethodDefinition","incorrectOrder","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","'result' is assigned a value but never used.","'ownValueOf' is defined but never used.","Member baseUrl should be declared before all static method definitions.","ClassProperty","Member url should be declared before all static method definitions.","Member method should be declared before all static method definitions.","Member mode should be declared before all static method definitions.","Member token should be declared before all static method definitions.","Member contentType should be declared before all static method definitions.","Member queryStringParams should be declared before all static method definitions.","Member credentials should be declared before all static method definitions.","'thirdParam' is assigned a value but never used.","Member queue should be declared before all static method definitions.","Member itemsInBatch should be declared before all static method definitions.","Member intervalMs should be declared before all static method definitions.","Member lastEmitMs should be declared before all static method definitions.","Member interval should be declared before all static method definitions.","Member status should be declared before all static method definitions.","Member errorOccurred should be declared before all static method definitions.","Member statusEmitter should be declared before all static method definitions.","@typescript-eslint/no-useless-constructor","Useless constructor.","@typescript-eslint/no-empty-function","Unexpected empty constructor.","FunctionExpression","unexpected","'TCACryptoKeyPairsExported' is defined but never used.","'validateUserIdentityDescriptionVersion' is defined but never used.","'TCentralAuthorityUserIdentity' is defined but never used.","'CA_USER_IDENTITY_VERSIONS' is defined but never used.","'CA_CONNECTION_STATUS' is defined but never used.","Member constructor should be declared before all instance method definitions.","'firebase' is defined but never used.","'TCACryptoPubilicKeys' is defined but never used.","'CA_CRYPTO_KEY_PAIRS_STRINGIFIED_MIN_LENGTH' is defined but never used.","Member storageName should be declared before all static method definitions.","Member storageNameAppendLog should be declared before all static method definitions.","Member options should be declared before all static method definitions.","Member dumpIntervalMs should be declared before all static method definitions.","Member dumpIntervalRunning should be declared before all static method definitions.","Member secretStorageConnection should be declared before all static method definitions.","Member tableData should be declared before all static method definitions.","Member appendData should be declared before all static method definitions.","Member appendDataTemp should be declared before all static method definitions.","Member storageType should be declared before all static method definitions.","'status' is assigned a value but never used.","'TSecretStoreConfiguration' is defined but never used.","'encodingDown' is defined but never used.","'ownKeyOf' is defined but never used.","Member AuthStorageProvider should be declared before all static method definitions.","Member KEY_IN_AUTH_STORAGE should be declared before all static method definitions.","Member k should be declared before all static method definitions.","Member storageProvider should be declared before all static method definitions.","Member isStorageProviderSupportUInt8Array should be declared before all static method definitions.","Member authStorageProvider should be declared before all static method definitions.","Member storageProviderName should be declared before all static method definitions.","Member dbName should be declared before all static method definitions.","'TPASSWORD_ENCRYPTION_KEY_IMPORT_NATIVE_SUPPORTED_TYPES' is defined but never used.","'Multiaddr' is defined but never used.","'SWARM_CONNECTION_SUBCLASS_IPFS_CONFIG_DELEGATE_BOOTSTRAP_MULTIADDRS' is defined but never used.","Member connection should be declared before all instance method definitions.","Member options should be declared before all instance method definitions.","'CentralAuthorityIdentity' is defined but never used.","Member _isPublic should be declared before all static method definitions.","Member _grantAccessCallback should be declared before all static method definitions.","Member _orbitdb should be declared before all static method definitions.","Member _options should be declared before all static method definitions.","Member options should be declared before all constructor definitions.","Member orbitDb should be declared before all constructor definitions.","Member database should be declared before all constructor definitions.","Member _keystore should be declared before all static method definitions.","Unexpected empty async method 'load'.","'IdentityProvider' is defined but never used.","Member isLoadedCustomAccessController should be declared before all static method definitions.","Member isReady should be declared before all static method definitions.","Member isClosed should be declared before all static method definitions.","Member userId should be declared before all static method definitions.","Member directory should be declared before all static method definitions.","Member identity should be declared before all static method definitions.","Member connectionOptions should be declared before all static method definitions.","Member ipfs should be declared before all static method definitions.","Member orbitDb should be declared before all static method definitions.","Member databases should be declared before all static method definitions.","Member identityKeystore should be declared before all static method definitions.","Member storage should be declared before all static method definitions.","no-useless-rename","Destructuring assignment databases unnecessarily renamed.","Property",{"range":"1933","text":"1934"},"'encryptNative' is defined but never used.","'decryptNative' is defined but never used.","'exportKeyPairAsString' is defined but never used.","'importKeyPairFromString' is defined but never used.","'encryptToString' is defined but never used.","'decryptFromString' is defined but never used.","'encryptToTypedArray' is defined but never used.","'calculateHash' is defined but never used.","'arrayBufferToBase64' is defined but never used.","'testEncryption' is assigned a value but never used.","'Mocha' is defined but never used.","Member types should be declared before all constructor definitions.","Member ready should be declared before all constructor definitions.","Member repo should be declared before all constructor definitions.","Member bootstrap should be declared before all constructor definitions.","Member config should be declared before all constructor definitions.","Member block should be declared before all constructor definitions.","Member object should be declared before all constructor definitions.","Member dag should be declared before all constructor definitions.","Member libp2p should be declared before all constructor definitions.","Member swarm should be declared before all constructor definitions.","Member files should be declared before all constructor definitions.","Member bitswap should be declared before all constructor definitions.","Member pubsub should be declared before all constructor definitions.","Member status should be declared before all constructor definitions.","'isJWK' is defined but never used.","'getJWK' is defined but never used.","'exportKey' is defined but never used.","'typedArrayToString' is defined but never used.","'TPASSWORD_ENCRYPTION_SUPPORTES_SALT_NATIVE_TYPES' is defined but never used.","'PASSWORD_ENCRYPTION_UTILS_KEY_GENERATION_KEY_SALT_GENERATED_LENGTH' is defined but never used.","'PASSWORD_ENCRYPTION_UTILS_ENCRYPTION_INITIALIZATION_VECTOR_LENGTH' is defined but never used.","'TCRYPTO_UTIL_ENCRYPT_KEY_TYPES' is defined but never used.","'decodeDOMStringToArrayBuffer' is defined but never used.","'TTypedArrays' is defined but never used.","@typescript-eslint/no-unnecessary-type-assertion","This assertion is unnecessary since it does not change the type of the expression.","TSAsExpression","unnecessaryAssertion",{"range":"1935","text":"1936"},{"range":"1937","text":"1936"},"'generateCryptoCredentials' is defined but never used.","@typescript-eslint/explicit-function-return-type","Missing return type on function.","ArrowFunctionExpression","missingReturnType","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","'credentials' is assigned a value but never used.","FunctionDeclaration","@typescript-eslint/unbound-method","Avoid referencing unbound methods which may cause unintentional scoping of `this`.","MemberExpression","unbound","Parsing error: \"parserOptions.project\" has been set for @typescript-eslint/parser.\nThe file does not match your project config: src/test/nodejs-helpers.test/nodejs-helpers.test.firebase/nodejs-helpers.test.firebase.js.\nThe file must be included in at least one of the projects provided.","'importPasswordKeyFromString' is defined but never used.","'exportPasswordKey' is defined but never used.","'encryptDataToArrayBuffer' is defined but never used.","'decryptDataWithKeyNative' is defined but never used.","'testValue' is assigned a value but never used.","prefer-const","'readyEmitted' is never reassigned. Use 'const' instead.","useConst",{"range":"1938","text":"1939"},{"range":"1940","text":"1939"},{"range":"1941","text":"1939"},{"range":"1942","text":"1939"},{"range":"1943","text":"1939"},{"range":"1944","text":"1939"},{"range":"1945","text":"1936"},{"range":"1946","text":"1936"},{"range":"1947","text":"1936"},{"range":"1948","text":"1936"},{"range":"1949","text":"1936"},{"range":"1950","text":"1936"},{"range":"1951","text":"1936"},{"range":"1952","text":"1936"},{"range":"1953","text":"1936"},{"range":"1954","text":"1936"},{"range":"1955","text":"1936"},{"range":"1956","text":"1936"},"'TPseudoNTPClassResponseRaw' is defined but never used.","Member validateUserIdentifier should be declared before all constructor definitions.","Member validatePayload should be declared before all constructor definitions.","Member validateTimestamp should be declared before all constructor definitions.","'signInResult' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'errorMessage'.","unsafeRefs","'ICAConnectionConfigurationFirebase' is defined but never used.","'TCentralAuthorityCredentialsStorageAuthCredentials' is defined but never used.","'TCACryptoKeyPairs' is defined but never used.","'TCAuthProviderUserIdentifier' is defined but never used.",[27905,27925],"databases",[9411,9435],"",[10219,10243],[7072,7075],"const",[10363,10366],[15013,15016],[17212,17215],[19488,19491],[23003,23006],[26227,26228],[26359,26360],[26466,26467],[26598,26599],[26714,26715],[26772,26773],[26981,26982],[27289,27290],[27701,27702],[28010,28011],[28178,28179],[28286,28287]]